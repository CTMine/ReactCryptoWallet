{"dependencies":[{"name":"component-emitter","data":{"isAsync":false}},{"name":"sc-channel","data":{"isAsync":false}},{"name":"./response","data":{"isAsync":false}},{"name":"./auth","data":{"isAsync":false}},{"name":"sc-formatter","data":{"isAsync":false}},{"name":"./sctransport","data":{"isAsync":false}},{"name":"querystring","data":{"isAsync":false}},{"name":"linked-list","data":{"isAsync":false}},{"name":"base-64","data":{"isAsync":false}},{"name":"clone","data":{"isAsync":false}},{"name":"sc-errors","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Emitter = _$$_REQUIRE(_dependencyMap[0], \"component-emitter\");\n\n  var SCChannel = _$$_REQUIRE(_dependencyMap[1], \"sc-channel\").SCChannel;\n\n  var Response = _$$_REQUIRE(_dependencyMap[2], \"./response\").Response;\n\n  var AuthEngine = _$$_REQUIRE(_dependencyMap[3], \"./auth\").AuthEngine;\n\n  var formatter = _$$_REQUIRE(_dependencyMap[4], \"sc-formatter\");\n\n  var SCTransport = _$$_REQUIRE(_dependencyMap[5], \"./sctransport\").SCTransport;\n\n  var querystring = _$$_REQUIRE(_dependencyMap[6], \"querystring\");\n\n  var LinkedList = _$$_REQUIRE(_dependencyMap[7], \"linked-list\");\n\n  var base64 = _$$_REQUIRE(_dependencyMap[8], \"base-64\");\n\n  var clone = _$$_REQUIRE(_dependencyMap[9], \"clone\");\n\n  var scErrors = _$$_REQUIRE(_dependencyMap[10], \"sc-errors\");\n\n  var InvalidArgumentsError = scErrors.InvalidArgumentsError;\n  var InvalidMessageError = scErrors.InvalidMessageError;\n  var InvalidActionError = scErrors.InvalidActionError;\n  var SocketProtocolError = scErrors.SocketProtocolError;\n  var TimeoutError = scErrors.TimeoutError;\n  var BadConnectionError = scErrors.BadConnectionError;\n  var isBrowser = typeof window !== 'undefined';\n\n  var SCClientSocket = function SCClientSocket(opts) {\n    var self = this;\n    Emitter.call(this);\n    this.id = null;\n    this.state = this.CLOSED;\n    this.authState = this.UNAUTHENTICATED;\n    this.signedAuthToken = null;\n    this.authToken = null;\n    this.pendingReconnect = false;\n    this.pendingReconnectTimeout = null;\n    this.preparingPendingSubscriptions = false;\n    this.clientId = opts.clientId;\n    this.connectTimeout = opts.connectTimeout;\n    this.ackTimeout = opts.ackTimeout;\n    this.channelPrefix = opts.channelPrefix || null;\n    this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;\n    this.authTokenName = opts.authTokenName;\n    this.pingTimeout = this.ackTimeout;\n    this.pingTimeoutDisabled = !!opts.pingTimeoutDisabled;\n    this.active = true;\n    this._clientMap = opts.clientMap || {};\n    var maxTimeout = Math.pow(2, 31) - 1;\n\n    var verifyDuration = function verifyDuration(propertyName) {\n      if (self[propertyName] > maxTimeout) {\n        throw new InvalidArgumentsError('The ' + propertyName + ' value provided exceeded the maximum amount allowed');\n      }\n    };\n\n    verifyDuration('connectTimeout');\n    verifyDuration('ackTimeout');\n    this._localEvents = {\n      'connect': 1,\n      'connectAbort': 1,\n      'close': 1,\n      'disconnect': 1,\n      'message': 1,\n      'error': 1,\n      'raw': 1,\n      'kickOut': 1,\n      'subscribe': 1,\n      'unsubscribe': 1,\n      'subscribeStateChange': 1,\n      'authStateChange': 1,\n      'authenticate': 1,\n      'deauthenticate': 1,\n      'removeAuthToken': 1,\n      'subscribeRequest': 1\n    };\n    this.connectAttempts = 0;\n    this._emitBuffer = new LinkedList();\n    this.channels = {};\n    this.options = opts;\n    this._cid = 1;\n\n    this.options.callIdGenerator = function () {\n      return self._cid++;\n    };\n\n    if (this.options.autoReconnect) {\n      if (this.options.autoReconnectOptions == null) {\n        this.options.autoReconnectOptions = {};\n      }\n\n      var reconnectOptions = this.options.autoReconnectOptions;\n\n      if (reconnectOptions.initialDelay == null) {\n        reconnectOptions.initialDelay = 10000;\n      }\n\n      if (reconnectOptions.randomness == null) {\n        reconnectOptions.randomness = 10000;\n      }\n\n      if (reconnectOptions.multiplier == null) {\n        reconnectOptions.multiplier = 1.5;\n      }\n\n      if (reconnectOptions.maxDelay == null) {\n        reconnectOptions.maxDelay = 60000;\n      }\n    }\n\n    if (this.options.subscriptionRetryOptions == null) {\n      this.options.subscriptionRetryOptions = {};\n    }\n\n    if (this.options.authEngine) {\n      this.auth = this.options.authEngine;\n    } else {\n      this.auth = new AuthEngine();\n    }\n\n    if (this.options.codecEngine) {\n      this.codec = this.options.codecEngine;\n    } else {\n      this.codec = formatter;\n    }\n\n    if (this.options.protocol) {\n      var protocolOptionError = new InvalidArgumentsError('The \"protocol\" option' + ' does not affect socketcluster-client. If you want to utilize SSL/TLS' + ' - use \"secure\" option instead');\n\n      this._onSCError(protocolOptionError);\n    }\n\n    this.options.path = this.options.path.replace(/\\/$/, '') + '/';\n    this.options.query = opts.query || {};\n\n    if (typeof this.options.query === 'string') {\n      this.options.query = querystring.parse(this.options.query);\n    }\n\n    this._channelEmitter = new Emitter();\n\n    this._unloadHandler = function () {\n      self.disconnect();\n    };\n\n    if (isBrowser && this.disconnectOnUnload && global.addEventListener) {\n      global.addEventListener('beforeunload', this._unloadHandler, false);\n    }\n\n    this._clientMap[this.clientId] = this;\n\n    if (this.options.autoConnect) {\n      this.connect();\n    }\n  };\n\n  SCClientSocket.prototype = Object.create(Emitter.prototype);\n  SCClientSocket.CONNECTING = SCClientSocket.prototype.CONNECTING = SCTransport.prototype.CONNECTING;\n  SCClientSocket.OPEN = SCClientSocket.prototype.OPEN = SCTransport.prototype.OPEN;\n  SCClientSocket.CLOSED = SCClientSocket.prototype.CLOSED = SCTransport.prototype.CLOSED;\n  SCClientSocket.AUTHENTICATED = SCClientSocket.prototype.AUTHENTICATED = 'authenticated';\n  SCClientSocket.UNAUTHENTICATED = SCClientSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\n  SCClientSocket.PENDING = SCClientSocket.prototype.PENDING = 'pending';\n  SCClientSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\n  SCClientSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\n  SCClientSocket.prototype._privateEventHandlerMap = {\n    '#publish': function publish(data) {\n      var undecoratedChannelName = this._undecorateChannelName(data.channel);\n\n      var isSubscribed = this.isSubscribed(undecoratedChannelName, true);\n\n      if (isSubscribed) {\n        this._channelEmitter.emit(undecoratedChannelName, data.data);\n      }\n    },\n    '#kickOut': function kickOut(data) {\n      var undecoratedChannelName = this._undecorateChannelName(data.channel);\n\n      var channel = this.channels[undecoratedChannelName];\n\n      if (channel) {\n        Emitter.prototype.emit.call(this, 'kickOut', data.message, undecoratedChannelName);\n        channel.emit('kickOut', data.message, undecoratedChannelName);\n\n        this._triggerChannelUnsubscribe(channel);\n      }\n    },\n    '#setAuthToken': function setAuthToken(data, response) {\n      var self = this;\n\n      if (data) {\n        var triggerAuthenticate = function triggerAuthenticate(err) {\n          if (err) {\n            response.error(err);\n\n            self._onSCError(err);\n          } else {\n            self._changeToAuthenticatedState(data.token);\n\n            response.end();\n          }\n        };\n\n        this.auth.saveToken(this.authTokenName, data.token, {}, triggerAuthenticate);\n      } else {\n        response.error(new InvalidMessageError('No token data provided by #setAuthToken event'));\n      }\n    },\n    '#removeAuthToken': function removeAuthToken(data, response) {\n      var self = this;\n      this.auth.removeToken(this.authTokenName, function (err, oldToken) {\n        if (err) {\n          response.error(err);\n\n          self._onSCError(err);\n        } else {\n          Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\n\n          self._changeToUnauthenticatedStateAndClearTokens();\n\n          response.end();\n        }\n      });\n    },\n    '#disconnect': function disconnect(data) {\n      this.transport.close(data.code, data.data);\n    }\n  };\n\n  SCClientSocket.prototype.getState = function () {\n    return this.state;\n  };\n\n  SCClientSocket.prototype.getBytesReceived = function () {\n    return this.transport.getBytesReceived();\n  };\n\n  SCClientSocket.prototype.deauthenticate = function (callback) {\n    var self = this;\n    this.auth.removeToken(this.authTokenName, function (err, oldToken) {\n      if (err) {\n        self._onSCError(err);\n      } else {\n        Emitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\n\n        if (self.state !== self.CLOSED) {\n          self.emit('#removeAuthToken');\n        }\n\n        self._changeToUnauthenticatedStateAndClearTokens();\n      }\n\n      callback && callback(err);\n    });\n  };\n\n  SCClientSocket.prototype.connect = SCClientSocket.prototype.open = function () {\n    var self = this;\n\n    if (!this.active) {\n      var error = new InvalidActionError('Cannot connect a destroyed client');\n\n      this._onSCError(error);\n\n      return;\n    }\n\n    if (this.state === this.CLOSED) {\n      this.pendingReconnect = false;\n      this.pendingReconnectTimeout = null;\n      clearTimeout(this._reconnectTimeoutRef);\n      this.state = this.CONNECTING;\n      Emitter.prototype.emit.call(this, 'connecting');\n\n      if (this.transport) {\n        this.transport.off();\n      }\n\n      this.transport = new SCTransport(this.auth, this.codec, this.options);\n      this.transport.on('open', function (status) {\n        self.state = self.OPEN;\n\n        self._onSCOpen(status);\n      });\n      this.transport.on('error', function (err) {\n        self._onSCError(err);\n      });\n      this.transport.on('close', function (code, data) {\n        self.state = self.CLOSED;\n\n        self._onSCClose(code, data);\n      });\n      this.transport.on('openAbort', function (code, data) {\n        self.state = self.CLOSED;\n\n        self._onSCClose(code, data, true);\n      });\n      this.transport.on('event', function (event, data, res) {\n        self._onSCEvent(event, data, res);\n      });\n    }\n  };\n\n  SCClientSocket.prototype.reconnect = function (code, data) {\n    this.disconnect(code, data);\n    this.connect();\n  };\n\n  SCClientSocket.prototype.disconnect = function (code, data) {\n    code = code || 1000;\n\n    if (typeof code !== 'number') {\n      throw new InvalidArgumentsError('If specified, the code argument must be a number');\n    }\n\n    if (this.state === this.OPEN || this.state === this.CONNECTING) {\n      this.transport.close(code, data);\n    } else {\n      this.pendingReconnect = false;\n      this.pendingReconnectTimeout = null;\n      clearTimeout(this._reconnectTimeoutRef);\n    }\n  };\n\n  SCClientSocket.prototype.destroy = function (code, data) {\n    if (isBrowser && global.removeEventListener) {\n      global.removeEventListener('beforeunload', this._unloadHandler, false);\n    }\n\n    this.active = false;\n    this.disconnect(code, data);\n    delete this._clientMap[this.clientId];\n  };\n\n  SCClientSocket.prototype._changeToUnauthenticatedStateAndClearTokens = function () {\n    if (this.authState !== this.UNAUTHENTICATED) {\n      var oldState = this.authState;\n      var oldSignedToken = this.signedAuthToken;\n      this.authState = this.UNAUTHENTICATED;\n      this.signedAuthToken = null;\n      this.authToken = null;\n      var stateChangeData = {\n        oldState: oldState,\n        newState: this.authState\n      };\n      Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\n      Emitter.prototype.emit.call(this, 'deauthenticate', oldSignedToken);\n    }\n  };\n\n  SCClientSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {\n    this.signedAuthToken = signedAuthToken;\n    this.authToken = this._extractAuthTokenData(signedAuthToken);\n\n    if (this.authState !== this.AUTHENTICATED) {\n      var oldState = this.authState;\n      this.authState = this.AUTHENTICATED;\n      var stateChangeData = {\n        oldState: oldState,\n        newState: this.authState,\n        signedAuthToken: signedAuthToken,\n        authToken: this.authToken\n      };\n\n      if (!this.preparingPendingSubscriptions) {\n        this.processPendingSubscriptions();\n      }\n\n      Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\n    }\n\n    Emitter.prototype.emit.call(this, 'authenticate', signedAuthToken);\n  };\n\n  SCClientSocket.prototype.decodeBase64 = function (encodedString) {\n    var decodedString;\n\n    if (typeof Buffer === 'undefined') {\n      if (global.atob) {\n        decodedString = global.atob(encodedString);\n      } else {\n        decodedString = base64.decode(encodedString);\n      }\n    } else {\n      var buffer = Buffer.from(encodedString, 'base64');\n      decodedString = buffer.toString('utf8');\n    }\n\n    return decodedString;\n  };\n\n  SCClientSocket.prototype.encodeBase64 = function (decodedString) {\n    var encodedString;\n\n    if (typeof Buffer === 'undefined') {\n      if (global.btoa) {\n        encodedString = global.btoa(decodedString);\n      } else {\n        encodedString = base64.encode(decodedString);\n      }\n    } else {\n      var buffer = Buffer.from(decodedString, 'utf8');\n      encodedString = buffer.toString('base64');\n    }\n\n    return encodedString;\n  };\n\n  SCClientSocket.prototype._extractAuthTokenData = function (signedAuthToken) {\n    var tokenParts = (signedAuthToken || '').split('.');\n    var encodedTokenData = tokenParts[1];\n\n    if (encodedTokenData != null) {\n      var tokenData = encodedTokenData;\n\n      try {\n        tokenData = this.decodeBase64(tokenData);\n        return JSON.parse(tokenData);\n      } catch (e) {\n        return tokenData;\n      }\n    }\n\n    return null;\n  };\n\n  SCClientSocket.prototype.getAuthToken = function () {\n    return this.authToken;\n  };\n\n  SCClientSocket.prototype.getSignedAuthToken = function () {\n    return this.signedAuthToken;\n  };\n\n  SCClientSocket.prototype.authenticate = function (signedAuthToken, callback) {\n    var self = this;\n    this.emit('#authenticate', signedAuthToken, function (err, authStatus) {\n      if (authStatus && authStatus.isAuthenticated != null) {\n        if (authStatus.authError) {\n          authStatus.authError = scErrors.hydrateError(authStatus.authError);\n        }\n      } else {\n        authStatus = {\n          isAuthenticated: self.authState,\n          authError: null\n        };\n      }\n\n      if (err) {\n        if (err.name !== 'BadConnectionError' && err.name !== 'TimeoutError') {\n          self._changeToUnauthenticatedStateAndClearTokens();\n        }\n\n        callback && callback(err, authStatus);\n      } else {\n        self.auth.saveToken(self.authTokenName, signedAuthToken, {}, function (err) {\n          if (err) {\n            self._onSCError(err);\n          }\n\n          if (authStatus.isAuthenticated) {\n            self._changeToAuthenticatedState(signedAuthToken);\n          } else {\n            self._changeToUnauthenticatedStateAndClearTokens();\n          }\n\n          callback && callback(err, authStatus);\n        });\n      }\n    });\n  };\n\n  SCClientSocket.prototype._tryReconnect = function (initialDelay) {\n    var self = this;\n    var exponent = this.connectAttempts++;\n    var reconnectOptions = this.options.autoReconnectOptions;\n    var timeout;\n\n    if (initialDelay == null || exponent > 0) {\n      var initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());\n      timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));\n    } else {\n      timeout = initialDelay;\n    }\n\n    if (timeout > reconnectOptions.maxDelay) {\n      timeout = reconnectOptions.maxDelay;\n    }\n\n    clearTimeout(this._reconnectTimeoutRef);\n    this.pendingReconnect = true;\n    this.pendingReconnectTimeout = timeout;\n    this._reconnectTimeoutRef = setTimeout(function () {\n      self.connect();\n    }, timeout);\n  };\n\n  SCClientSocket.prototype._onSCOpen = function (status) {\n    var self = this;\n    this.preparingPendingSubscriptions = true;\n\n    if (status) {\n      this.id = status.id;\n      this.pingTimeout = status.pingTimeout;\n      this.transport.pingTimeout = this.pingTimeout;\n\n      if (status.isAuthenticated) {\n        this._changeToAuthenticatedState(status.authToken);\n      } else {\n        this._changeToUnauthenticatedStateAndClearTokens();\n      }\n    } else {\n      this._changeToUnauthenticatedStateAndClearTokens();\n    }\n\n    this.connectAttempts = 0;\n\n    if (this.options.autoSubscribeOnConnect) {\n      this.processPendingSubscriptions();\n    }\n\n    Emitter.prototype.emit.call(this, 'connect', status, function () {\n      self.processPendingSubscriptions();\n    });\n\n    if (this.state === this.OPEN) {\n      this._flushEmitBuffer();\n    }\n  };\n\n  SCClientSocket.prototype._onSCError = function (err) {\n    var self = this;\n    setTimeout(function () {\n      if (self.listeners('error').length < 1) {\n        throw err;\n      } else {\n        Emitter.prototype.emit.call(self, 'error', err);\n      }\n    }, 0);\n  };\n\n  SCClientSocket.prototype._suspendSubscriptions = function () {\n    var channel, newState;\n\n    for (var channelName in this.channels) {\n      if (this.channels.hasOwnProperty(channelName)) {\n        channel = this.channels[channelName];\n\n        if (channel.state === channel.SUBSCRIBED || channel.state === channel.PENDING) {\n          newState = channel.PENDING;\n        } else {\n          newState = channel.UNSUBSCRIBED;\n        }\n\n        this._triggerChannelUnsubscribe(channel, newState);\n      }\n    }\n  };\n\n  SCClientSocket.prototype._abortAllPendingEventsDueToBadConnection = function (failureType) {\n    var currentNode = this._emitBuffer.head;\n    var nextNode;\n\n    while (currentNode) {\n      nextNode = currentNode.next;\n      var eventObject = currentNode.data;\n      clearTimeout(eventObject.timeout);\n      delete eventObject.timeout;\n      currentNode.detach();\n      currentNode = nextNode;\n      var callback = eventObject.callback;\n\n      if (callback) {\n        delete eventObject.callback;\n        var errorMessage = \"Event '\" + eventObject.event + \"' was aborted due to a bad connection\";\n        var error = new BadConnectionError(errorMessage, failureType);\n        callback.call(eventObject, error, eventObject);\n      }\n\n      if (eventObject.cid) {\n        this.transport.cancelPendingResponse(eventObject.cid);\n      }\n    }\n  };\n\n  SCClientSocket.prototype._onSCClose = function (code, data, openAbort) {\n    var self = this;\n    this.id = null;\n\n    if (this.transport) {\n      this.transport.off();\n    }\n\n    this.pendingReconnect = false;\n    this.pendingReconnectTimeout = null;\n    clearTimeout(this._reconnectTimeoutRef);\n\n    this._suspendSubscriptions();\n\n    this._abortAllPendingEventsDueToBadConnection(openAbort ? 'connectAbort' : 'disconnect');\n\n    if (this.options.autoReconnect) {\n      if (code === 4000 || code === 4001 || code === 1005) {\n        this._tryReconnect(0);\n      } else if (code !== 1000 && code < 4500) {\n        this._tryReconnect();\n      }\n    }\n\n    if (openAbort) {\n      Emitter.prototype.emit.call(self, 'connectAbort', code, data);\n    } else {\n      Emitter.prototype.emit.call(self, 'disconnect', code, data);\n    }\n\n    Emitter.prototype.emit.call(self, 'close', code, data);\n\n    if (!SCClientSocket.ignoreStatuses[code]) {\n      var closeMessage;\n\n      if (data) {\n        closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + data;\n      } else {\n        closeMessage = 'Socket connection closed with status code ' + code;\n      }\n\n      var err = new SocketProtocolError(SCClientSocket.errorStatuses[code] || closeMessage, code);\n\n      this._onSCError(err);\n    }\n  };\n\n  SCClientSocket.prototype._onSCEvent = function (event, data, res) {\n    var handler = this._privateEventHandlerMap[event];\n\n    if (handler) {\n      handler.call(this, data, res);\n    } else {\n      Emitter.prototype.emit.call(this, event, data, function () {\n        res && res.callback.apply(res, arguments);\n      });\n    }\n  };\n\n  SCClientSocket.prototype.decode = function (message) {\n    return this.transport.decode(message);\n  };\n\n  SCClientSocket.prototype.encode = function (object) {\n    return this.transport.encode(object);\n  };\n\n  SCClientSocket.prototype._flushEmitBuffer = function () {\n    var currentNode = this._emitBuffer.head;\n    var nextNode;\n\n    while (currentNode) {\n      nextNode = currentNode.next;\n      var eventObject = currentNode.data;\n      currentNode.detach();\n      this.transport.emitObject(eventObject);\n      currentNode = nextNode;\n    }\n  };\n\n  SCClientSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {\n    if (eventNode) {\n      eventNode.detach();\n    }\n\n    delete eventObject.timeout;\n    var callback = eventObject.callback;\n\n    if (callback) {\n      delete eventObject.callback;\n      var error = new TimeoutError(\"Event response for '\" + eventObject.event + \"' timed out\");\n      callback.call(eventObject, error, eventObject);\n    }\n\n    if (eventObject.cid) {\n      this.transport.cancelPendingResponse(eventObject.cid);\n    }\n  };\n\n  SCClientSocket.prototype._emit = function (event, data, callback) {\n    var self = this;\n\n    if (this.state === this.CLOSED) {\n      this.connect();\n    }\n\n    var eventObject = {\n      event: event,\n      callback: callback\n    };\n    var eventNode = new LinkedList.Item();\n\n    if (this.options.cloneData) {\n      eventObject.data = clone(data);\n    } else {\n      eventObject.data = data;\n    }\n\n    eventNode.data = eventObject;\n    eventObject.timeout = setTimeout(function () {\n      self._handleEventAckTimeout(eventObject, eventNode);\n    }, this.ackTimeout);\n\n    this._emitBuffer.append(eventNode);\n\n    if (this.state === this.OPEN) {\n      this._flushEmitBuffer();\n    }\n  };\n\n  SCClientSocket.prototype.send = function (data) {\n    this.transport.send(data);\n  };\n\n  SCClientSocket.prototype.emit = function (event, data, callback) {\n    if (this._localEvents[event] == null) {\n      this._emit(event, data, callback);\n    } else if (event === 'error') {\n      Emitter.prototype.emit.call(this, event, data);\n    } else {\n      var error = new InvalidActionError('The \"' + event + '\" event is reserved and cannot be emitted on a client socket');\n\n      this._onSCError(error);\n    }\n  };\n\n  SCClientSocket.prototype.publish = function (channelName, data, callback) {\n    var pubData = {\n      channel: this._decorateChannelName(channelName),\n      data: data\n    };\n    this.emit('#publish', pubData, callback);\n  };\n\n  SCClientSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {\n    var channelName = channel.name;\n\n    if (channel.state !== channel.SUBSCRIBED) {\n      var oldState = channel.state;\n      channel.state = channel.SUBSCRIBED;\n      var stateChangeData = {\n        channel: channelName,\n        oldState: oldState,\n        newState: channel.state,\n        subscriptionOptions: subscriptionOptions\n      };\n      channel.emit('subscribeStateChange', stateChangeData);\n      channel.emit('subscribe', channelName, subscriptionOptions);\n      Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\n      Emitter.prototype.emit.call(this, 'subscribe', channelName, subscriptionOptions);\n    }\n  };\n\n  SCClientSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {\n    var channelName = channel.name;\n    var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\n\n    if (channel.state !== channel.UNSUBSCRIBED && meetsAuthRequirements) {\n      channel.state = channel.UNSUBSCRIBED;\n      channel.emit('subscribeFail', err, channelName, subscriptionOptions);\n      Emitter.prototype.emit.call(this, 'subscribeFail', err, channelName, subscriptionOptions);\n    }\n  };\n\n  SCClientSocket.prototype._cancelPendingSubscribeCallback = function (channel) {\n    if (channel._pendingSubscriptionCid != null) {\n      this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);\n      delete channel._pendingSubscriptionCid;\n    }\n  };\n\n  SCClientSocket.prototype._decorateChannelName = function (channelName) {\n    if (this.channelPrefix) {\n      channelName = this.channelPrefix + channelName;\n    }\n\n    return channelName;\n  };\n\n  SCClientSocket.prototype._undecorateChannelName = function (decoratedChannelName) {\n    if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) === 0) {\n      return decoratedChannelName.replace(this.channelPrefix, '');\n    }\n\n    return decoratedChannelName;\n  };\n\n  SCClientSocket.prototype._trySubscribe = function (channel) {\n    var self = this;\n    var meetsAuthRequirements = !channel.waitForAuth || this.authState === this.AUTHENTICATED;\n\n    if (this.state === this.OPEN && !this.preparingPendingSubscriptions && channel._pendingSubscriptionCid == null && meetsAuthRequirements) {\n      var options = {\n        noTimeout: true\n      };\n      var subscriptionOptions = {\n        channel: this._decorateChannelName(channel.name)\n      };\n\n      if (channel.waitForAuth) {\n        options.waitForAuth = true;\n        subscriptionOptions.waitForAuth = options.waitForAuth;\n      }\n\n      if (channel.data) {\n        subscriptionOptions.data = channel.data;\n      }\n\n      if (channel.batch) {\n        options.batch = true;\n        subscriptionOptions.batch = true;\n      }\n\n      channel._pendingSubscriptionCid = this.transport.emit('#subscribe', subscriptionOptions, options, function (err) {\n        delete channel._pendingSubscriptionCid;\n\n        if (err) {\n          self._triggerChannelSubscribeFail(err, channel, subscriptionOptions);\n        } else {\n          self._triggerChannelSubscribe(channel, subscriptionOptions);\n        }\n      });\n      Emitter.prototype.emit.call(this, 'subscribeRequest', channel.name, subscriptionOptions);\n    }\n  };\n\n  SCClientSocket.prototype.subscribe = function (channelName, options) {\n    var channel = this.channels[channelName];\n\n    if (!channel) {\n      channel = new SCChannel(channelName, this, options);\n      this.channels[channelName] = channel;\n    } else if (options) {\n      channel.setOptions(options);\n    }\n\n    if (channel.state === channel.UNSUBSCRIBED) {\n      channel.state = channel.PENDING;\n\n      this._trySubscribe(channel);\n    }\n\n    return channel;\n  };\n\n  SCClientSocket.prototype._triggerChannelUnsubscribe = function (channel, newState) {\n    var channelName = channel.name;\n    var oldState = channel.state;\n\n    if (newState) {\n      channel.state = newState;\n    } else {\n      channel.state = channel.UNSUBSCRIBED;\n    }\n\n    this._cancelPendingSubscribeCallback(channel);\n\n    if (oldState === channel.SUBSCRIBED) {\n      var stateChangeData = {\n        channel: channelName,\n        oldState: oldState,\n        newState: channel.state\n      };\n      channel.emit('subscribeStateChange', stateChangeData);\n      channel.emit('unsubscribe', channelName);\n      Emitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\n      Emitter.prototype.emit.call(this, 'unsubscribe', channelName);\n    }\n  };\n\n  SCClientSocket.prototype._tryUnsubscribe = function (channel) {\n    var self = this;\n\n    if (this.state === this.OPEN) {\n      var options = {\n        noTimeout: true\n      };\n\n      if (channel.batch) {\n        options.batch = true;\n      }\n\n      this._cancelPendingSubscribeCallback(channel);\n\n      var decoratedChannelName = this._decorateChannelName(channel.name);\n\n      this.transport.emit('#unsubscribe', decoratedChannelName, options);\n    }\n  };\n\n  SCClientSocket.prototype.unsubscribe = function (channelName) {\n    var channel = this.channels[channelName];\n\n    if (channel) {\n      if (channel.state !== channel.UNSUBSCRIBED) {\n        this._triggerChannelUnsubscribe(channel);\n\n        this._tryUnsubscribe(channel);\n      }\n    }\n  };\n\n  SCClientSocket.prototype.channel = function (channelName, options) {\n    var currentChannel = this.channels[channelName];\n\n    if (!currentChannel) {\n      currentChannel = new SCChannel(channelName, this, options);\n      this.channels[channelName] = currentChannel;\n    }\n\n    return currentChannel;\n  };\n\n  SCClientSocket.prototype.destroyChannel = function (channelName) {\n    var channel = this.channels[channelName];\n\n    if (channel) {\n      channel.unwatch();\n      channel.unsubscribe();\n      delete this.channels[channelName];\n    }\n  };\n\n  SCClientSocket.prototype.subscriptions = function (includePending) {\n    var subs = [];\n    var channel, includeChannel;\n\n    for (var channelName in this.channels) {\n      if (this.channels.hasOwnProperty(channelName)) {\n        channel = this.channels[channelName];\n\n        if (includePending) {\n          includeChannel = channel && (channel.state === channel.SUBSCRIBED || channel.state === channel.PENDING);\n        } else {\n          includeChannel = channel && channel.state === channel.SUBSCRIBED;\n        }\n\n        if (includeChannel) {\n          subs.push(channelName);\n        }\n      }\n    }\n\n    return subs;\n  };\n\n  SCClientSocket.prototype.isSubscribed = function (channelName, includePending) {\n    var channel = this.channels[channelName];\n\n    if (includePending) {\n      return !!channel && (channel.state === channel.SUBSCRIBED || channel.state === channel.PENDING);\n    }\n\n    return !!channel && channel.state === channel.SUBSCRIBED;\n  };\n\n  SCClientSocket.prototype.processPendingSubscriptions = function () {\n    var self = this;\n    this.preparingPendingSubscriptions = false;\n    var pendingChannels = [];\n\n    for (var i in this.channels) {\n      if (this.channels.hasOwnProperty(i)) {\n        var channel = this.channels[i];\n\n        if (channel.state === channel.PENDING) {\n          pendingChannels.push(channel);\n        }\n      }\n    }\n\n    pendingChannels.sort(function (a, b) {\n      var ap = a.priority || 0;\n      var bp = b.priority || 0;\n\n      if (ap > bp) {\n        return -1;\n      }\n\n      if (ap < bp) {\n        return 1;\n      }\n\n      return 0;\n    });\n    pendingChannels.forEach(function (channel) {\n      self._trySubscribe(channel);\n    });\n  };\n\n  SCClientSocket.prototype.watch = function (channelName, handler) {\n    if (typeof handler !== 'function') {\n      throw new InvalidArgumentsError('No handler function was provided');\n    }\n\n    this._channelEmitter.on(channelName, handler);\n  };\n\n  SCClientSocket.prototype.unwatch = function (channelName, handler) {\n    if (handler) {\n      this._channelEmitter.removeListener(channelName, handler);\n    } else {\n      this._channelEmitter.removeAllListeners(channelName);\n    }\n  };\n\n  SCClientSocket.prototype.watchers = function (channelName) {\n    return this._channelEmitter.listeners(channelName);\n  };\n\n  module.exports = SCClientSocket;\n});","map":[[2,0,1,0],[2,6,1,4,"Emitter"],[2,13,1,11],[2,16,1,14,"require"],[2,27,1,21],[2,67,1,0],[4,0,2,0],[4,6,2,4,"SCChannel"],[4,15,2,13],[4,18,2,16,"require"],[4,29,2,23],[4,62,2,16],[4,63,2,38,"SCChannel"],[4,72,2,0],[6,0,3,0],[6,6,3,4,"Response"],[6,14,3,12],[6,17,3,15,"require"],[6,28,3,22],[6,61,3,15],[6,62,3,37,"Response"],[6,70,3,0],[8,0,4,0],[8,6,4,4,"AuthEngine"],[8,16,4,14],[8,19,4,17,"require"],[8,30,4,24],[8,59,4,17],[8,60,4,35,"AuthEngine"],[8,70,4,0],[10,0,5,0],[10,6,5,4,"formatter"],[10,15,5,13],[10,18,5,16,"require"],[10,29,5,23],[10,64,5,0],[12,0,6,0],[12,6,6,4,"SCTransport"],[12,17,6,15],[12,20,6,18,"require"],[12,31,6,25],[12,67,6,18],[12,68,6,43,"SCTransport"],[12,79,6,0],[14,0,7,0],[14,6,7,4,"querystring"],[14,17,7,15],[14,20,7,18,"require"],[14,31,7,25],[14,65,7,0],[16,0,8,0],[16,6,8,4,"LinkedList"],[16,16,8,14],[16,19,8,17,"require"],[16,30,8,24],[16,64,8,0],[18,0,9,0],[18,6,9,4,"base64"],[18,12,9,10],[18,15,9,13,"require"],[18,26,9,20],[18,56,9,0],[20,0,10,0],[20,6,10,4,"clone"],[20,11,10,9],[20,14,10,12,"require"],[20,25,10,19],[20,53,10,0],[22,0,12,0],[22,6,12,4,"scErrors"],[22,14,12,12],[22,17,12,15,"require"],[22,28,12,22],[22,61,12,0],[24,0,13,0],[24,6,13,4,"InvalidArgumentsError"],[24,27,13,25],[24,30,13,28,"scErrors"],[24,38,13,36],[24,39,13,37,"InvalidArgumentsError"],[24,60,13,0],[25,0,14,0],[25,6,14,4,"InvalidMessageError"],[25,25,14,23],[25,28,14,26,"scErrors"],[25,36,14,34],[25,37,14,35,"InvalidMessageError"],[25,56,14,0],[26,0,15,0],[26,6,15,4,"InvalidActionError"],[26,24,15,22],[26,27,15,25,"scErrors"],[26,35,15,33],[26,36,15,34,"InvalidActionError"],[26,54,15,0],[27,0,16,0],[27,6,16,4,"SocketProtocolError"],[27,25,16,23],[27,28,16,26,"scErrors"],[27,36,16,34],[27,37,16,35,"SocketProtocolError"],[27,56,16,0],[28,0,17,0],[28,6,17,4,"TimeoutError"],[28,18,17,16],[28,21,17,19,"scErrors"],[28,29,17,27],[28,30,17,28,"TimeoutError"],[28,42,17,0],[29,0,18,0],[29,6,18,4,"BadConnectionError"],[29,24,18,22],[29,27,18,25,"scErrors"],[29,35,18,33],[29,36,18,34,"BadConnectionError"],[29,54,18,0],[30,0,20,0],[30,6,20,4,"isBrowser"],[30,15,20,13],[30,18,20,16],[30,25,20,23,"window"],[30,31,20,16],[30,36,20,34],[30,47,20,0],[32,0,23,0],[32,6,23,4,"SCClientSocket"],[32,20,23,18],[32,23,23,21],[32,32,23,4,"SCClientSocket"],[32,46,23,21],[32,47,23,31,"opts"],[32,51,23,21],[32,53,23,37],[33,0,24,2],[33,8,24,6,"self"],[33,12,24,10],[33,15,24,13],[33,19,24,2],[34,0,26,2,"Emitter"],[34,4,26,2,"Emitter"],[34,11,26,9],[34,12,26,10,"call"],[34,16,26,2],[34,17,26,15],[34,21,26,2],[35,0,28,2],[35,9,28,7,"id"],[35,11,28,2],[35,14,28,12],[35,18,28,2],[36,0,29,2],[36,9,29,7,"state"],[36,14,29,2],[36,17,29,15],[36,22,29,20,"CLOSED"],[36,28,29,2],[37,0,30,2],[37,9,30,7,"authState"],[37,18,30,2],[37,21,30,19],[37,26,30,24,"UNAUTHENTICATED"],[37,41,30,2],[38,0,31,2],[38,9,31,7,"signedAuthToken"],[38,24,31,2],[38,27,31,25],[38,31,31,2],[39,0,32,2],[39,9,32,7,"authToken"],[39,18,32,2],[39,21,32,19],[39,25,32,2],[40,0,33,2],[40,9,33,7,"pendingReconnect"],[40,25,33,2],[40,28,33,26],[40,33,33,2],[41,0,34,2],[41,9,34,7,"pendingReconnectTimeout"],[41,32,34,2],[41,35,34,33],[41,39,34,2],[42,0,35,2],[42,9,35,7,"preparingPendingSubscriptions"],[42,38,35,2],[42,41,35,39],[42,46,35,2],[43,0,36,2],[43,9,36,7,"clientId"],[43,17,36,2],[43,20,36,18,"opts"],[43,24,36,22],[43,25,36,23,"clientId"],[43,33,36,2],[44,0,38,2],[44,9,38,7,"connectTimeout"],[44,23,38,2],[44,26,38,24,"opts"],[44,30,38,28],[44,31,38,29,"connectTimeout"],[44,45,38,2],[45,0,39,2],[45,9,39,7,"ackTimeout"],[45,19,39,2],[45,22,39,20,"opts"],[45,26,39,24],[45,27,39,25,"ackTimeout"],[45,37,39,2],[46,0,40,2],[46,9,40,7,"channelPrefix"],[46,22,40,2],[46,25,40,23,"opts"],[46,29,40,27],[46,30,40,28,"channelPrefix"],[46,43,40,23],[46,47,40,45],[46,51,40,2],[47,0,41,2],[47,9,41,7,"disconnectOnUnload"],[47,27,41,2],[47,30,41,28,"opts"],[47,34,41,32],[47,35,41,33,"disconnectOnUnload"],[47,53,41,28],[47,57,41,55],[47,61,41,28],[47,64,41,62],[47,68,41,28],[47,71,41,69,"opts"],[47,75,41,73],[47,76,41,74,"disconnectOnUnload"],[47,94,41,2],[48,0,42,2],[48,9,42,7,"authTokenName"],[48,22,42,2],[48,25,42,23,"opts"],[48,29,42,27],[48,30,42,28,"authTokenName"],[48,43,42,2],[49,0,46,2],[49,9,46,7,"pingTimeout"],[49,20,46,2],[49,23,46,21],[49,28,46,26,"ackTimeout"],[49,38,46,2],[50,0,47,2],[50,9,47,7,"pingTimeoutDisabled"],[50,28,47,2],[50,31,47,29],[50,32,47,30],[50,33,47,31,"opts"],[50,37,47,35],[50,38,47,36,"pingTimeoutDisabled"],[50,57,47,2],[51,0,48,2],[51,9,48,7,"active"],[51,15,48,2],[51,18,48,16],[51,22,48,2],[52,0,50,2],[52,9,50,7,"_clientMap"],[52,19,50,2],[52,22,50,20,"opts"],[52,26,50,24],[52,27,50,25,"clientMap"],[52,36,50,20],[52,40,50,38],[52,42,50,2],[53,0,52,2],[53,8,52,6,"maxTimeout"],[53,18,52,16],[53,21,52,19,"Math"],[53,25,52,23],[53,26,52,24,"pow"],[53,29,52,19],[53,30,52,28],[53,31,52,19],[53,33,52,31],[53,35,52,19],[53,39,52,37],[53,40,52,2],[55,0,54,2],[55,8,54,6,"verifyDuration"],[55,22,54,20],[55,25,54,23],[55,34,54,6,"verifyDuration"],[55,48,54,23],[55,49,54,33,"propertyName"],[55,61,54,23],[55,63,54,47],[56,0,55,4],[56,10,55,8,"self"],[56,14,55,12],[56,15,55,13,"propertyName"],[56,27,55,12],[56,28,55,8],[56,31,55,29,"maxTimeout"],[56,41,55,4],[56,43,55,41],[57,0,56,6],[57,14,56,12],[57,18,56,16,"InvalidArgumentsError"],[57,39,56,12],[57,40,56,38],[57,49,56,47,"propertyName"],[57,61,56,38],[57,64,57,8],[57,117,56,12],[57,118,56,6],[58,0,58,5],[59,0,59,3],[59,5,54,2],[61,0,61,2,"verifyDuration"],[61,4,61,2,"verifyDuration"],[61,18,61,16],[61,19,61,17],[61,35,61,16],[61,36,61,2],[62,0,62,2,"verifyDuration"],[62,4,62,2,"verifyDuration"],[62,18,62,16],[62,19,62,17],[62,31,62,16],[62,32,62,2],[63,0,64,2],[63,9,64,7,"_localEvents"],[63,21,64,2],[63,24,64,22],[64,0,65,4],[64,17,65,15],[64,18,64,22],[65,0,66,4],[65,22,66,20],[65,23,64,22],[66,0,67,4],[66,15,67,13],[66,16,64,22],[67,0,68,4],[67,20,68,18],[67,21,64,22],[68,0,69,4],[68,17,69,15],[68,18,64,22],[69,0,70,4],[69,15,70,13],[69,16,64,22],[70,0,71,4],[70,13,71,11],[70,14,64,22],[71,0,72,4],[71,17,72,15],[71,18,64,22],[72,0,73,4],[72,19,73,17],[72,20,64,22],[73,0,74,4],[73,21,74,19],[73,22,64,22],[74,0,75,4],[74,30,75,28],[74,31,64,22],[75,0,76,4],[75,25,76,23],[75,26,64,22],[76,0,77,4],[76,22,77,20],[76,23,64,22],[77,0,78,4],[77,24,78,22],[77,25,64,22],[78,0,79,4],[78,25,79,23],[78,26,64,22],[79,0,80,4],[79,26,80,24],[80,0,64,22],[80,5,64,2],[81,0,83,2],[81,9,83,7,"connectAttempts"],[81,24,83,2],[81,27,83,25],[81,28,83,2],[82,0,85,2],[82,9,85,7,"_emitBuffer"],[82,20,85,2],[82,23,85,21],[82,27,85,25,"LinkedList"],[82,37,85,21],[82,39,85,2],[83,0,86,2],[83,9,86,7,"channels"],[83,17,86,2],[83,20,86,18],[83,22,86,2],[84,0,88,2],[84,9,88,7,"options"],[84,16,88,2],[84,19,88,17,"opts"],[84,23,88,2],[85,0,90,2],[85,9,90,7,"_cid"],[85,13,90,2],[85,16,90,14],[85,17,90,2],[87,0,92,2],[87,9,92,7,"options"],[87,16,92,2],[87,17,92,15,"callIdGenerator"],[87,32,92,2],[87,35,92,33],[87,47,92,45],[88,0,93,4],[88,13,93,11,"self"],[88,17,93,15],[88,18,93,16,"_cid"],[88,22,93,11],[88,24,93,4],[89,0,94,3],[89,5,92,2],[91,0,96,2],[91,8,96,6],[91,13,96,11,"options"],[91,20,96,6],[91,21,96,19,"autoReconnect"],[91,34,96,2],[91,36,96,34],[92,0,97,4],[92,10,97,8],[92,15,97,13,"options"],[92,22,97,8],[92,23,97,21,"autoReconnectOptions"],[92,43,97,8],[92,47,97,45],[92,51,97,4],[92,53,97,51],[93,0,98,6],[93,13,98,11,"options"],[93,20,98,6],[93,21,98,19,"autoReconnectOptions"],[93,41,98,6],[93,44,98,42],[93,46,98,6],[94,0,99,5],[96,0,103,4],[96,10,103,8,"reconnectOptions"],[96,26,103,24],[96,29,103,27],[96,34,103,32,"options"],[96,41,103,27],[96,42,103,40,"autoReconnectOptions"],[96,62,103,4],[98,0,104,4],[98,10,104,8,"reconnectOptions"],[98,26,104,24],[98,27,104,25,"initialDelay"],[98,39,104,8],[98,43,104,41],[98,47,104,4],[98,49,104,47],[99,0,105,6,"reconnectOptions"],[99,8,105,6,"reconnectOptions"],[99,24,105,22],[99,25,105,23,"initialDelay"],[99,37,105,6],[99,40,105,38],[99,45,105,6],[100,0,106,5],[102,0,107,4],[102,10,107,8,"reconnectOptions"],[102,26,107,24],[102,27,107,25,"randomness"],[102,37,107,8],[102,41,107,39],[102,45,107,4],[102,47,107,45],[103,0,108,6,"reconnectOptions"],[103,8,108,6,"reconnectOptions"],[103,24,108,22],[103,25,108,23,"randomness"],[103,35,108,6],[103,38,108,36],[103,43,108,6],[104,0,109,5],[106,0,110,4],[106,10,110,8,"reconnectOptions"],[106,26,110,24],[106,27,110,25,"multiplier"],[106,37,110,8],[106,41,110,39],[106,45,110,4],[106,47,110,45],[107,0,111,6,"reconnectOptions"],[107,8,111,6,"reconnectOptions"],[107,24,111,22],[107,25,111,23,"multiplier"],[107,35,111,6],[107,38,111,36],[107,41,111,6],[108,0,112,5],[110,0,113,4],[110,10,113,8,"reconnectOptions"],[110,26,113,24],[110,27,113,25,"maxDelay"],[110,35,113,8],[110,39,113,37],[110,43,113,4],[110,45,113,43],[111,0,114,6,"reconnectOptions"],[111,8,114,6,"reconnectOptions"],[111,24,114,22],[111,25,114,23,"maxDelay"],[111,33,114,6],[111,36,114,34],[111,41,114,6],[112,0,115,5],[113,0,116,3],[115,0,118,2],[115,8,118,6],[115,13,118,11,"options"],[115,20,118,6],[115,21,118,19,"subscriptionRetryOptions"],[115,45,118,6],[115,49,118,47],[115,53,118,2],[115,55,118,53],[116,0,119,4],[116,11,119,9,"options"],[116,18,119,4],[116,19,119,17,"subscriptionRetryOptions"],[116,43,119,4],[116,46,119,44],[116,48,119,4],[117,0,120,3],[119,0,122,2],[119,8,122,6],[119,13,122,11,"options"],[119,20,122,6],[119,21,122,19,"authEngine"],[119,31,122,2],[119,33,122,31],[120,0,123,4],[120,11,123,9,"auth"],[120,15,123,4],[120,18,123,16],[120,23,123,21,"options"],[120,30,123,16],[120,31,123,29,"authEngine"],[120,41,123,4],[121,0,124,3],[121,5,122,2],[121,11,124,9],[122,0,125,4],[122,11,125,9,"auth"],[122,15,125,4],[122,18,125,16],[122,22,125,20,"AuthEngine"],[122,32,125,16],[122,34,125,4],[123,0,126,3],[125,0,128,2],[125,8,128,6],[125,13,128,11,"options"],[125,20,128,6],[125,21,128,19,"codecEngine"],[125,32,128,2],[125,34,128,32],[126,0,129,4],[126,11,129,9,"codec"],[126,16,129,4],[126,19,129,17],[126,24,129,22,"options"],[126,31,129,17],[126,32,129,30,"codecEngine"],[126,43,129,4],[127,0,130,3],[127,5,128,2],[127,11,130,9],[128,0,132,4],[128,11,132,9,"codec"],[128,16,132,4],[128,19,132,17,"formatter"],[128,28,132,4],[129,0,133,3],[131,0,135,2],[131,8,135,6],[131,13,135,11,"options"],[131,20,135,6],[131,21,135,19,"protocol"],[131,29,135,2],[131,31,135,29],[132,0,136,4],[132,10,136,8,"protocolOptionError"],[132,29,136,27],[132,32,136,30],[132,36,136,34,"InvalidArgumentsError"],[132,57,136,30],[132,58,136,56],[132,84,137,6],[132,155,136,56],[132,158,138,6],[132,190,136,30],[132,191,136,4],[134,0,139,4],[134,11,139,9,"_onSCError"],[134,21,139,4],[134,22,139,20,"protocolOptionError"],[134,41,139,4],[135,0,140,3],[137,0,142,2],[137,9,142,7,"options"],[137,16,142,2],[137,17,142,15,"path"],[137,21,142,2],[137,24,142,22],[137,29,142,27,"options"],[137,36,142,22],[137,37,142,35,"path"],[137,41,142,22],[137,42,142,40,"replace"],[137,49,142,22],[137,50,142,48],[137,55,142,22],[137,57,142,55],[137,59,142,22],[137,63,142,61],[137,66,142,2],[138,0,144,2],[138,9,144,7,"options"],[138,16,144,2],[138,17,144,15,"query"],[138,22,144,2],[138,25,144,23,"opts"],[138,29,144,27],[138,30,144,28,"query"],[138,35,144,23],[138,39,144,37],[138,41,144,2],[140,0,145,2],[140,8,145,6],[140,15,145,13],[140,20,145,18,"options"],[140,27,145,13],[140,28,145,26,"query"],[140,33,145,6],[140,38,145,36],[140,46,145,2],[140,48,145,46],[141,0,146,4],[141,11,146,9,"options"],[141,18,146,4],[141,19,146,17,"query"],[141,24,146,4],[141,27,146,25,"querystring"],[141,38,146,36],[141,39,146,37,"parse"],[141,44,146,25],[141,45,146,43],[141,50,146,48,"options"],[141,57,146,43],[141,58,146,56,"query"],[141,63,146,25],[141,64,146,4],[142,0,147,3],[144,0,149,2],[144,9,149,7,"_channelEmitter"],[144,24,149,2],[144,27,149,25],[144,31,149,29,"Emitter"],[144,38,149,25],[144,40,149,2],[146,0,151,2],[146,9,151,7,"_unloadHandler"],[146,23,151,2],[146,26,151,24],[146,38,151,36],[147,0,152,4,"self"],[147,6,152,4,"self"],[147,10,152,8],[147,11,152,9,"disconnect"],[147,21,152,4],[148,0,153,3],[148,5,151,2],[150,0,155,2],[150,8,155,6,"isBrowser"],[150,17,155,15],[150,21,155,19],[150,26,155,24,"disconnectOnUnload"],[150,44,155,6],[150,48,155,46,"global"],[150,54,155,52],[150,55,155,53,"addEventListener"],[150,71,155,2],[150,73,155,71],[151,0,156,4,"global"],[151,6,156,4,"global"],[151,12,156,10],[151,13,156,11,"addEventListener"],[151,29,156,4],[151,30,156,28],[151,44,156,4],[151,46,156,44],[151,51,156,49,"_unloadHandler"],[151,65,156,4],[151,67,156,65],[151,72,156,4],[152,0,157,3],[154,0,158,2],[154,9,158,7,"_clientMap"],[154,19,158,2],[154,20,158,18],[154,25,158,23,"clientId"],[154,33,158,2],[154,37,158,35],[154,41,158,2],[156,0,160,2],[156,8,160,6],[156,13,160,11,"options"],[156,20,160,6],[156,21,160,19,"autoConnect"],[156,32,160,2],[156,34,160,32],[157,0,161,4],[157,11,161,9,"connect"],[157,18,161,4],[158,0,162,3],[159,0,163,1],[159,3,23,0],[161,0,165,0,"SCClientSocket"],[161,2,165,0,"SCClientSocket"],[161,16,165,14],[161,17,165,15,"prototype"],[161,26,165,0],[161,29,165,27,"Object"],[161,35,165,33],[161,36,165,34,"create"],[161,42,165,27],[161,43,165,41,"Emitter"],[161,50,165,48],[161,51,165,49,"prototype"],[161,60,165,27],[161,61,165,0],[162,0,167,0,"SCClientSocket"],[162,2,167,0,"SCClientSocket"],[162,16,167,14],[162,17,167,15,"CONNECTING"],[162,27,167,0],[162,30,167,28,"SCClientSocket"],[162,44,167,42],[162,45,167,43,"prototype"],[162,54,167,28],[162,55,167,53,"CONNECTING"],[162,65,167,28],[162,68,167,66,"SCTransport"],[162,79,167,77],[162,80,167,78,"prototype"],[162,89,167,66],[162,90,167,88,"CONNECTING"],[162,100,167,0],[163,0,168,0,"SCClientSocket"],[163,2,168,0,"SCClientSocket"],[163,16,168,14],[163,17,168,15,"OPEN"],[163,21,168,0],[163,24,168,22,"SCClientSocket"],[163,38,168,36],[163,39,168,37,"prototype"],[163,48,168,22],[163,49,168,47,"OPEN"],[163,53,168,22],[163,56,168,54,"SCTransport"],[163,67,168,65],[163,68,168,66,"prototype"],[163,77,168,54],[163,78,168,76,"OPEN"],[163,82,168,0],[164,0,169,0,"SCClientSocket"],[164,2,169,0,"SCClientSocket"],[164,16,169,14],[164,17,169,15,"CLOSED"],[164,23,169,0],[164,26,169,24,"SCClientSocket"],[164,40,169,38],[164,41,169,39,"prototype"],[164,50,169,24],[164,51,169,49,"CLOSED"],[164,57,169,24],[164,60,169,58,"SCTransport"],[164,71,169,69],[164,72,169,70,"prototype"],[164,81,169,58],[164,82,169,80,"CLOSED"],[164,88,169,0],[165,0,171,0,"SCClientSocket"],[165,2,171,0,"SCClientSocket"],[165,16,171,14],[165,17,171,15,"AUTHENTICATED"],[165,30,171,0],[165,33,171,31,"SCClientSocket"],[165,47,171,45],[165,48,171,46,"prototype"],[165,57,171,31],[165,58,171,56,"AUTHENTICATED"],[165,71,171,31],[165,74,171,72],[165,89,171,0],[166,0,172,0,"SCClientSocket"],[166,2,172,0,"SCClientSocket"],[166,16,172,14],[166,17,172,15,"UNAUTHENTICATED"],[166,32,172,0],[166,35,172,33,"SCClientSocket"],[166,49,172,47],[166,50,172,48,"prototype"],[166,59,172,33],[166,60,172,58,"UNAUTHENTICATED"],[166,75,172,33],[166,78,172,76],[166,95,172,0],[167,0,174,0,"SCClientSocket"],[167,2,174,0,"SCClientSocket"],[167,16,174,14],[167,17,174,15,"PENDING"],[167,24,174,0],[167,27,174,25,"SCClientSocket"],[167,41,174,39],[167,42,174,40,"prototype"],[167,51,174,25],[167,52,174,50,"PENDING"],[167,59,174,25],[167,62,174,60],[167,71,174,0],[168,0,176,0,"SCClientSocket"],[168,2,176,0,"SCClientSocket"],[168,16,176,14],[168,17,176,15,"ignoreStatuses"],[168,31,176,0],[168,34,176,32,"scErrors"],[168,42,176,40],[168,43,176,41,"socketProtocolIgnoreStatuses"],[168,71,176,0],[169,0,177,0,"SCClientSocket"],[169,2,177,0,"SCClientSocket"],[169,16,177,14],[169,17,177,15,"errorStatuses"],[169,30,177,0],[169,33,177,31,"scErrors"],[169,41,177,39],[169,42,177,40,"socketProtocolErrorStatuses"],[169,69,177,0],[170,0,179,0,"SCClientSocket"],[170,2,179,0,"SCClientSocket"],[170,16,179,14],[170,17,179,15,"prototype"],[170,26,179,0],[170,27,179,25,"_privateEventHandlerMap"],[170,50,179,0],[170,53,179,51],[171,0,180,2],[171,16,180,14],[171,33,180,24,"data"],[171,37,180,14],[171,39,180,30],[172,0,181,4],[172,10,181,8,"undecoratedChannelName"],[172,32,181,30],[172,35,181,33],[172,40,181,38,"_undecorateChannelName"],[172,62,181,33],[172,63,181,61,"data"],[172,67,181,65],[172,68,181,66,"channel"],[172,75,181,33],[172,76,181,4],[174,0,182,4],[174,10,182,8,"isSubscribed"],[174,22,182,20],[174,25,182,23],[174,30,182,28,"isSubscribed"],[174,42,182,23],[174,43,182,41,"undecoratedChannelName"],[174,65,182,23],[174,67,182,65],[174,71,182,23],[174,72,182,4],[176,0,184,4],[176,10,184,8,"isSubscribed"],[176,22,184,4],[176,24,184,22],[177,0,185,6],[177,13,185,11,"_channelEmitter"],[177,28,185,6],[177,29,185,27,"emit"],[177,33,185,6],[177,34,185,32,"undecoratedChannelName"],[177,56,185,6],[177,58,185,56,"data"],[177,62,185,60],[177,63,185,61,"data"],[177,67,185,6],[178,0,186,5],[179,0,187,3],[179,5,179,51],[180,0,188,2],[180,16,188,14],[180,33,188,24,"data"],[180,37,188,14],[180,39,188,30],[181,0,189,4],[181,10,189,8,"undecoratedChannelName"],[181,32,189,30],[181,35,189,33],[181,40,189,38,"_undecorateChannelName"],[181,62,189,33],[181,63,189,61,"data"],[181,67,189,65],[181,68,189,66,"channel"],[181,75,189,33],[181,76,189,4],[183,0,190,4],[183,10,190,8,"channel"],[183,17,190,15],[183,20,190,18],[183,25,190,23,"channels"],[183,33,190,18],[183,34,190,32,"undecoratedChannelName"],[183,56,190,18],[183,57,190,4],[185,0,191,4],[185,10,191,8,"channel"],[185,17,191,4],[185,19,191,17],[186,0,192,6,"Emitter"],[186,8,192,6,"Emitter"],[186,15,192,13],[186,16,192,14,"prototype"],[186,25,192,6],[186,26,192,24,"emit"],[186,30,192,6],[186,31,192,29,"call"],[186,35,192,6],[186,36,192,34],[186,40,192,6],[186,42,192,40],[186,51,192,6],[186,53,192,51,"data"],[186,57,192,55],[186,58,192,56,"message"],[186,65,192,6],[186,67,192,65,"undecoratedChannelName"],[186,89,192,6],[187,0,193,6,"channel"],[187,8,193,6,"channel"],[187,15,193,13],[187,16,193,14,"emit"],[187,20,193,6],[187,21,193,19],[187,30,193,6],[187,32,193,30,"data"],[187,36,193,34],[187,37,193,35,"message"],[187,44,193,6],[187,46,193,44,"undecoratedChannelName"],[187,68,193,6],[189,0,194,6],[189,13,194,11,"_triggerChannelUnsubscribe"],[189,39,194,6],[189,40,194,38,"channel"],[189,47,194,6],[190,0,195,5],[191,0,196,3],[191,5,179,51],[192,0,197,2],[192,21,197,19],[192,43,197,29,"data"],[192,47,197,19],[192,49,197,35,"response"],[192,57,197,19],[192,59,197,45],[193,0,198,4],[193,10,198,8,"self"],[193,14,198,12],[193,17,198,15],[193,21,198,4],[195,0,200,4],[195,10,200,8,"data"],[195,14,200,4],[195,16,200,14],[196,0,201,6],[196,12,201,10,"triggerAuthenticate"],[196,31,201,29],[196,34,201,32],[196,43,201,10,"triggerAuthenticate"],[196,62,201,32],[196,63,201,42,"err"],[196,66,201,32],[196,68,201,47],[197,0,202,8],[197,14,202,12,"err"],[197,17,202,8],[197,19,202,17],[198,0,206,10,"response"],[198,12,206,10,"response"],[198,20,206,18],[198,21,206,19,"error"],[198,26,206,10],[198,27,206,25,"err"],[198,30,206,10],[200,0,207,10,"self"],[200,12,207,10,"self"],[200,16,207,14],[200,17,207,15,"_onSCError"],[200,27,207,10],[200,28,207,26,"err"],[200,31,207,10],[201,0,208,9],[201,11,202,8],[201,17,208,15],[202,0,209,10,"self"],[202,12,209,10,"self"],[202,16,209,14],[202,17,209,15,"_changeToAuthenticatedState"],[202,44,209,10],[202,45,209,43,"data"],[202,49,209,47],[202,50,209,48,"token"],[202,55,209,10],[204,0,210,10,"response"],[204,12,210,10,"response"],[204,20,210,18],[204,21,210,19,"end"],[204,24,210,10],[205,0,211,9],[206,0,212,7],[206,9,201,6],[208,0,214,6],[208,13,214,11,"auth"],[208,17,214,6],[208,18,214,16,"saveToken"],[208,27,214,6],[208,28,214,26],[208,33,214,31,"authTokenName"],[208,46,214,6],[208,48,214,46,"data"],[208,52,214,50],[208,53,214,51,"token"],[208,58,214,6],[208,60,214,58],[208,62,214,6],[208,64,214,62,"triggerAuthenticate"],[208,83,214,6],[209,0,215,5],[209,7,200,4],[209,13,215,11],[210,0,216,6,"response"],[210,8,216,6,"response"],[210,16,216,14],[210,17,216,15,"error"],[210,22,216,6],[210,23,216,21],[210,27,216,25,"InvalidMessageError"],[210,46,216,21],[210,47,216,45],[210,94,216,21],[210,95,216,6],[211,0,217,5],[212,0,218,3],[212,5,179,51],[213,0,219,2],[213,24,219,22],[213,49,219,32,"data"],[213,53,219,22],[213,55,219,38,"response"],[213,63,219,22],[213,65,219,48],[214,0,220,4],[214,10,220,8,"self"],[214,14,220,12],[214,17,220,15],[214,21,220,4],[215,0,222,4],[215,11,222,9,"auth"],[215,15,222,4],[215,16,222,14,"removeToken"],[215,27,222,4],[215,28,222,26],[215,33,222,31,"authTokenName"],[215,46,222,4],[215,48,222,46],[215,58,222,56,"err"],[215,61,222,46],[215,63,222,61,"oldToken"],[215,71,222,46],[215,73,222,71],[216,0,223,6],[216,12,223,10,"err"],[216,15,223,6],[216,17,223,15],[217,0,225,8,"response"],[217,10,225,8,"response"],[217,18,225,16],[217,19,225,17,"error"],[217,24,225,8],[217,25,225,23,"err"],[217,28,225,8],[219,0,226,8,"self"],[219,10,226,8,"self"],[219,14,226,12],[219,15,226,13,"_onSCError"],[219,25,226,8],[219,26,226,24,"err"],[219,29,226,8],[220,0,227,7],[220,9,223,6],[220,15,227,13],[221,0,228,8,"Emitter"],[221,10,228,8,"Emitter"],[221,17,228,15],[221,18,228,16,"prototype"],[221,27,228,8],[221,28,228,26,"emit"],[221,32,228,8],[221,33,228,31,"call"],[221,37,228,8],[221,38,228,36,"self"],[221,42,228,8],[221,44,228,42],[221,61,228,8],[221,63,228,61,"oldToken"],[221,71,228,8],[223,0,229,8,"self"],[223,10,229,8,"self"],[223,14,229,12],[223,15,229,13,"_changeToUnauthenticatedStateAndClearTokens"],[223,58,229,8],[225,0,230,8,"response"],[225,10,230,8,"response"],[225,18,230,16],[225,19,230,17,"end"],[225,22,230,8],[226,0,231,7],[227,0,232,5],[227,7,222,4],[228,0,233,3],[228,5,179,51],[229,0,234,2],[229,19,234,17],[229,39,234,27,"data"],[229,43,234,17],[229,45,234,33],[230,0,235,4],[230,11,235,9,"transport"],[230,20,235,4],[230,21,235,19,"close"],[230,26,235,4],[230,27,235,25,"data"],[230,31,235,29],[230,32,235,30,"code"],[230,36,235,4],[230,38,235,36,"data"],[230,42,235,40],[230,43,235,41,"data"],[230,47,235,4],[231,0,236,3],[232,0,179,51],[232,3,179,0],[234,0,239,0,"SCClientSocket"],[234,2,239,0,"SCClientSocket"],[234,16,239,14],[234,17,239,15,"prototype"],[234,26,239,0],[234,27,239,25,"getState"],[234,35,239,0],[234,38,239,36],[234,50,239,48],[235,0,240,2],[235,11,240,9],[235,16,240,14,"state"],[235,21,240,2],[236,0,241,1],[236,3,239,0],[238,0,243,0,"SCClientSocket"],[238,2,243,0,"SCClientSocket"],[238,16,243,14],[238,17,243,15,"prototype"],[238,26,243,0],[238,27,243,25,"getBytesReceived"],[238,43,243,0],[238,46,243,44],[238,58,243,56],[239,0,244,2],[239,11,244,9],[239,16,244,14,"transport"],[239,25,244,9],[239,26,244,24,"getBytesReceived"],[239,42,244,9],[239,44,244,2],[240,0,245,1],[240,3,243,0],[242,0,247,0,"SCClientSocket"],[242,2,247,0,"SCClientSocket"],[242,16,247,14],[242,17,247,15,"prototype"],[242,26,247,0],[242,27,247,25,"deauthenticate"],[242,41,247,0],[242,44,247,42],[242,54,247,52,"callback"],[242,62,247,42],[242,64,247,62],[243,0,248,2],[243,8,248,6,"self"],[243,12,248,10],[243,15,248,13],[243,19,248,2],[244,0,250,2],[244,9,250,7,"auth"],[244,13,250,2],[244,14,250,12,"removeToken"],[244,25,250,2],[244,26,250,24],[244,31,250,29,"authTokenName"],[244,44,250,2],[244,46,250,44],[244,56,250,54,"err"],[244,59,250,44],[244,61,250,59,"oldToken"],[244,69,250,44],[244,71,250,69],[245,0,251,4],[245,10,251,8,"err"],[245,13,251,4],[245,15,251,13],[246,0,253,6,"self"],[246,8,253,6,"self"],[246,12,253,10],[246,13,253,11,"_onSCError"],[246,23,253,6],[246,24,253,22,"err"],[246,27,253,6],[247,0,254,5],[247,7,251,4],[247,13,254,11],[248,0,255,6,"Emitter"],[248,8,255,6,"Emitter"],[248,15,255,13],[248,16,255,14,"prototype"],[248,25,255,6],[248,26,255,24,"emit"],[248,30,255,6],[248,31,255,29,"call"],[248,35,255,6],[248,36,255,34,"self"],[248,40,255,6],[248,42,255,40],[248,59,255,6],[248,61,255,59,"oldToken"],[248,69,255,6],[250,0,256,6],[250,12,256,10,"self"],[250,16,256,14],[250,17,256,15,"state"],[250,22,256,10],[250,27,256,25,"self"],[250,31,256,29],[250,32,256,30,"CLOSED"],[250,38,256,6],[250,40,256,38],[251,0,257,8,"self"],[251,10,257,8,"self"],[251,14,257,12],[251,15,257,13,"emit"],[251,19,257,8],[251,20,257,18],[251,38,257,8],[252,0,258,7],[254,0,259,6,"self"],[254,8,259,6,"self"],[254,12,259,10],[254,13,259,11,"_changeToUnauthenticatedStateAndClearTokens"],[254,56,259,6],[255,0,260,5],[257,0,261,4,"callback"],[257,6,261,4,"callback"],[257,14,261,12],[257,18,261,16,"callback"],[257,26,261,24],[257,27,261,25,"err"],[257,30,261,24],[257,31,261,4],[258,0,262,3],[258,5,250,2],[259,0,263,1],[259,3,247,0],[261,0,265,0,"SCClientSocket"],[261,2,265,0,"SCClientSocket"],[261,16,265,14],[261,17,265,15,"prototype"],[261,26,265,0],[261,27,265,25,"connect"],[261,34,265,0],[261,37,265,35,"SCClientSocket"],[261,51,265,49],[261,52,265,50,"prototype"],[261,61,265,35],[261,62,265,60,"open"],[261,66,265,35],[261,69,265,67],[261,81,265,79],[262,0,266,2],[262,8,266,6,"self"],[262,12,266,10],[262,15,266,13],[262,19,266,2],[264,0,268,2],[264,8,268,6],[264,9,268,7],[264,14,268,12,"active"],[264,20,268,2],[264,22,268,20],[265,0,269,4],[265,10,269,8,"error"],[265,15,269,13],[265,18,269,16],[265,22,269,20,"InvalidActionError"],[265,40,269,16],[265,41,269,39],[265,76,269,16],[265,77,269,4],[267,0,270,4],[267,11,270,9,"_onSCError"],[267,21,270,4],[267,22,270,20,"error"],[267,27,270,4],[269,0,271,4],[270,0,272,3],[272,0,274,2],[272,8,274,6],[272,13,274,11,"state"],[272,18,274,6],[272,23,274,21],[272,28,274,26,"CLOSED"],[272,34,274,2],[272,36,274,34],[273,0,275,4],[273,11,275,9,"pendingReconnect"],[273,27,275,4],[273,30,275,28],[273,35,275,4],[274,0,276,4],[274,11,276,9,"pendingReconnectTimeout"],[274,34,276,4],[274,37,276,35],[274,41,276,4],[275,0,277,4,"clearTimeout"],[275,6,277,4,"clearTimeout"],[275,18,277,16],[275,19,277,17],[275,24,277,22,"_reconnectTimeoutRef"],[275,44,277,16],[275,45,277,4],[276,0,279,4],[276,11,279,9,"state"],[276,16,279,4],[276,19,279,17],[276,24,279,22,"CONNECTING"],[276,34,279,4],[277,0,280,4,"Emitter"],[277,6,280,4,"Emitter"],[277,13,280,11],[277,14,280,12,"prototype"],[277,23,280,4],[277,24,280,22,"emit"],[277,28,280,4],[277,29,280,27,"call"],[277,33,280,4],[277,34,280,32],[277,38,280,4],[277,40,280,38],[277,52,280,4],[279,0,282,4],[279,10,282,8],[279,15,282,13,"transport"],[279,24,282,4],[279,26,282,24],[280,0,283,6],[280,13,283,11,"transport"],[280,22,283,6],[280,23,283,21,"off"],[280,26,283,6],[281,0,284,5],[283,0,286,4],[283,11,286,9,"transport"],[283,20,286,4],[283,23,286,21],[283,27,286,25,"SCTransport"],[283,38,286,21],[283,39,286,37],[283,44,286,42,"auth"],[283,48,286,21],[283,50,286,48],[283,55,286,53,"codec"],[283,60,286,21],[283,62,286,60],[283,67,286,65,"options"],[283,74,286,21],[283,75,286,4],[284,0,288,4],[284,11,288,9,"transport"],[284,20,288,4],[284,21,288,19,"on"],[284,23,288,4],[284,24,288,22],[284,30,288,4],[284,32,288,30],[284,42,288,40,"status"],[284,48,288,30],[284,50,288,48],[285,0,289,6,"self"],[285,8,289,6,"self"],[285,12,289,10],[285,13,289,11,"state"],[285,18,289,6],[285,21,289,19,"self"],[285,25,289,23],[285,26,289,24,"OPEN"],[285,30,289,6],[287,0,290,6,"self"],[287,8,290,6,"self"],[287,12,290,10],[287,13,290,11,"_onSCOpen"],[287,22,290,6],[287,23,290,21,"status"],[287,29,290,6],[288,0,291,5],[288,7,288,4],[289,0,293,4],[289,11,293,9,"transport"],[289,20,293,4],[289,21,293,19,"on"],[289,23,293,4],[289,24,293,22],[289,31,293,4],[289,33,293,31],[289,43,293,41,"err"],[289,46,293,31],[289,48,293,46],[290,0,294,6,"self"],[290,8,294,6,"self"],[290,12,294,10],[290,13,294,11,"_onSCError"],[290,23,294,6],[290,24,294,22,"err"],[290,27,294,6],[291,0,295,5],[291,7,293,4],[292,0,297,4],[292,11,297,9,"transport"],[292,20,297,4],[292,21,297,19,"on"],[292,23,297,4],[292,24,297,22],[292,31,297,4],[292,33,297,31],[292,43,297,41,"code"],[292,47,297,31],[292,49,297,47,"data"],[292,53,297,31],[292,55,297,53],[293,0,298,6,"self"],[293,8,298,6,"self"],[293,12,298,10],[293,13,298,11,"state"],[293,18,298,6],[293,21,298,19,"self"],[293,25,298,23],[293,26,298,24,"CLOSED"],[293,32,298,6],[295,0,299,6,"self"],[295,8,299,6,"self"],[295,12,299,10],[295,13,299,11,"_onSCClose"],[295,23,299,6],[295,24,299,22,"code"],[295,28,299,6],[295,30,299,28,"data"],[295,34,299,6],[296,0,300,5],[296,7,297,4],[297,0,302,4],[297,11,302,9,"transport"],[297,20,302,4],[297,21,302,19,"on"],[297,23,302,4],[297,24,302,22],[297,35,302,4],[297,37,302,35],[297,47,302,45,"code"],[297,51,302,35],[297,53,302,51,"data"],[297,57,302,35],[297,59,302,57],[298,0,303,6,"self"],[298,8,303,6,"self"],[298,12,303,10],[298,13,303,11,"state"],[298,18,303,6],[298,21,303,19,"self"],[298,25,303,23],[298,26,303,24,"CLOSED"],[298,32,303,6],[300,0,304,6,"self"],[300,8,304,6,"self"],[300,12,304,10],[300,13,304,11,"_onSCClose"],[300,23,304,6],[300,24,304,22,"code"],[300,28,304,6],[300,30,304,28,"data"],[300,34,304,6],[300,36,304,34],[300,40,304,6],[301,0,305,5],[301,7,302,4],[302,0,307,4],[302,11,307,9,"transport"],[302,20,307,4],[302,21,307,19,"on"],[302,23,307,4],[302,24,307,22],[302,31,307,4],[302,33,307,31],[302,43,307,41,"event"],[302,48,307,31],[302,50,307,48,"data"],[302,54,307,31],[302,56,307,54,"res"],[302,59,307,31],[302,61,307,59],[303,0,308,6,"self"],[303,8,308,6,"self"],[303,12,308,10],[303,13,308,11,"_onSCEvent"],[303,23,308,6],[303,24,308,22,"event"],[303,29,308,6],[303,31,308,29,"data"],[303,35,308,6],[303,37,308,35,"res"],[303,40,308,6],[304,0,309,5],[304,7,307,4],[305,0,310,3],[306,0,311,1],[306,3,265,0],[308,0,313,0,"SCClientSocket"],[308,2,313,0,"SCClientSocket"],[308,16,313,14],[308,17,313,15,"prototype"],[308,26,313,0],[308,27,313,25,"reconnect"],[308,36,313,0],[308,39,313,37],[308,49,313,47,"code"],[308,53,313,37],[308,55,313,53,"data"],[308,59,313,37],[308,61,313,59],[309,0,314,2],[309,9,314,7,"disconnect"],[309,19,314,2],[309,20,314,18,"code"],[309,24,314,2],[309,26,314,24,"data"],[309,30,314,2],[310,0,315,2],[310,9,315,7,"connect"],[310,16,315,2],[311,0,316,1],[311,3,313,0],[313,0,318,0,"SCClientSocket"],[313,2,318,0,"SCClientSocket"],[313,16,318,14],[313,17,318,15,"prototype"],[313,26,318,0],[313,27,318,25,"disconnect"],[313,37,318,0],[313,40,318,38],[313,50,318,48,"code"],[313,54,318,38],[313,56,318,54,"data"],[313,60,318,38],[313,62,318,60],[314,0,319,2,"code"],[314,4,319,2,"code"],[314,8,319,6],[314,11,319,9,"code"],[314,15,319,13],[314,19,319,17],[314,23,319,2],[316,0,321,2],[316,8,321,6],[316,15,321,13,"code"],[316,19,321,6],[316,24,321,22],[316,32,321,2],[316,34,321,32],[317,0,322,4],[317,12,322,10],[317,16,322,14,"InvalidArgumentsError"],[317,37,322,10],[317,38,322,36],[317,88,322,10],[317,89,322,4],[318,0,323,3],[320,0,325,2],[320,8,325,6],[320,13,325,11,"state"],[320,18,325,6],[320,23,325,21],[320,28,325,26,"OPEN"],[320,32,325,6],[320,36,325,34],[320,41,325,39,"state"],[320,46,325,34],[320,51,325,49],[320,56,325,54,"CONNECTING"],[320,66,325,2],[320,68,325,66],[321,0,326,4],[321,11,326,9,"transport"],[321,20,326,4],[321,21,326,19,"close"],[321,26,326,4],[321,27,326,25,"code"],[321,31,326,4],[321,33,326,31,"data"],[321,37,326,4],[322,0,327,3],[322,5,325,2],[322,11,327,9],[323,0,328,4],[323,11,328,9,"pendingReconnect"],[323,27,328,4],[323,30,328,28],[323,35,328,4],[324,0,329,4],[324,11,329,9,"pendingReconnectTimeout"],[324,34,329,4],[324,37,329,35],[324,41,329,4],[325,0,330,4,"clearTimeout"],[325,6,330,4,"clearTimeout"],[325,18,330,16],[325,19,330,17],[325,24,330,22,"_reconnectTimeoutRef"],[325,44,330,16],[325,45,330,4],[326,0,331,3],[327,0,332,1],[327,3,318,0],[329,0,334,0,"SCClientSocket"],[329,2,334,0,"SCClientSocket"],[329,16,334,14],[329,17,334,15,"prototype"],[329,26,334,0],[329,27,334,25,"destroy"],[329,34,334,0],[329,37,334,35],[329,47,334,45,"code"],[329,51,334,35],[329,53,334,51,"data"],[329,57,334,35],[329,59,334,57],[330,0,335,2],[330,8,335,6,"isBrowser"],[330,17,335,15],[330,21,335,19,"global"],[330,27,335,25],[330,28,335,26,"removeEventListener"],[330,47,335,2],[330,49,335,47],[331,0,336,4,"global"],[331,6,336,4,"global"],[331,12,336,10],[331,13,336,11,"removeEventListener"],[331,32,336,4],[331,33,336,31],[331,47,336,4],[331,49,336,47],[331,54,336,52,"_unloadHandler"],[331,68,336,4],[331,70,336,68],[331,75,336,4],[332,0,337,3],[334,0,338,2],[334,9,338,7,"active"],[334,15,338,2],[334,18,338,16],[334,23,338,2],[335,0,339,2],[335,9,339,7,"disconnect"],[335,19,339,2],[335,20,339,18,"code"],[335,24,339,2],[335,26,339,24,"data"],[335,30,339,2],[336,0,340,2],[336,11,340,9],[336,16,340,14,"_clientMap"],[336,26,340,9],[336,27,340,25],[336,32,340,30,"clientId"],[336,40,340,9],[336,41,340,2],[337,0,341,1],[337,3,334,0],[339,0,343,0,"SCClientSocket"],[339,2,343,0,"SCClientSocket"],[339,16,343,14],[339,17,343,15,"prototype"],[339,26,343,0],[339,27,343,25,"_changeToUnauthenticatedStateAndClearTokens"],[339,70,343,0],[339,73,343,71],[339,85,343,83],[340,0,344,2],[340,8,344,6],[340,13,344,11,"authState"],[340,22,344,6],[340,27,344,25],[340,32,344,30,"UNAUTHENTICATED"],[340,47,344,2],[340,49,344,47],[341,0,345,4],[341,10,345,8,"oldState"],[341,18,345,16],[341,21,345,19],[341,26,345,24,"authState"],[341,35,345,4],[342,0,346,4],[342,10,346,8,"oldSignedToken"],[342,24,346,22],[342,27,346,25],[342,32,346,30,"signedAuthToken"],[342,47,346,4],[343,0,347,4],[343,11,347,9,"authState"],[343,20,347,4],[343,23,347,21],[343,28,347,26,"UNAUTHENTICATED"],[343,43,347,4],[344,0,348,4],[344,11,348,9,"signedAuthToken"],[344,26,348,4],[344,29,348,27],[344,33,348,4],[345,0,349,4],[345,11,349,9,"authToken"],[345,20,349,4],[345,23,349,21],[345,27,349,4],[346,0,351,4],[346,10,351,8,"stateChangeData"],[346,25,351,23],[346,28,351,26],[347,0,352,6,"oldState"],[347,8,352,6,"oldState"],[347,16,352,14],[347,18,352,16,"oldState"],[347,26,351,26],[348,0,353,6,"newState"],[348,8,353,6,"newState"],[348,16,353,14],[348,18,353,16],[348,23,353,21,"authState"],[349,0,351,26],[349,7,351,4],[350,0,355,4,"Emitter"],[350,6,355,4,"Emitter"],[350,13,355,11],[350,14,355,12,"prototype"],[350,23,355,4],[350,24,355,22,"emit"],[350,28,355,4],[350,29,355,27,"call"],[350,33,355,4],[350,34,355,32],[350,38,355,4],[350,40,355,38],[350,57,355,4],[350,59,355,57,"stateChangeData"],[350,74,355,4],[351,0,356,4,"Emitter"],[351,6,356,4,"Emitter"],[351,13,356,11],[351,14,356,12,"prototype"],[351,23,356,4],[351,24,356,22,"emit"],[351,28,356,4],[351,29,356,27,"call"],[351,33,356,4],[351,34,356,32],[351,38,356,4],[351,40,356,38],[351,56,356,4],[351,58,356,56,"oldSignedToken"],[351,72,356,4],[352,0,357,3],[353,0,358,1],[353,3,343,0],[355,0,360,0,"SCClientSocket"],[355,2,360,0,"SCClientSocket"],[355,16,360,14],[355,17,360,15,"prototype"],[355,26,360,0],[355,27,360,25,"_changeToAuthenticatedState"],[355,54,360,0],[355,57,360,55],[355,67,360,65,"signedAuthToken"],[355,82,360,55],[355,84,360,82],[356,0,361,2],[356,9,361,7,"signedAuthToken"],[356,24,361,2],[356,27,361,25,"signedAuthToken"],[356,42,361,2],[357,0,362,2],[357,9,362,7,"authToken"],[357,18,362,2],[357,21,362,19],[357,26,362,24,"_extractAuthTokenData"],[357,47,362,19],[357,48,362,46,"signedAuthToken"],[357,63,362,19],[357,64,362,2],[359,0,364,2],[359,8,364,6],[359,13,364,11,"authState"],[359,22,364,6],[359,27,364,25],[359,32,364,30,"AUTHENTICATED"],[359,45,364,2],[359,47,364,45],[360,0,365,4],[360,10,365,8,"oldState"],[360,18,365,16],[360,21,365,19],[360,26,365,24,"authState"],[360,35,365,4],[361,0,366,4],[361,11,366,9,"authState"],[361,20,366,4],[361,23,366,21],[361,28,366,26,"AUTHENTICATED"],[361,41,366,4],[362,0,367,4],[362,10,367,8,"stateChangeData"],[362,25,367,23],[362,28,367,26],[363,0,368,6,"oldState"],[363,8,368,6,"oldState"],[363,16,368,14],[363,18,368,16,"oldState"],[363,26,367,26],[364,0,369,6,"newState"],[364,8,369,6,"newState"],[364,16,369,14],[364,18,369,16],[364,23,369,21,"authState"],[364,32,367,26],[365,0,370,6,"signedAuthToken"],[365,8,370,6,"signedAuthToken"],[365,23,370,21],[365,25,370,23,"signedAuthToken"],[365,40,367,26],[366,0,371,6,"authToken"],[366,8,371,6,"authToken"],[366,17,371,15],[366,19,371,17],[366,24,371,22,"authToken"],[367,0,367,26],[367,7,367,4],[369,0,373,4],[369,10,373,8],[369,11,373,9],[369,16,373,14,"preparingPendingSubscriptions"],[369,45,373,4],[369,47,373,45],[370,0,374,6],[370,13,374,11,"processPendingSubscriptions"],[370,40,374,6],[371,0,375,5],[373,0,377,4,"Emitter"],[373,6,377,4,"Emitter"],[373,13,377,11],[373,14,377,12,"prototype"],[373,23,377,4],[373,24,377,22,"emit"],[373,28,377,4],[373,29,377,27,"call"],[373,33,377,4],[373,34,377,32],[373,38,377,4],[373,40,377,38],[373,57,377,4],[373,59,377,57,"stateChangeData"],[373,74,377,4],[374,0,378,3],[376,0,379,2,"Emitter"],[376,4,379,2,"Emitter"],[376,11,379,9],[376,12,379,10,"prototype"],[376,21,379,2],[376,22,379,20,"emit"],[376,26,379,2],[376,27,379,25,"call"],[376,31,379,2],[376,32,379,30],[376,36,379,2],[376,38,379,36],[376,52,379,2],[376,54,379,52,"signedAuthToken"],[376,69,379,2],[377,0,380,1],[377,3,360,0],[379,0,382,0,"SCClientSocket"],[379,2,382,0,"SCClientSocket"],[379,16,382,14],[379,17,382,15,"prototype"],[379,26,382,0],[379,27,382,25,"decodeBase64"],[379,39,382,0],[379,42,382,40],[379,52,382,50,"encodedString"],[379,65,382,40],[379,67,382,65],[380,0,383,2],[380,8,383,6,"decodedString"],[380,21,383,2],[382,0,384,2],[382,8,384,6],[382,15,384,13,"Buffer"],[382,21,384,6],[382,26,384,24],[382,37,384,2],[382,39,384,37],[383,0,385,4],[383,10,385,8,"global"],[383,16,385,14],[383,17,385,15,"atob"],[383,21,385,4],[383,23,385,21],[384,0,386,6,"decodedString"],[384,8,386,6,"decodedString"],[384,21,386,19],[384,24,386,22,"global"],[384,30,386,28],[384,31,386,29,"atob"],[384,35,386,22],[384,36,386,34,"encodedString"],[384,49,386,22],[384,50,386,6],[385,0,387,5],[385,7,385,4],[385,13,387,11],[386,0,388,6,"decodedString"],[386,8,388,6,"decodedString"],[386,21,388,19],[386,24,388,22,"base64"],[386,30,388,28],[386,31,388,29,"decode"],[386,37,388,22],[386,38,388,36,"encodedString"],[386,51,388,22],[386,52,388,6],[387,0,389,5],[388,0,390,3],[388,5,384,2],[388,11,390,9],[389,0,391,4],[389,10,391,8,"buffer"],[389,16,391,14],[389,19,391,17,"Buffer"],[389,25,391,23],[389,26,391,24,"from"],[389,30,391,17],[389,31,391,29,"encodedString"],[389,44,391,17],[389,46,391,44],[389,54,391,17],[389,55,391,4],[390,0,392,4,"decodedString"],[390,6,392,4,"decodedString"],[390,19,392,17],[390,22,392,20,"buffer"],[390,28,392,26],[390,29,392,27,"toString"],[390,37,392,20],[390,38,392,36],[390,44,392,20],[390,45,392,4],[391,0,393,3],[393,0,394,2],[393,11,394,9,"decodedString"],[393,24,394,2],[394,0,395,1],[394,3,382,0],[396,0,397,0,"SCClientSocket"],[396,2,397,0,"SCClientSocket"],[396,16,397,14],[396,17,397,15,"prototype"],[396,26,397,0],[396,27,397,25,"encodeBase64"],[396,39,397,0],[396,42,397,40],[396,52,397,50,"decodedString"],[396,65,397,40],[396,67,397,65],[397,0,398,2],[397,8,398,6,"encodedString"],[397,21,398,2],[399,0,399,2],[399,8,399,6],[399,15,399,13,"Buffer"],[399,21,399,6],[399,26,399,24],[399,37,399,2],[399,39,399,37],[400,0,400,4],[400,10,400,8,"global"],[400,16,400,14],[400,17,400,15,"btoa"],[400,21,400,4],[400,23,400,21],[401,0,401,6,"encodedString"],[401,8,401,6,"encodedString"],[401,21,401,19],[401,24,401,22,"global"],[401,30,401,28],[401,31,401,29,"btoa"],[401,35,401,22],[401,36,401,34,"decodedString"],[401,49,401,22],[401,50,401,6],[402,0,402,5],[402,7,400,4],[402,13,402,11],[403,0,403,6,"encodedString"],[403,8,403,6,"encodedString"],[403,21,403,19],[403,24,403,22,"base64"],[403,30,403,28],[403,31,403,29,"encode"],[403,37,403,22],[403,38,403,36,"decodedString"],[403,51,403,22],[403,52,403,6],[404,0,404,5],[405,0,405,3],[405,5,399,2],[405,11,405,9],[406,0,406,4],[406,10,406,8,"buffer"],[406,16,406,14],[406,19,406,17,"Buffer"],[406,25,406,23],[406,26,406,24,"from"],[406,30,406,17],[406,31,406,29,"decodedString"],[406,44,406,17],[406,46,406,44],[406,52,406,17],[406,53,406,4],[407,0,407,4,"encodedString"],[407,6,407,4,"encodedString"],[407,19,407,17],[407,22,407,20,"buffer"],[407,28,407,26],[407,29,407,27,"toString"],[407,37,407,20],[407,38,407,36],[407,46,407,20],[407,47,407,4],[408,0,408,3],[410,0,409,2],[410,11,409,9,"encodedString"],[410,24,409,2],[411,0,410,1],[411,3,397,0],[413,0,412,0,"SCClientSocket"],[413,2,412,0,"SCClientSocket"],[413,16,412,14],[413,17,412,15,"prototype"],[413,26,412,0],[413,27,412,25,"_extractAuthTokenData"],[413,48,412,0],[413,51,412,49],[413,61,412,59,"signedAuthToken"],[413,76,412,49],[413,78,412,76],[414,0,413,2],[414,8,413,6,"tokenParts"],[414,18,413,16],[414,21,413,19],[414,22,413,20,"signedAuthToken"],[414,37,413,35],[414,41,413,39],[414,43,413,19],[414,45,413,43,"split"],[414,50,413,19],[414,51,413,49],[414,54,413,19],[414,55,413,2],[415,0,414,2],[415,8,414,6,"encodedTokenData"],[415,24,414,22],[415,27,414,25,"tokenParts"],[415,37,414,35],[415,38,414,36],[415,39,414,35],[415,40,414,2],[417,0,415,2],[417,8,415,6,"encodedTokenData"],[417,24,415,22],[417,28,415,26],[417,32,415,2],[417,34,415,32],[418,0,416,4],[418,10,416,8,"tokenData"],[418,19,416,17],[418,22,416,20,"encodedTokenData"],[418,38,416,4],[420,0,417,4],[420,10,417,8],[421,0,418,6,"tokenData"],[421,8,418,6,"tokenData"],[421,17,418,15],[421,20,418,18],[421,25,418,23,"decodeBase64"],[421,37,418,18],[421,38,418,36,"tokenData"],[421,47,418,18],[421,48,418,6],[422,0,419,6],[422,15,419,13,"JSON"],[422,19,419,17],[422,20,419,18,"parse"],[422,25,419,13],[422,26,419,24,"tokenData"],[422,35,419,13],[422,36,419,6],[423,0,420,5],[423,7,417,4],[423,8,420,6],[423,15,420,13,"e"],[423,16,420,6],[423,18,420,16],[424,0,421,6],[424,15,421,13,"tokenData"],[424,24,421,6],[425,0,422,5],[426,0,423,3],[428,0,424,2],[428,11,424,9],[428,15,424,2],[429,0,425,1],[429,3,412,0],[431,0,427,0,"SCClientSocket"],[431,2,427,0,"SCClientSocket"],[431,16,427,14],[431,17,427,15,"prototype"],[431,26,427,0],[431,27,427,25,"getAuthToken"],[431,39,427,0],[431,42,427,40],[431,54,427,52],[432,0,428,2],[432,11,428,9],[432,16,428,14,"authToken"],[432,25,428,2],[433,0,429,1],[433,3,427,0],[435,0,431,0,"SCClientSocket"],[435,2,431,0,"SCClientSocket"],[435,16,431,14],[435,17,431,15,"prototype"],[435,26,431,0],[435,27,431,25,"getSignedAuthToken"],[435,45,431,0],[435,48,431,46],[435,60,431,58],[436,0,432,2],[436,11,432,9],[436,16,432,14,"signedAuthToken"],[436,31,432,2],[437,0,433,1],[437,3,431,0],[439,0,436,0,"SCClientSocket"],[439,2,436,0,"SCClientSocket"],[439,16,436,14],[439,17,436,15,"prototype"],[439,26,436,0],[439,27,436,25,"authenticate"],[439,39,436,0],[439,42,436,40],[439,52,436,50,"signedAuthToken"],[439,67,436,40],[439,69,436,67,"callback"],[439,77,436,40],[439,79,436,77],[440,0,437,2],[440,8,437,6,"self"],[440,12,437,10],[440,15,437,13],[440,19,437,2],[441,0,439,2],[441,9,439,7,"emit"],[441,13,439,2],[441,14,439,12],[441,29,439,2],[441,31,439,29,"signedAuthToken"],[441,46,439,2],[441,48,439,46],[441,58,439,56,"err"],[441,61,439,46],[441,63,439,61,"authStatus"],[441,73,439,46],[441,75,439,73],[442,0,440,4],[442,10,440,8,"authStatus"],[442,20,440,18],[442,24,440,22,"authStatus"],[442,34,440,32],[442,35,440,33,"isAuthenticated"],[442,50,440,22],[442,54,440,52],[442,58,440,4],[442,60,440,58],[443,0,443,6],[443,12,443,10,"authStatus"],[443,22,443,20],[443,23,443,21,"authError"],[443,32,443,6],[443,34,443,32],[444,0,444,8,"authStatus"],[444,10,444,8,"authStatus"],[444,20,444,18],[444,21,444,19,"authError"],[444,30,444,8],[444,33,444,31,"scErrors"],[444,41,444,39],[444,42,444,40,"hydrateError"],[444,54,444,31],[444,55,444,53,"authStatus"],[444,65,444,63],[444,66,444,64,"authError"],[444,75,444,31],[444,76,444,8],[445,0,445,7],[446,0,446,5],[446,7,440,4],[446,13,446,11],[447,0,449,6,"authStatus"],[447,8,449,6,"authStatus"],[447,18,449,16],[447,21,449,19],[448,0,450,8,"isAuthenticated"],[448,10,450,8,"isAuthenticated"],[448,25,450,23],[448,27,450,25,"self"],[448,31,450,29],[448,32,450,30,"authState"],[448,41,449,19],[449,0,451,8,"authError"],[449,10,451,8,"authError"],[449,19,451,17],[449,21,451,19],[450,0,449,19],[450,9,449,6],[451,0,453,5],[453,0,454,4],[453,10,454,8,"err"],[453,13,454,4],[453,15,454,13],[454,0,455,6],[454,12,455,10,"err"],[454,15,455,13],[454,16,455,14,"name"],[454,20,455,10],[454,25,455,23],[454,45,455,10],[454,49,455,47,"err"],[454,52,455,50],[454,53,455,51,"name"],[454,57,455,47],[454,62,455,60],[454,76,455,6],[454,78,455,76],[455,0,459,8,"self"],[455,10,459,8,"self"],[455,14,459,12],[455,15,459,13,"_changeToUnauthenticatedStateAndClearTokens"],[455,58,459,8],[456,0,460,7],[458,0,461,6,"callback"],[458,8,461,6,"callback"],[458,16,461,14],[458,20,461,18,"callback"],[458,28,461,26],[458,29,461,27,"err"],[458,32,461,26],[458,34,461,32,"authStatus"],[458,44,461,26],[458,45,461,6],[459,0,462,5],[459,7,454,4],[459,13,462,11],[460,0,463,6,"self"],[460,8,463,6,"self"],[460,12,463,10],[460,13,463,11,"auth"],[460,17,463,6],[460,18,463,16,"saveToken"],[460,27,463,6],[460,28,463,26,"self"],[460,32,463,30],[460,33,463,31,"authTokenName"],[460,46,463,6],[460,48,463,46,"signedAuthToken"],[460,63,463,6],[460,65,463,63],[460,67,463,6],[460,69,463,67],[460,79,463,77,"err"],[460,82,463,67],[460,84,463,82],[461,0,464,8],[461,14,464,12,"err"],[461,17,464,8],[461,19,464,17],[462,0,465,10,"self"],[462,12,465,10,"self"],[462,16,465,14],[462,17,465,15,"_onSCError"],[462,27,465,10],[462,28,465,26,"err"],[462,31,465,10],[463,0,466,9],[465,0,467,8],[465,14,467,12,"authStatus"],[465,24,467,22],[465,25,467,23,"isAuthenticated"],[465,40,467,8],[465,42,467,40],[466,0,468,10,"self"],[466,12,468,10,"self"],[466,16,468,14],[466,17,468,15,"_changeToAuthenticatedState"],[466,44,468,10],[466,45,468,43,"signedAuthToken"],[466,60,468,10],[467,0,469,9],[467,11,467,8],[467,17,469,15],[468,0,470,10,"self"],[468,12,470,10,"self"],[468,16,470,14],[468,17,470,15,"_changeToUnauthenticatedStateAndClearTokens"],[468,60,470,10],[469,0,471,9],[471,0,472,8,"callback"],[471,10,472,8,"callback"],[471,18,472,16],[471,22,472,20,"callback"],[471,30,472,28],[471,31,472,29,"err"],[471,34,472,28],[471,36,472,34,"authStatus"],[471,46,472,28],[471,47,472,8],[472,0,473,7],[472,9,463,6],[473,0,474,5],[474,0,475,3],[474,5,439,2],[475,0,476,1],[475,3,436,0],[477,0,478,0,"SCClientSocket"],[477,2,478,0,"SCClientSocket"],[477,16,478,14],[477,17,478,15,"prototype"],[477,26,478,0],[477,27,478,25,"_tryReconnect"],[477,40,478,0],[477,43,478,41],[477,53,478,51,"initialDelay"],[477,65,478,41],[477,67,478,65],[478,0,479,2],[478,8,479,6,"self"],[478,12,479,10],[478,15,479,13],[478,19,479,2],[479,0,481,2],[479,8,481,6,"exponent"],[479,16,481,14],[479,19,481,17],[479,24,481,22,"connectAttempts"],[479,39,481,17],[479,41,481,2],[480,0,482,2],[480,8,482,6,"reconnectOptions"],[480,24,482,22],[480,27,482,25],[480,32,482,30,"options"],[480,39,482,25],[480,40,482,38,"autoReconnectOptions"],[480,60,482,2],[481,0,483,2],[481,8,483,6,"timeout"],[481,15,483,2],[483,0,485,2],[483,8,485,6,"initialDelay"],[483,20,485,18],[483,24,485,22],[483,28,485,6],[483,32,485,30,"exponent"],[483,40,485,38],[483,43,485,41],[483,44,485,2],[483,46,485,44],[484,0,486,4],[484,10,486,8,"initialTimeout"],[484,24,486,22],[484,27,486,25,"Math"],[484,31,486,29],[484,32,486,30,"round"],[484,37,486,25],[484,38,486,36,"reconnectOptions"],[484,54,486,52],[484,55,486,53,"initialDelay"],[484,67,486,36],[484,70,486,68],[484,71,486,69,"reconnectOptions"],[484,87,486,85],[484,88,486,86,"randomness"],[484,98,486,69],[484,102,486,100],[484,103,486,68],[484,107,486,105,"Math"],[484,111,486,109],[484,112,486,110,"random"],[484,118,486,105],[484,120,486,25],[484,121,486,4],[485,0,488,4,"timeout"],[485,6,488,4,"timeout"],[485,13,488,11],[485,16,488,14,"Math"],[485,20,488,18],[485,21,488,19,"round"],[485,26,488,14],[485,27,488,25,"initialTimeout"],[485,41,488,39],[485,44,488,42,"Math"],[485,48,488,46],[485,49,488,47,"pow"],[485,52,488,42],[485,53,488,51,"reconnectOptions"],[485,69,488,67],[485,70,488,68,"multiplier"],[485,80,488,42],[485,82,488,80,"exponent"],[485,90,488,42],[485,91,488,14],[485,92,488,4],[486,0,489,3],[486,5,485,2],[486,11,489,9],[487,0,490,4,"timeout"],[487,6,490,4,"timeout"],[487,13,490,11],[487,16,490,14,"initialDelay"],[487,28,490,4],[488,0,491,3],[490,0,493,2],[490,8,493,6,"timeout"],[490,15,493,13],[490,18,493,16,"reconnectOptions"],[490,34,493,32],[490,35,493,33,"maxDelay"],[490,43,493,2],[490,45,493,43],[491,0,494,4,"timeout"],[491,6,494,4,"timeout"],[491,13,494,11],[491,16,494,14,"reconnectOptions"],[491,32,494,30],[491,33,494,31,"maxDelay"],[491,41,494,4],[492,0,495,3],[494,0,497,2,"clearTimeout"],[494,4,497,2,"clearTimeout"],[494,16,497,14],[494,17,497,15],[494,22,497,20,"_reconnectTimeoutRef"],[494,42,497,14],[494,43,497,2],[495,0,499,2],[495,9,499,7,"pendingReconnect"],[495,25,499,2],[495,28,499,26],[495,32,499,2],[496,0,500,2],[496,9,500,7,"pendingReconnectTimeout"],[496,32,500,2],[496,35,500,33,"timeout"],[496,42,500,2],[497,0,501,2],[497,9,501,7,"_reconnectTimeoutRef"],[497,29,501,2],[497,32,501,30,"setTimeout"],[497,42,501,40],[497,43,501,41],[497,55,501,53],[498,0,502,4,"self"],[498,6,502,4,"self"],[498,10,502,8],[498,11,502,9,"connect"],[498,18,502,4],[499,0,503,3],[499,5,501,40],[499,7,503,5,"timeout"],[499,14,501,40],[499,15,501,2],[500,0,504,1],[500,3,478,0],[502,0,506,0,"SCClientSocket"],[502,2,506,0,"SCClientSocket"],[502,16,506,14],[502,17,506,15,"prototype"],[502,26,506,0],[502,27,506,25,"_onSCOpen"],[502,36,506,0],[502,39,506,37],[502,49,506,47,"status"],[502,55,506,37],[502,57,506,55],[503,0,507,2],[503,8,507,6,"self"],[503,12,507,10],[503,15,507,13],[503,19,507,2],[504,0,509,2],[504,9,509,7,"preparingPendingSubscriptions"],[504,38,509,2],[504,41,509,39],[504,45,509,2],[506,0,511,2],[506,8,511,6,"status"],[506,14,511,2],[506,16,511,14],[507,0,512,4],[507,11,512,9,"id"],[507,13,512,4],[507,16,512,14,"status"],[507,22,512,20],[507,23,512,21,"id"],[507,25,512,4],[508,0,513,4],[508,11,513,9,"pingTimeout"],[508,22,513,4],[508,25,513,23,"status"],[508,31,513,29],[508,32,513,30,"pingTimeout"],[508,43,513,4],[509,0,514,4],[509,11,514,9,"transport"],[509,20,514,4],[509,21,514,19,"pingTimeout"],[509,32,514,4],[509,35,514,33],[509,40,514,38,"pingTimeout"],[509,51,514,4],[511,0,515,4],[511,10,515,8,"status"],[511,16,515,14],[511,17,515,15,"isAuthenticated"],[511,32,515,4],[511,34,515,32],[512,0,516,6],[512,13,516,11,"_changeToAuthenticatedState"],[512,40,516,6],[512,41,516,39,"status"],[512,47,516,45],[512,48,516,46,"authToken"],[512,57,516,6],[513,0,517,5],[513,7,515,4],[513,13,517,11],[514,0,518,6],[514,13,518,11,"_changeToUnauthenticatedStateAndClearTokens"],[514,56,518,6],[515,0,519,5],[516,0,520,3],[516,5,511,2],[516,11,520,9],[517,0,524,4],[517,11,524,9,"_changeToUnauthenticatedStateAndClearTokens"],[517,54,524,4],[518,0,525,3],[520,0,527,2],[520,9,527,7,"connectAttempts"],[520,24,527,2],[520,27,527,25],[520,28,527,2],[522,0,529,2],[522,8,529,6],[522,13,529,11,"options"],[522,20,529,6],[522,21,529,19,"autoSubscribeOnConnect"],[522,43,529,2],[522,45,529,43],[523,0,530,4],[523,11,530,9,"processPendingSubscriptions"],[523,38,530,4],[524,0,531,3],[526,0,535,2,"Emitter"],[526,4,535,2,"Emitter"],[526,11,535,9],[526,12,535,10,"prototype"],[526,21,535,2],[526,22,535,20,"emit"],[526,26,535,2],[526,27,535,25,"call"],[526,31,535,2],[526,32,535,30],[526,36,535,2],[526,38,535,36],[526,47,535,2],[526,49,535,47,"status"],[526,55,535,2],[526,57,535,55],[526,69,535,67],[527,0,536,4,"self"],[527,6,536,4,"self"],[527,10,536,8],[527,11,536,9,"processPendingSubscriptions"],[527,38,536,4],[528,0,537,3],[528,5,535,2],[530,0,539,2],[530,8,539,6],[530,13,539,11,"state"],[530,18,539,6],[530,23,539,21],[530,28,539,26,"OPEN"],[530,32,539,2],[530,34,539,32],[531,0,540,4],[531,11,540,9,"_flushEmitBuffer"],[531,27,540,4],[532,0,541,3],[533,0,542,1],[533,3,506,0],[535,0,544,0,"SCClientSocket"],[535,2,544,0,"SCClientSocket"],[535,16,544,14],[535,17,544,15,"prototype"],[535,26,544,0],[535,27,544,25,"_onSCError"],[535,37,544,0],[535,40,544,38],[535,50,544,48,"err"],[535,53,544,38],[535,55,544,53],[536,0,545,2],[536,8,545,6,"self"],[536,12,545,10],[536,15,545,13],[536,19,545,2],[537,0,549,2,"setTimeout"],[537,4,549,2,"setTimeout"],[537,14,549,12],[537,15,549,13],[537,27,549,25],[538,0,550,4],[538,10,550,8,"self"],[538,14,550,12],[538,15,550,13,"listeners"],[538,24,550,8],[538,25,550,23],[538,32,550,8],[538,34,550,32,"length"],[538,40,550,8],[538,43,550,41],[538,44,550,4],[538,46,550,44],[539,0,551,6],[539,14,551,12,"err"],[539,17,551,6],[540,0,552,5],[540,7,550,4],[540,13,552,11],[541,0,553,6,"Emitter"],[541,8,553,6,"Emitter"],[541,15,553,13],[541,16,553,14,"prototype"],[541,25,553,6],[541,26,553,24,"emit"],[541,30,553,6],[541,31,553,29,"call"],[541,35,553,6],[541,36,553,34,"self"],[541,40,553,6],[541,42,553,40],[541,49,553,6],[541,51,553,49,"err"],[541,54,553,6],[542,0,554,5],[543,0,555,3],[543,5,549,12],[543,7,555,5],[543,8,549,12],[543,9,549,2],[544,0,556,1],[544,3,544,0],[546,0,558,0,"SCClientSocket"],[546,2,558,0,"SCClientSocket"],[546,16,558,14],[546,17,558,15,"prototype"],[546,26,558,0],[546,27,558,25,"_suspendSubscriptions"],[546,48,558,0],[546,51,558,49],[546,63,558,61],[547,0,559,2],[547,8,559,6,"channel"],[547,15,559,2],[547,17,559,15,"newState"],[547,25,559,2],[549,0,560,2],[549,9,560,7],[549,13,560,11,"channelName"],[549,24,560,2],[549,28,560,26],[549,33,560,31,"channels"],[549,41,560,2],[549,43,560,41],[550,0,561,4],[550,10,561,8],[550,15,561,13,"channels"],[550,23,561,8],[550,24,561,22,"hasOwnProperty"],[550,38,561,8],[550,39,561,37,"channelName"],[550,50,561,8],[550,51,561,4],[550,53,561,51],[551,0,562,6,"channel"],[551,8,562,6,"channel"],[551,15,562,13],[551,18,562,16],[551,23,562,21,"channels"],[551,31,562,16],[551,32,562,30,"channelName"],[551,43,562,16],[551,44,562,6],[553,0,563,6],[553,12,563,10,"channel"],[553,19,563,17],[553,20,563,18,"state"],[553,25,563,10],[553,30,563,28,"channel"],[553,37,563,35],[553,38,563,36,"SUBSCRIBED"],[553,48,563,10],[553,52,564,8,"channel"],[553,59,564,15],[553,60,564,16,"state"],[553,65,564,8],[553,70,564,26,"channel"],[553,77,564,33],[553,78,564,34,"PENDING"],[553,85,563,6],[553,87,564,43],[554,0,566,8,"newState"],[554,10,566,8,"newState"],[554,18,566,16],[554,21,566,19,"channel"],[554,28,566,26],[554,29,566,27,"PENDING"],[554,36,566,8],[555,0,567,7],[555,9,563,6],[555,15,567,13],[556,0,568,8,"newState"],[556,10,568,8,"newState"],[556,18,568,16],[556,21,568,19,"channel"],[556,28,568,26],[556,29,568,27,"UNSUBSCRIBED"],[556,41,568,8],[557,0,569,7],[559,0,571,6],[559,13,571,11,"_triggerChannelUnsubscribe"],[559,39,571,6],[559,40,571,38,"channel"],[559,47,571,6],[559,49,571,47,"newState"],[559,57,571,6],[560,0,572,5],[561,0,573,3],[562,0,574,1],[562,3,558,0],[564,0,576,0,"SCClientSocket"],[564,2,576,0,"SCClientSocket"],[564,16,576,14],[564,17,576,15,"prototype"],[564,26,576,0],[564,27,576,25,"_abortAllPendingEventsDueToBadConnection"],[564,67,576,0],[564,70,576,68],[564,80,576,78,"failureType"],[564,91,576,68],[564,93,576,91],[565,0,577,2],[565,8,577,6,"currentNode"],[565,19,577,17],[565,22,577,20],[565,27,577,25,"_emitBuffer"],[565,38,577,20],[565,39,577,37,"head"],[565,43,577,2],[566,0,578,2],[566,8,578,6,"nextNode"],[566,16,578,2],[568,0,580,2],[568,11,580,9,"currentNode"],[568,22,580,2],[568,24,580,22],[569,0,581,4,"nextNode"],[569,6,581,4,"nextNode"],[569,14,581,12],[569,17,581,15,"currentNode"],[569,28,581,26],[569,29,581,27,"next"],[569,33,581,4],[570,0,582,4],[570,10,582,8,"eventObject"],[570,21,582,19],[570,24,582,22,"currentNode"],[570,35,582,33],[570,36,582,34,"data"],[570,40,582,4],[571,0,583,4,"clearTimeout"],[571,6,583,4,"clearTimeout"],[571,18,583,16],[571,19,583,17,"eventObject"],[571,30,583,28],[571,31,583,29,"timeout"],[571,38,583,16],[571,39,583,4],[572,0,584,4],[572,13,584,11,"eventObject"],[572,24,584,22],[572,25,584,23,"timeout"],[572,32,584,4],[573,0,585,4,"currentNode"],[573,6,585,4,"currentNode"],[573,17,585,15],[573,18,585,16,"detach"],[573,24,585,4],[574,0,586,4,"currentNode"],[574,6,586,4,"currentNode"],[574,17,586,15],[574,20,586,18,"nextNode"],[574,28,586,4],[575,0,588,4],[575,10,588,8,"callback"],[575,18,588,16],[575,21,588,19,"eventObject"],[575,32,588,30],[575,33,588,31,"callback"],[575,41,588,4],[577,0,589,4],[577,10,589,8,"callback"],[577,18,589,4],[577,20,589,18],[578,0,590,6],[578,15,590,13,"eventObject"],[578,26,590,24],[578,27,590,25,"callback"],[578,35,590,6],[579,0,591,6],[579,12,591,10,"errorMessage"],[579,24,591,22],[579,27,591,25],[579,39,591,37,"eventObject"],[579,50,591,48],[579,51,591,49,"event"],[579,56,591,25],[579,59,592,8],[579,98,591,6],[580,0,593,6],[580,12,593,10,"error"],[580,17,593,15],[580,20,593,18],[580,24,593,22,"BadConnectionError"],[580,42,593,18],[580,43,593,41,"errorMessage"],[580,55,593,18],[580,57,593,55,"failureType"],[580,68,593,18],[580,69,593,6],[581,0,594,6,"callback"],[581,8,594,6,"callback"],[581,16,594,14],[581,17,594,15,"call"],[581,21,594,6],[581,22,594,20,"eventObject"],[581,33,594,6],[581,35,594,33,"error"],[581,40,594,6],[581,42,594,40,"eventObject"],[581,53,594,6],[582,0,595,5],[584,0,597,4],[584,10,597,8,"eventObject"],[584,21,597,19],[584,22,597,20,"cid"],[584,25,597,4],[584,27,597,25],[585,0,598,6],[585,13,598,11,"transport"],[585,22,598,6],[585,23,598,21,"cancelPendingResponse"],[585,44,598,6],[585,45,598,43,"eventObject"],[585,56,598,54],[585,57,598,55,"cid"],[585,60,598,6],[586,0,599,5],[587,0,600,3],[588,0,601,1],[588,3,576,0],[590,0,603,0,"SCClientSocket"],[590,2,603,0,"SCClientSocket"],[590,16,603,14],[590,17,603,15,"prototype"],[590,26,603,0],[590,27,603,25,"_onSCClose"],[590,37,603,0],[590,40,603,38],[590,50,603,48,"code"],[590,54,603,38],[590,56,603,54,"data"],[590,60,603,38],[590,62,603,60,"openAbort"],[590,71,603,38],[590,73,603,71],[591,0,604,2],[591,8,604,6,"self"],[591,12,604,10],[591,15,604,13],[591,19,604,2],[592,0,606,2],[592,9,606,7,"id"],[592,11,606,2],[592,14,606,12],[592,18,606,2],[594,0,608,2],[594,8,608,6],[594,13,608,11,"transport"],[594,22,608,2],[594,24,608,22],[595,0,609,4],[595,11,609,9,"transport"],[595,20,609,4],[595,21,609,19,"off"],[595,24,609,4],[596,0,610,3],[598,0,611,2],[598,9,611,7,"pendingReconnect"],[598,25,611,2],[598,28,611,26],[598,33,611,2],[599,0,612,2],[599,9,612,7,"pendingReconnectTimeout"],[599,32,612,2],[599,35,612,33],[599,39,612,2],[600,0,613,2,"clearTimeout"],[600,4,613,2,"clearTimeout"],[600,16,613,14],[600,17,613,15],[600,22,613,20,"_reconnectTimeoutRef"],[600,42,613,14],[600,43,613,2],[602,0,615,2],[602,9,615,7,"_suspendSubscriptions"],[602,30,615,2],[604,0,616,2],[604,9,616,7,"_abortAllPendingEventsDueToBadConnection"],[604,49,616,2],[604,50,616,48,"openAbort"],[604,59,616,57],[604,62,616,60],[604,76,616,57],[604,79,616,77],[604,91,616,2],[606,0,625,2],[606,8,625,6],[606,13,625,11,"options"],[606,20,625,6],[606,21,625,19,"autoReconnect"],[606,34,625,2],[606,36,625,34],[607,0,626,4],[607,10,626,8,"code"],[607,14,626,12],[607,19,626,17],[607,23,626,8],[607,27,626,25,"code"],[607,31,626,29],[607,36,626,34],[607,40,626,8],[607,44,626,42,"code"],[607,48,626,46],[607,53,626,51],[607,57,626,4],[607,59,626,57],[608,0,631,6],[608,13,631,11,"_tryReconnect"],[608,26,631,6],[608,27,631,25],[608,28,631,6],[609,0,635,5],[609,7,626,4],[609,13,635,11],[609,17,635,15,"code"],[609,21,635,19],[609,26,635,24],[609,30,635,15],[609,34,635,32,"code"],[609,38,635,36],[609,41,635,39],[609,45,635,11],[609,47,635,45],[610,0,636,6],[610,13,636,11,"_tryReconnect"],[610,26,636,6],[611,0,637,5],[612,0,638,3],[614,0,640,2],[614,8,640,6,"openAbort"],[614,17,640,2],[614,19,640,17],[615,0,641,4,"Emitter"],[615,6,641,4,"Emitter"],[615,13,641,11],[615,14,641,12,"prototype"],[615,23,641,4],[615,24,641,22,"emit"],[615,28,641,4],[615,29,641,27,"call"],[615,33,641,4],[615,34,641,32,"self"],[615,38,641,4],[615,40,641,38],[615,54,641,4],[615,56,641,54,"code"],[615,60,641,4],[615,62,641,60,"data"],[615,66,641,4],[616,0,642,3],[616,5,640,2],[616,11,642,9],[617,0,643,4,"Emitter"],[617,6,643,4,"Emitter"],[617,13,643,11],[617,14,643,12,"prototype"],[617,23,643,4],[617,24,643,22,"emit"],[617,28,643,4],[617,29,643,27,"call"],[617,33,643,4],[617,34,643,32,"self"],[617,38,643,4],[617,40,643,38],[617,52,643,4],[617,54,643,52,"code"],[617,58,643,4],[617,60,643,58,"data"],[617,64,643,4],[618,0,644,3],[620,0,645,2,"Emitter"],[620,4,645,2,"Emitter"],[620,11,645,9],[620,12,645,10,"prototype"],[620,21,645,2],[620,22,645,20,"emit"],[620,26,645,2],[620,27,645,25,"call"],[620,31,645,2],[620,32,645,30,"self"],[620,36,645,2],[620,38,645,36],[620,45,645,2],[620,47,645,45,"code"],[620,51,645,2],[620,53,645,51,"data"],[620,57,645,2],[622,0,647,2],[622,8,647,6],[622,9,647,7,"SCClientSocket"],[622,23,647,21],[622,24,647,22,"ignoreStatuses"],[622,38,647,7],[622,39,647,37,"code"],[622,43,647,7],[622,44,647,2],[622,46,647,44],[623,0,648,4],[623,10,648,8,"closeMessage"],[623,22,648,4],[625,0,649,4],[625,10,649,8,"data"],[625,14,649,4],[625,16,649,14],[626,0,650,6,"closeMessage"],[626,8,650,6,"closeMessage"],[626,20,650,18],[626,23,650,21],[626,70,650,68,"code"],[626,74,650,21],[626,77,650,75],[626,92,650,21],[626,95,650,93,"data"],[626,99,650,6],[627,0,651,5],[627,7,649,4],[627,13,651,11],[628,0,652,6,"closeMessage"],[628,8,652,6,"closeMessage"],[628,20,652,18],[628,23,652,21],[628,70,652,68,"code"],[628,74,652,6],[629,0,653,5],[631,0,654,4],[631,10,654,8,"err"],[631,13,654,11],[631,16,654,14],[631,20,654,18,"SocketProtocolError"],[631,39,654,14],[631,40,654,38,"SCClientSocket"],[631,54,654,52],[631,55,654,53,"errorStatuses"],[631,68,654,38],[631,69,654,67,"code"],[631,73,654,38],[631,78,654,76,"closeMessage"],[631,90,654,14],[631,92,654,90,"code"],[631,96,654,14],[631,97,654,4],[633,0,655,4],[633,11,655,9,"_onSCError"],[633,21,655,4],[633,22,655,20,"err"],[633,25,655,4],[634,0,656,3],[635,0,657,1],[635,3,603,0],[637,0,659,0,"SCClientSocket"],[637,2,659,0,"SCClientSocket"],[637,16,659,14],[637,17,659,15,"prototype"],[637,26,659,0],[637,27,659,25,"_onSCEvent"],[637,37,659,0],[637,40,659,38],[637,50,659,48,"event"],[637,55,659,38],[637,57,659,55,"data"],[637,61,659,38],[637,63,659,61,"res"],[637,66,659,38],[637,68,659,66],[638,0,660,2],[638,8,660,6,"handler"],[638,15,660,13],[638,18,660,16],[638,23,660,21,"_privateEventHandlerMap"],[638,46,660,16],[638,47,660,45,"event"],[638,52,660,16],[638,53,660,2],[640,0,661,2],[640,8,661,6,"handler"],[640,15,661,2],[640,17,661,15],[641,0,662,4,"handler"],[641,6,662,4,"handler"],[641,13,662,11],[641,14,662,12,"call"],[641,18,662,4],[641,19,662,17],[641,23,662,4],[641,25,662,23,"data"],[641,29,662,4],[641,31,662,29,"res"],[641,34,662,4],[642,0,663,3],[642,5,661,2],[642,11,663,9],[643,0,664,4,"Emitter"],[643,6,664,4,"Emitter"],[643,13,664,11],[643,14,664,12,"prototype"],[643,23,664,4],[643,24,664,22,"emit"],[643,28,664,4],[643,29,664,27,"call"],[643,33,664,4],[643,34,664,32],[643,38,664,4],[643,40,664,38,"event"],[643,45,664,4],[643,47,664,45,"data"],[643,51,664,4],[643,53,664,51],[643,65,664,63],[644,0,665,6,"res"],[644,8,665,6,"res"],[644,11,665,9],[644,15,665,13,"res"],[644,18,665,16],[644,19,665,17,"callback"],[644,27,665,13],[644,28,665,26,"apply"],[644,33,665,13],[644,34,665,32,"res"],[644,37,665,13],[644,39,665,37,"arguments"],[644,48,665,13],[644,49,665,6],[645,0,666,5],[645,7,664,4],[646,0,667,3],[647,0,668,1],[647,3,659,0],[649,0,670,0,"SCClientSocket"],[649,2,670,0,"SCClientSocket"],[649,16,670,14],[649,17,670,15,"prototype"],[649,26,670,0],[649,27,670,25,"decode"],[649,33,670,0],[649,36,670,34],[649,46,670,44,"message"],[649,53,670,34],[649,55,670,53],[650,0,671,2],[650,11,671,9],[650,16,671,14,"transport"],[650,25,671,9],[650,26,671,24,"decode"],[650,32,671,9],[650,33,671,31,"message"],[650,40,671,9],[650,41,671,2],[651,0,672,1],[651,3,670,0],[653,0,674,0,"SCClientSocket"],[653,2,674,0,"SCClientSocket"],[653,16,674,14],[653,17,674,15,"prototype"],[653,26,674,0],[653,27,674,25,"encode"],[653,33,674,0],[653,36,674,34],[653,46,674,44,"object"],[653,52,674,34],[653,54,674,52],[654,0,675,2],[654,11,675,9],[654,16,675,14,"transport"],[654,25,675,9],[654,26,675,24,"encode"],[654,32,675,9],[654,33,675,31,"object"],[654,39,675,9],[654,40,675,2],[655,0,676,1],[655,3,674,0],[657,0,678,0,"SCClientSocket"],[657,2,678,0,"SCClientSocket"],[657,16,678,14],[657,17,678,15,"prototype"],[657,26,678,0],[657,27,678,25,"_flushEmitBuffer"],[657,43,678,0],[657,46,678,44],[657,58,678,56],[658,0,679,2],[658,8,679,6,"currentNode"],[658,19,679,17],[658,22,679,20],[658,27,679,25,"_emitBuffer"],[658,38,679,20],[658,39,679,37,"head"],[658,43,679,2],[659,0,680,2],[659,8,680,6,"nextNode"],[659,16,680,2],[661,0,682,2],[661,11,682,9,"currentNode"],[661,22,682,2],[661,24,682,22],[662,0,683,4,"nextNode"],[662,6,683,4,"nextNode"],[662,14,683,12],[662,17,683,15,"currentNode"],[662,28,683,26],[662,29,683,27,"next"],[662,33,683,4],[663,0,684,4],[663,10,684,8,"eventObject"],[663,21,684,19],[663,24,684,22,"currentNode"],[663,35,684,33],[663,36,684,34,"data"],[663,40,684,4],[664,0,685,4,"currentNode"],[664,6,685,4,"currentNode"],[664,17,685,15],[664,18,685,16,"detach"],[664,24,685,4],[665,0,686,4],[665,11,686,9,"transport"],[665,20,686,4],[665,21,686,19,"emitObject"],[665,31,686,4],[665,32,686,30,"eventObject"],[665,43,686,4],[666,0,687,4,"currentNode"],[666,6,687,4,"currentNode"],[666,17,687,15],[666,20,687,18,"nextNode"],[666,28,687,4],[667,0,688,3],[668,0,689,1],[668,3,678,0],[670,0,691,0,"SCClientSocket"],[670,2,691,0,"SCClientSocket"],[670,16,691,14],[670,17,691,15,"prototype"],[670,26,691,0],[670,27,691,25,"_handleEventAckTimeout"],[670,49,691,0],[670,52,691,50],[670,62,691,60,"eventObject"],[670,73,691,50],[670,75,691,73,"eventNode"],[670,84,691,50],[670,86,691,84],[671,0,692,2],[671,8,692,6,"eventNode"],[671,17,692,2],[671,19,692,17],[672,0,693,4,"eventNode"],[672,6,693,4,"eventNode"],[672,15,693,13],[672,16,693,14,"detach"],[672,22,693,4],[673,0,694,3],[675,0,695,2],[675,11,695,9,"eventObject"],[675,22,695,20],[675,23,695,21,"timeout"],[675,30,695,2],[676,0,697,2],[676,8,697,6,"callback"],[676,16,697,14],[676,19,697,17,"eventObject"],[676,30,697,28],[676,31,697,29,"callback"],[676,39,697,2],[678,0,698,2],[678,8,698,6,"callback"],[678,16,698,2],[678,18,698,16],[679,0,699,4],[679,13,699,11,"eventObject"],[679,24,699,22],[679,25,699,23,"callback"],[679,33,699,4],[680,0,700,4],[680,10,700,8,"error"],[680,15,700,13],[680,18,700,16],[680,22,700,20,"TimeoutError"],[680,34,700,16],[680,35,700,33],[680,60,700,58,"eventObject"],[680,71,700,69],[680,72,700,70,"event"],[680,77,700,33],[680,80,700,78],[680,93,700,16],[680,94,700,4],[681,0,701,4,"callback"],[681,6,701,4,"callback"],[681,14,701,12],[681,15,701,13,"call"],[681,19,701,4],[681,20,701,18,"eventObject"],[681,31,701,4],[681,33,701,31,"error"],[681,38,701,4],[681,40,701,38,"eventObject"],[681,51,701,4],[682,0,702,3],[684,0,704,2],[684,8,704,6,"eventObject"],[684,19,704,17],[684,20,704,18,"cid"],[684,23,704,2],[684,25,704,23],[685,0,705,4],[685,11,705,9,"transport"],[685,20,705,4],[685,21,705,19,"cancelPendingResponse"],[685,42,705,4],[685,43,705,41,"eventObject"],[685,54,705,52],[685,55,705,53,"cid"],[685,58,705,4],[686,0,706,3],[687,0,707,1],[687,3,691,0],[689,0,709,0,"SCClientSocket"],[689,2,709,0,"SCClientSocket"],[689,16,709,14],[689,17,709,15,"prototype"],[689,26,709,0],[689,27,709,25,"_emit"],[689,32,709,0],[689,35,709,33],[689,45,709,43,"event"],[689,50,709,33],[689,52,709,50,"data"],[689,56,709,33],[689,58,709,56,"callback"],[689,66,709,33],[689,68,709,66],[690,0,710,2],[690,8,710,6,"self"],[690,12,710,10],[690,15,710,13],[690,19,710,2],[692,0,712,2],[692,8,712,6],[692,13,712,11,"state"],[692,18,712,6],[692,23,712,21],[692,28,712,26,"CLOSED"],[692,34,712,2],[692,36,712,34],[693,0,713,4],[693,11,713,9,"connect"],[693,18,713,4],[694,0,714,3],[696,0,715,2],[696,8,715,6,"eventObject"],[696,19,715,17],[696,22,715,20],[697,0,716,4,"event"],[697,6,716,4,"event"],[697,11,716,9],[697,13,716,11,"event"],[697,18,715,20],[698,0,717,4,"callback"],[698,6,717,4,"callback"],[698,14,717,12],[698,16,717,14,"callback"],[699,0,715,20],[699,5,715,2],[700,0,720,2],[700,8,720,6,"eventNode"],[700,17,720,15],[700,20,720,18],[700,24,720,22,"LinkedList"],[700,34,720,32],[700,35,720,33,"Item"],[700,39,720,18],[700,41,720,2],[702,0,722,2],[702,8,722,6],[702,13,722,11,"options"],[702,20,722,6],[702,21,722,19,"cloneData"],[702,30,722,2],[702,32,722,30],[703,0,723,4,"eventObject"],[703,6,723,4,"eventObject"],[703,17,723,15],[703,18,723,16,"data"],[703,22,723,4],[703,25,723,23,"clone"],[703,30,723,28],[703,31,723,29,"data"],[703,35,723,28],[703,36,723,4],[704,0,724,3],[704,5,722,2],[704,11,724,9],[705,0,725,4,"eventObject"],[705,6,725,4,"eventObject"],[705,17,725,15],[705,18,725,16,"data"],[705,22,725,4],[705,25,725,23,"data"],[705,29,725,4],[706,0,726,3],[708,0,727,2,"eventNode"],[708,4,727,2,"eventNode"],[708,13,727,11],[708,14,727,12,"data"],[708,18,727,2],[708,21,727,19,"eventObject"],[708,32,727,2],[709,0,729,2,"eventObject"],[709,4,729,2,"eventObject"],[709,15,729,13],[709,16,729,14,"timeout"],[709,23,729,2],[709,26,729,24,"setTimeout"],[709,36,729,34],[709,37,729,35],[709,49,729,47],[710,0,730,4,"self"],[710,6,730,4,"self"],[710,10,730,8],[710,11,730,9,"_handleEventAckTimeout"],[710,33,730,4],[710,34,730,32,"eventObject"],[710,45,730,4],[710,47,730,45,"eventNode"],[710,56,730,4],[711,0,731,3],[711,5,729,34],[711,7,731,5],[711,12,731,10,"ackTimeout"],[711,22,729,34],[711,23,729,2],[713,0,733,2],[713,9,733,7,"_emitBuffer"],[713,20,733,2],[713,21,733,19,"append"],[713,27,733,2],[713,28,733,26,"eventNode"],[713,37,733,2],[715,0,734,2],[715,8,734,6],[715,13,734,11,"state"],[715,18,734,6],[715,23,734,21],[715,28,734,26,"OPEN"],[715,32,734,2],[715,34,734,32],[716,0,735,4],[716,11,735,9,"_flushEmitBuffer"],[716,27,735,4],[717,0,736,3],[718,0,737,1],[718,3,709,0],[720,0,739,0,"SCClientSocket"],[720,2,739,0,"SCClientSocket"],[720,16,739,14],[720,17,739,15,"prototype"],[720,26,739,0],[720,27,739,25,"send"],[720,31,739,0],[720,34,739,32],[720,44,739,42,"data"],[720,48,739,32],[720,50,739,48],[721,0,740,2],[721,9,740,7,"transport"],[721,18,740,2],[721,19,740,17,"send"],[721,23,740,2],[721,24,740,22,"data"],[721,28,740,2],[722,0,741,1],[722,3,739,0],[724,0,743,0,"SCClientSocket"],[724,2,743,0,"SCClientSocket"],[724,16,743,14],[724,17,743,15,"prototype"],[724,26,743,0],[724,27,743,25,"emit"],[724,31,743,0],[724,34,743,32],[724,44,743,42,"event"],[724,49,743,32],[724,51,743,49,"data"],[724,55,743,32],[724,57,743,55,"callback"],[724,65,743,32],[724,67,743,65],[725,0,744,2],[725,8,744,6],[725,13,744,11,"_localEvents"],[725,25,744,6],[725,26,744,24,"event"],[725,31,744,6],[725,36,744,34],[725,40,744,2],[725,42,744,40],[726,0,745,4],[726,11,745,9,"_emit"],[726,16,745,4],[726,17,745,15,"event"],[726,22,745,4],[726,24,745,22,"data"],[726,28,745,4],[726,30,745,28,"callback"],[726,38,745,4],[727,0,746,3],[727,5,744,2],[727,11,746,9],[727,15,746,13,"event"],[727,20,746,18],[727,25,746,23],[727,32,746,9],[727,34,746,32],[728,0,747,4,"Emitter"],[728,6,747,4,"Emitter"],[728,13,747,11],[728,14,747,12,"prototype"],[728,23,747,4],[728,24,747,22,"emit"],[728,28,747,4],[728,29,747,27,"call"],[728,33,747,4],[728,34,747,32],[728,38,747,4],[728,40,747,38,"event"],[728,45,747,4],[728,47,747,45,"data"],[728,51,747,4],[729,0,748,3],[729,5,746,9],[729,11,748,9],[730,0,749,4],[730,10,749,8,"error"],[730,15,749,13],[730,18,749,16],[730,22,749,20,"InvalidActionError"],[730,40,749,16],[730,41,749,39],[730,51,749,49,"event"],[730,56,749,39],[730,59,749,57],[730,121,749,16],[730,122,749,4],[732,0,750,4],[732,11,750,9,"_onSCError"],[732,21,750,4],[732,22,750,20,"error"],[732,27,750,4],[733,0,751,3],[734,0,752,1],[734,3,743,0],[736,0,754,0,"SCClientSocket"],[736,2,754,0,"SCClientSocket"],[736,16,754,14],[736,17,754,15,"prototype"],[736,26,754,0],[736,27,754,25,"publish"],[736,34,754,0],[736,37,754,35],[736,47,754,45,"channelName"],[736,58,754,35],[736,60,754,58,"data"],[736,64,754,35],[736,66,754,64,"callback"],[736,74,754,35],[736,76,754,74],[737,0,755,2],[737,8,755,6,"pubData"],[737,15,755,13],[737,18,755,16],[738,0,756,4,"channel"],[738,6,756,4,"channel"],[738,13,756,11],[738,15,756,13],[738,20,756,18,"_decorateChannelName"],[738,40,756,13],[738,41,756,39,"channelName"],[738,52,756,13],[738,53,755,16],[739,0,757,4,"data"],[739,6,757,4,"data"],[739,10,757,8],[739,12,757,10,"data"],[740,0,755,16],[740,5,755,2],[741,0,759,2],[741,9,759,7,"emit"],[741,13,759,2],[741,14,759,12],[741,24,759,2],[741,26,759,24,"pubData"],[741,33,759,2],[741,35,759,33,"callback"],[741,43,759,2],[742,0,760,1],[742,3,754,0],[744,0,762,0,"SCClientSocket"],[744,2,762,0,"SCClientSocket"],[744,16,762,14],[744,17,762,15,"prototype"],[744,26,762,0],[744,27,762,25,"_triggerChannelSubscribe"],[744,51,762,0],[744,54,762,52],[744,64,762,62,"channel"],[744,71,762,52],[744,73,762,71,"subscriptionOptions"],[744,92,762,52],[744,94,762,92],[745,0,763,2],[745,8,763,6,"channelName"],[745,19,763,17],[745,22,763,20,"channel"],[745,29,763,27],[745,30,763,28,"name"],[745,34,763,2],[747,0,765,2],[747,8,765,6,"channel"],[747,15,765,13],[747,16,765,14,"state"],[747,21,765,6],[747,26,765,24,"channel"],[747,33,765,31],[747,34,765,32,"SUBSCRIBED"],[747,44,765,2],[747,46,765,44],[748,0,766,4],[748,10,766,8,"oldState"],[748,18,766,16],[748,21,766,19,"channel"],[748,28,766,26],[748,29,766,27,"state"],[748,34,766,4],[749,0,767,4,"channel"],[749,6,767,4,"channel"],[749,13,767,11],[749,14,767,12,"state"],[749,19,767,4],[749,22,767,20,"channel"],[749,29,767,27],[749,30,767,28,"SUBSCRIBED"],[749,40,767,4],[750,0,769,4],[750,10,769,8,"stateChangeData"],[750,25,769,23],[750,28,769,26],[751,0,770,6,"channel"],[751,8,770,6,"channel"],[751,15,770,13],[751,17,770,15,"channelName"],[751,28,769,26],[752,0,771,6,"oldState"],[752,8,771,6,"oldState"],[752,16,771,14],[752,18,771,16,"oldState"],[752,26,769,26],[753,0,772,6,"newState"],[753,8,772,6,"newState"],[753,16,772,14],[753,18,772,16,"channel"],[753,25,772,23],[753,26,772,24,"state"],[753,31,769,26],[754,0,773,6,"subscriptionOptions"],[754,8,773,6,"subscriptionOptions"],[754,27,773,25],[754,29,773,27,"subscriptionOptions"],[755,0,769,26],[755,7,769,4],[756,0,775,4,"channel"],[756,6,775,4,"channel"],[756,13,775,11],[756,14,775,12,"emit"],[756,18,775,4],[756,19,775,17],[756,41,775,4],[756,43,775,41,"stateChangeData"],[756,58,775,4],[757,0,776,4,"channel"],[757,6,776,4,"channel"],[757,13,776,11],[757,14,776,12,"emit"],[757,18,776,4],[757,19,776,17],[757,30,776,4],[757,32,776,30,"channelName"],[757,43,776,4],[757,45,776,43,"subscriptionOptions"],[757,64,776,4],[758,0,777,4,"Emitter"],[758,6,777,4,"Emitter"],[758,13,777,11],[758,14,777,12,"prototype"],[758,23,777,4],[758,24,777,22,"emit"],[758,28,777,4],[758,29,777,27,"call"],[758,33,777,4],[758,34,777,32],[758,38,777,4],[758,40,777,38],[758,62,777,4],[758,64,777,62,"stateChangeData"],[758,79,777,4],[759,0,778,4,"Emitter"],[759,6,778,4,"Emitter"],[759,13,778,11],[759,14,778,12,"prototype"],[759,23,778,4],[759,24,778,22,"emit"],[759,28,778,4],[759,29,778,27,"call"],[759,33,778,4],[759,34,778,32],[759,38,778,4],[759,40,778,38],[759,51,778,4],[759,53,778,51,"channelName"],[759,64,778,4],[759,66,778,64,"subscriptionOptions"],[759,85,778,4],[760,0,779,3],[761,0,780,1],[761,3,762,0],[763,0,782,0,"SCClientSocket"],[763,2,782,0,"SCClientSocket"],[763,16,782,14],[763,17,782,15,"prototype"],[763,26,782,0],[763,27,782,25,"_triggerChannelSubscribeFail"],[763,55,782,0],[763,58,782,56],[763,68,782,66,"err"],[763,71,782,56],[763,73,782,71,"channel"],[763,80,782,56],[763,82,782,80,"subscriptionOptions"],[763,101,782,56],[763,103,782,101],[764,0,783,2],[764,8,783,6,"channelName"],[764,19,783,17],[764,22,783,20,"channel"],[764,29,783,27],[764,30,783,28,"name"],[764,34,783,2],[765,0,784,2],[765,8,784,6,"meetsAuthRequirements"],[765,29,784,27],[765,32,784,30],[765,33,784,31,"channel"],[765,40,784,38],[765,41,784,39,"waitForAuth"],[765,52,784,30],[765,56,784,54],[765,61,784,59,"authState"],[765,70,784,54],[765,75,784,73],[765,80,784,78,"AUTHENTICATED"],[765,93,784,2],[767,0,786,2],[767,8,786,6,"channel"],[767,15,786,13],[767,16,786,14,"state"],[767,21,786,6],[767,26,786,24,"channel"],[767,33,786,31],[767,34,786,32,"UNSUBSCRIBED"],[767,46,786,6],[767,50,786,48,"meetsAuthRequirements"],[767,71,786,2],[767,73,786,71],[768,0,787,4,"channel"],[768,6,787,4,"channel"],[768,13,787,11],[768,14,787,12,"state"],[768,19,787,4],[768,22,787,20,"channel"],[768,29,787,27],[768,30,787,28,"UNSUBSCRIBED"],[768,42,787,4],[769,0,789,4,"channel"],[769,6,789,4,"channel"],[769,13,789,11],[769,14,789,12,"emit"],[769,18,789,4],[769,19,789,17],[769,34,789,4],[769,36,789,34,"err"],[769,39,789,4],[769,41,789,39,"channelName"],[769,52,789,4],[769,54,789,52,"subscriptionOptions"],[769,73,789,4],[770,0,790,4,"Emitter"],[770,6,790,4,"Emitter"],[770,13,790,11],[770,14,790,12,"prototype"],[770,23,790,4],[770,24,790,22,"emit"],[770,28,790,4],[770,29,790,27,"call"],[770,33,790,4],[770,34,790,32],[770,38,790,4],[770,40,790,38],[770,55,790,4],[770,57,790,55,"err"],[770,60,790,4],[770,62,790,60,"channelName"],[770,73,790,4],[770,75,790,73,"subscriptionOptions"],[770,94,790,4],[771,0,791,3],[772,0,792,1],[772,3,782,0],[774,0,795,0,"SCClientSocket"],[774,2,795,0,"SCClientSocket"],[774,16,795,14],[774,17,795,15,"prototype"],[774,26,795,0],[774,27,795,25,"_cancelPendingSubscribeCallback"],[774,58,795,0],[774,61,795,59],[774,71,795,69,"channel"],[774,78,795,59],[774,80,795,78],[775,0,796,2],[775,8,796,6,"channel"],[775,15,796,13],[775,16,796,14,"_pendingSubscriptionCid"],[775,39,796,6],[775,43,796,41],[775,47,796,2],[775,49,796,47],[776,0,797,4],[776,11,797,9,"transport"],[776,20,797,4],[776,21,797,19,"cancelPendingResponse"],[776,42,797,4],[776,43,797,41,"channel"],[776,50,797,48],[776,51,797,49,"_pendingSubscriptionCid"],[776,74,797,4],[777,0,798,4],[777,13,798,11,"channel"],[777,20,798,18],[777,21,798,19,"_pendingSubscriptionCid"],[777,44,798,4],[778,0,799,3],[779,0,800,1],[779,3,795,0],[781,0,802,0,"SCClientSocket"],[781,2,802,0,"SCClientSocket"],[781,16,802,14],[781,17,802,15,"prototype"],[781,26,802,0],[781,27,802,25,"_decorateChannelName"],[781,47,802,0],[781,50,802,48],[781,60,802,58,"channelName"],[781,71,802,48],[781,73,802,71],[782,0,803,2],[782,8,803,6],[782,13,803,11,"channelPrefix"],[782,26,803,2],[782,28,803,26],[783,0,804,4,"channelName"],[783,6,804,4,"channelName"],[783,17,804,15],[783,20,804,18],[783,25,804,23,"channelPrefix"],[783,38,804,18],[783,41,804,39,"channelName"],[783,52,804,4],[784,0,805,3],[786,0,806,2],[786,11,806,9,"channelName"],[786,22,806,2],[787,0,807,1],[787,3,802,0],[789,0,809,0,"SCClientSocket"],[789,2,809,0,"SCClientSocket"],[789,16,809,14],[789,17,809,15,"prototype"],[789,26,809,0],[789,27,809,25,"_undecorateChannelName"],[789,49,809,0],[789,52,809,50],[789,62,809,60,"decoratedChannelName"],[789,82,809,50],[789,84,809,82],[790,0,810,2],[790,8,810,6],[790,13,810,11,"channelPrefix"],[790,26,810,6],[790,30,810,28,"decoratedChannelName"],[790,50,810,48],[790,51,810,49,"indexOf"],[790,58,810,28],[790,59,810,57],[790,64,810,62,"channelPrefix"],[790,77,810,28],[790,83,810,81],[790,84,810,2],[790,86,810,84],[791,0,811,4],[791,13,811,11,"decoratedChannelName"],[791,33,811,31],[791,34,811,32,"replace"],[791,41,811,11],[791,42,811,40],[791,47,811,45,"channelPrefix"],[791,60,811,11],[791,62,811,60],[791,64,811,11],[791,65,811,4],[792,0,812,3],[794,0,813,2],[794,11,813,9,"decoratedChannelName"],[794,31,813,2],[795,0,814,1],[795,3,809,0],[797,0,816,0,"SCClientSocket"],[797,2,816,0,"SCClientSocket"],[797,16,816,14],[797,17,816,15,"prototype"],[797,26,816,0],[797,27,816,25,"_trySubscribe"],[797,40,816,0],[797,43,816,41],[797,53,816,51,"channel"],[797,60,816,41],[797,62,816,60],[798,0,817,2],[798,8,817,6,"self"],[798,12,817,10],[798,15,817,13],[798,19,817,2],[799,0,819,2],[799,8,819,6,"meetsAuthRequirements"],[799,29,819,27],[799,32,819,30],[799,33,819,31,"channel"],[799,40,819,38],[799,41,819,39,"waitForAuth"],[799,52,819,30],[799,56,819,54],[799,61,819,59,"authState"],[799,70,819,54],[799,75,819,73],[799,80,819,78,"AUTHENTICATED"],[799,93,819,2],[801,0,822,2],[801,8,822,6],[801,13,822,11,"state"],[801,18,822,6],[801,23,822,21],[801,28,822,26,"OPEN"],[801,32,822,6],[801,36,822,34],[801,37,822,35],[801,42,822,40,"preparingPendingSubscriptions"],[801,71,822,6],[801,75,823,4,"channel"],[801,82,823,11],[801,83,823,12,"_pendingSubscriptionCid"],[801,106,823,4],[801,110,823,39],[801,114,822,6],[801,118,823,47,"meetsAuthRequirements"],[801,139,822,2],[801,141,823,70],[802,0,825,4],[802,10,825,8,"options"],[802,17,825,15],[802,20,825,18],[803,0,826,6,"noTimeout"],[803,8,826,6,"noTimeout"],[803,17,826,15],[803,19,826,17],[804,0,825,18],[804,7,825,4],[805,0,829,4],[805,10,829,8,"subscriptionOptions"],[805,29,829,27],[805,32,829,30],[806,0,830,6,"channel"],[806,8,830,6,"channel"],[806,15,830,13],[806,17,830,15],[806,22,830,20,"_decorateChannelName"],[806,42,830,15],[806,43,830,41,"channel"],[806,50,830,48],[806,51,830,49,"name"],[806,55,830,15],[807,0,829,30],[807,7,829,4],[809,0,832,4],[809,10,832,8,"channel"],[809,17,832,15],[809,18,832,16,"waitForAuth"],[809,29,832,4],[809,31,832,29],[810,0,833,6,"options"],[810,8,833,6,"options"],[810,15,833,13],[810,16,833,14,"waitForAuth"],[810,27,833,6],[810,30,833,28],[810,34,833,6],[811,0,834,6,"subscriptionOptions"],[811,8,834,6,"subscriptionOptions"],[811,27,834,25],[811,28,834,26,"waitForAuth"],[811,39,834,6],[811,42,834,40,"options"],[811,49,834,47],[811,50,834,48,"waitForAuth"],[811,61,834,6],[812,0,835,5],[814,0,836,4],[814,10,836,8,"channel"],[814,17,836,15],[814,18,836,16,"data"],[814,22,836,4],[814,24,836,22],[815,0,837,6,"subscriptionOptions"],[815,8,837,6,"subscriptionOptions"],[815,27,837,25],[815,28,837,26,"data"],[815,32,837,6],[815,35,837,33,"channel"],[815,42,837,40],[815,43,837,41,"data"],[815,47,837,6],[816,0,838,5],[818,0,839,4],[818,10,839,8,"channel"],[818,17,839,15],[818,18,839,16,"batch"],[818,23,839,4],[818,25,839,23],[819,0,840,6,"options"],[819,8,840,6,"options"],[819,15,840,13],[819,16,840,14,"batch"],[819,21,840,6],[819,24,840,22],[819,28,840,6],[820,0,841,6,"subscriptionOptions"],[820,8,841,6,"subscriptionOptions"],[820,27,841,25],[820,28,841,26,"batch"],[820,33,841,6],[820,36,841,34],[820,40,841,6],[821,0,842,5],[823,0,844,4,"channel"],[823,6,844,4,"channel"],[823,13,844,11],[823,14,844,12,"_pendingSubscriptionCid"],[823,37,844,4],[823,40,844,38],[823,45,844,43,"transport"],[823,54,844,38],[823,55,844,53,"emit"],[823,59,844,38],[823,60,845,6],[823,72,844,38],[823,74,845,20,"subscriptionOptions"],[823,93,844,38],[823,95,845,41,"options"],[823,102,844,38],[823,104,846,6],[823,114,846,16,"err"],[823,117,846,6],[823,119,846,21],[824,0,847,8],[824,15,847,15,"channel"],[824,22,847,22],[824,23,847,23,"_pendingSubscriptionCid"],[824,46,847,8],[826,0,848,8],[826,12,848,12,"err"],[826,15,848,8],[826,17,848,17],[827,0,849,10,"self"],[827,10,849,10,"self"],[827,14,849,14],[827,15,849,15,"_triggerChannelSubscribeFail"],[827,43,849,10],[827,44,849,44,"err"],[827,47,849,10],[827,49,849,49,"channel"],[827,56,849,10],[827,58,849,58,"subscriptionOptions"],[827,77,849,10],[828,0,850,9],[828,9,848,8],[828,15,850,15],[829,0,851,10,"self"],[829,10,851,10,"self"],[829,14,851,14],[829,15,851,15,"_triggerChannelSubscribe"],[829,39,851,10],[829,40,851,40,"channel"],[829,47,851,10],[829,49,851,49,"subscriptionOptions"],[829,68,851,10],[830,0,852,9],[831,0,853,7],[831,7,844,38],[831,8,844,4],[832,0,855,4,"Emitter"],[832,6,855,4,"Emitter"],[832,13,855,11],[832,14,855,12,"prototype"],[832,23,855,4],[832,24,855,22,"emit"],[832,28,855,4],[832,29,855,27,"call"],[832,33,855,4],[832,34,855,32],[832,38,855,4],[832,40,855,38],[832,58,855,4],[832,60,855,58,"channel"],[832,67,855,65],[832,68,855,66,"name"],[832,72,855,4],[832,74,855,72,"subscriptionOptions"],[832,93,855,4],[833,0,856,3],[834,0,857,1],[834,3,816,0],[836,0,859,0,"SCClientSocket"],[836,2,859,0,"SCClientSocket"],[836,16,859,14],[836,17,859,15,"prototype"],[836,26,859,0],[836,27,859,25,"subscribe"],[836,36,859,0],[836,39,859,37],[836,49,859,47,"channelName"],[836,60,859,37],[836,62,859,60,"options"],[836,69,859,37],[836,71,859,69],[837,0,860,2],[837,8,860,6,"channel"],[837,15,860,13],[837,18,860,16],[837,23,860,21,"channels"],[837,31,860,16],[837,32,860,30,"channelName"],[837,43,860,16],[837,44,860,2],[839,0,862,2],[839,8,862,6],[839,9,862,7,"channel"],[839,16,862,2],[839,18,862,16],[840,0,863,4,"channel"],[840,6,863,4,"channel"],[840,13,863,11],[840,16,863,14],[840,20,863,18,"SCChannel"],[840,29,863,14],[840,30,863,28,"channelName"],[840,41,863,14],[840,43,863,41],[840,47,863,14],[840,49,863,47,"options"],[840,56,863,14],[840,57,863,4],[841,0,864,4],[841,11,864,9,"channels"],[841,19,864,4],[841,20,864,18,"channelName"],[841,31,864,4],[841,35,864,33,"channel"],[841,42,864,4],[842,0,865,3],[842,5,862,2],[842,11,865,9],[842,15,865,13,"options"],[842,22,865,9],[842,24,865,22],[843,0,866,4,"channel"],[843,6,866,4,"channel"],[843,13,866,11],[843,14,866,12,"setOptions"],[843,24,866,4],[843,25,866,23,"options"],[843,32,866,4],[844,0,867,3],[846,0,869,2],[846,8,869,6,"channel"],[846,15,869,13],[846,16,869,14,"state"],[846,21,869,6],[846,26,869,24,"channel"],[846,33,869,31],[846,34,869,32,"UNSUBSCRIBED"],[846,46,869,2],[846,48,869,46],[847,0,870,4,"channel"],[847,6,870,4,"channel"],[847,13,870,11],[847,14,870,12,"state"],[847,19,870,4],[847,22,870,20,"channel"],[847,29,870,27],[847,30,870,28,"PENDING"],[847,37,870,4],[849,0,871,4],[849,11,871,9,"_trySubscribe"],[849,24,871,4],[849,25,871,23,"channel"],[849,32,871,4],[850,0,872,3],[852,0,874,2],[852,11,874,9,"channel"],[852,18,874,2],[853,0,875,1],[853,3,859,0],[855,0,877,0,"SCClientSocket"],[855,2,877,0,"SCClientSocket"],[855,16,877,14],[855,17,877,15,"prototype"],[855,26,877,0],[855,27,877,25,"_triggerChannelUnsubscribe"],[855,53,877,0],[855,56,877,54],[855,66,877,64,"channel"],[855,73,877,54],[855,75,877,73,"newState"],[855,83,877,54],[855,85,877,83],[856,0,878,2],[856,8,878,6,"channelName"],[856,19,878,17],[856,22,878,20,"channel"],[856,29,878,27],[856,30,878,28,"name"],[856,34,878,2],[857,0,879,2],[857,8,879,6,"oldState"],[857,16,879,14],[857,19,879,17,"channel"],[857,26,879,24],[857,27,879,25,"state"],[857,32,879,2],[859,0,881,2],[859,8,881,6,"newState"],[859,16,881,2],[859,18,881,16],[860,0,882,4,"channel"],[860,6,882,4,"channel"],[860,13,882,11],[860,14,882,12,"state"],[860,19,882,4],[860,22,882,20,"newState"],[860,30,882,4],[861,0,883,3],[861,5,881,2],[861,11,883,9],[862,0,884,4,"channel"],[862,6,884,4,"channel"],[862,13,884,11],[862,14,884,12,"state"],[862,19,884,4],[862,22,884,20,"channel"],[862,29,884,27],[862,30,884,28,"UNSUBSCRIBED"],[862,42,884,4],[863,0,885,3],[865,0,886,2],[865,9,886,7,"_cancelPendingSubscribeCallback"],[865,40,886,2],[865,41,886,39,"channel"],[865,48,886,2],[867,0,888,2],[867,8,888,6,"oldState"],[867,16,888,14],[867,21,888,19,"channel"],[867,28,888,26],[867,29,888,27,"SUBSCRIBED"],[867,39,888,2],[867,41,888,39],[868,0,889,4],[868,10,889,8,"stateChangeData"],[868,25,889,23],[868,28,889,26],[869,0,890,6,"channel"],[869,8,890,6,"channel"],[869,15,890,13],[869,17,890,15,"channelName"],[869,28,889,26],[870,0,891,6,"oldState"],[870,8,891,6,"oldState"],[870,16,891,14],[870,18,891,16,"oldState"],[870,26,889,26],[871,0,892,6,"newState"],[871,8,892,6,"newState"],[871,16,892,14],[871,18,892,16,"channel"],[871,25,892,23],[871,26,892,24,"state"],[872,0,889,26],[872,7,889,4],[873,0,894,4,"channel"],[873,6,894,4,"channel"],[873,13,894,11],[873,14,894,12,"emit"],[873,18,894,4],[873,19,894,17],[873,41,894,4],[873,43,894,41,"stateChangeData"],[873,58,894,4],[874,0,895,4,"channel"],[874,6,895,4,"channel"],[874,13,895,11],[874,14,895,12,"emit"],[874,18,895,4],[874,19,895,17],[874,32,895,4],[874,34,895,32,"channelName"],[874,45,895,4],[875,0,896,4,"Emitter"],[875,6,896,4,"Emitter"],[875,13,896,11],[875,14,896,12,"prototype"],[875,23,896,4],[875,24,896,22,"emit"],[875,28,896,4],[875,29,896,27,"call"],[875,33,896,4],[875,34,896,32],[875,38,896,4],[875,40,896,38],[875,62,896,4],[875,64,896,62,"stateChangeData"],[875,79,896,4],[876,0,897,4,"Emitter"],[876,6,897,4,"Emitter"],[876,13,897,11],[876,14,897,12,"prototype"],[876,23,897,4],[876,24,897,22,"emit"],[876,28,897,4],[876,29,897,27,"call"],[876,33,897,4],[876,34,897,32],[876,38,897,4],[876,40,897,38],[876,53,897,4],[876,55,897,53,"channelName"],[876,66,897,4],[877,0,898,3],[878,0,899,1],[878,3,877,0],[880,0,901,0,"SCClientSocket"],[880,2,901,0,"SCClientSocket"],[880,16,901,14],[880,17,901,15,"prototype"],[880,26,901,0],[880,27,901,25,"_tryUnsubscribe"],[880,42,901,0],[880,45,901,43],[880,55,901,53,"channel"],[880,62,901,43],[880,64,901,62],[881,0,902,2],[881,8,902,6,"self"],[881,12,902,10],[881,15,902,13],[881,19,902,2],[883,0,904,2],[883,8,904,6],[883,13,904,11,"state"],[883,18,904,6],[883,23,904,21],[883,28,904,26,"OPEN"],[883,32,904,2],[883,34,904,32],[884,0,905,4],[884,10,905,8,"options"],[884,17,905,15],[884,20,905,18],[885,0,906,6,"noTimeout"],[885,8,906,6,"noTimeout"],[885,17,906,15],[885,19,906,17],[886,0,905,18],[886,7,905,4],[888,0,908,4],[888,10,908,8,"channel"],[888,17,908,15],[888,18,908,16,"batch"],[888,23,908,4],[888,25,908,23],[889,0,909,6,"options"],[889,8,909,6,"options"],[889,15,909,13],[889,16,909,14,"batch"],[889,21,909,6],[889,24,909,22],[889,28,909,6],[890,0,910,5],[892,0,912,4],[892,11,912,9,"_cancelPendingSubscribeCallback"],[892,42,912,4],[892,43,912,41,"channel"],[892,50,912,4],[894,0,918,4],[894,10,918,8,"decoratedChannelName"],[894,30,918,28],[894,33,918,31],[894,38,918,36,"_decorateChannelName"],[894,58,918,31],[894,59,918,57,"channel"],[894,66,918,64],[894,67,918,65,"name"],[894,71,918,31],[894,72,918,4],[896,0,919,4],[896,11,919,9,"transport"],[896,20,919,4],[896,21,919,19,"emit"],[896,25,919,4],[896,26,919,24],[896,40,919,4],[896,42,919,40,"decoratedChannelName"],[896,62,919,4],[896,64,919,62,"options"],[896,71,919,4],[897,0,920,3],[898,0,921,1],[898,3,901,0],[900,0,923,0,"SCClientSocket"],[900,2,923,0,"SCClientSocket"],[900,16,923,14],[900,17,923,15,"prototype"],[900,26,923,0],[900,27,923,25,"unsubscribe"],[900,38,923,0],[900,41,923,39],[900,51,923,49,"channelName"],[900,62,923,39],[900,64,923,62],[901,0,924,2],[901,8,924,6,"channel"],[901,15,924,13],[901,18,924,16],[901,23,924,21,"channels"],[901,31,924,16],[901,32,924,30,"channelName"],[901,43,924,16],[901,44,924,2],[903,0,926,2],[903,8,926,6,"channel"],[903,15,926,2],[903,17,926,15],[904,0,927,4],[904,10,927,8,"channel"],[904,17,927,15],[904,18,927,16,"state"],[904,23,927,8],[904,28,927,26,"channel"],[904,35,927,33],[904,36,927,34,"UNSUBSCRIBED"],[904,48,927,4],[904,50,927,48],[905,0,928,6],[905,13,928,11,"_triggerChannelUnsubscribe"],[905,39,928,6],[905,40,928,38,"channel"],[905,47,928,6],[907,0,929,6],[907,13,929,11,"_tryUnsubscribe"],[907,28,929,6],[907,29,929,27,"channel"],[907,36,929,6],[908,0,930,5],[909,0,931,3],[910,0,932,1],[910,3,923,0],[912,0,934,0,"SCClientSocket"],[912,2,934,0,"SCClientSocket"],[912,16,934,14],[912,17,934,15,"prototype"],[912,26,934,0],[912,27,934,25,"channel"],[912,34,934,0],[912,37,934,35],[912,47,934,45,"channelName"],[912,58,934,35],[912,60,934,58,"options"],[912,67,934,35],[912,69,934,67],[913,0,935,2],[913,8,935,6,"currentChannel"],[913,22,935,20],[913,25,935,23],[913,30,935,28,"channels"],[913,38,935,23],[913,39,935,37,"channelName"],[913,50,935,23],[913,51,935,2],[915,0,937,2],[915,8,937,6],[915,9,937,7,"currentChannel"],[915,23,937,2],[915,25,937,23],[916,0,938,4,"currentChannel"],[916,6,938,4,"currentChannel"],[916,20,938,18],[916,23,938,21],[916,27,938,25,"SCChannel"],[916,36,938,21],[916,37,938,35,"channelName"],[916,48,938,21],[916,50,938,48],[916,54,938,21],[916,56,938,54,"options"],[916,63,938,21],[916,64,938,4],[917,0,939,4],[917,11,939,9,"channels"],[917,19,939,4],[917,20,939,18,"channelName"],[917,31,939,4],[917,35,939,33,"currentChannel"],[917,49,939,4],[918,0,940,3],[920,0,941,2],[920,11,941,9,"currentChannel"],[920,25,941,2],[921,0,942,1],[921,3,934,0],[923,0,944,0,"SCClientSocket"],[923,2,944,0,"SCClientSocket"],[923,16,944,14],[923,17,944,15,"prototype"],[923,26,944,0],[923,27,944,25,"destroyChannel"],[923,41,944,0],[923,44,944,42],[923,54,944,52,"channelName"],[923,65,944,42],[923,67,944,65],[924,0,945,2],[924,8,945,6,"channel"],[924,15,945,13],[924,18,945,16],[924,23,945,21,"channels"],[924,31,945,16],[924,32,945,30,"channelName"],[924,43,945,16],[924,44,945,2],[926,0,947,2],[926,8,947,6,"channel"],[926,15,947,2],[926,17,947,15],[927,0,948,4,"channel"],[927,6,948,4,"channel"],[927,13,948,11],[927,14,948,12,"unwatch"],[927,21,948,4],[928,0,949,4,"channel"],[928,6,949,4,"channel"],[928,13,949,11],[928,14,949,12,"unsubscribe"],[928,25,949,4],[929,0,950,4],[929,13,950,11],[929,18,950,16,"channels"],[929,26,950,11],[929,27,950,25,"channelName"],[929,38,950,11],[929,39,950,4],[930,0,951,3],[931,0,952,1],[931,3,944,0],[933,0,954,0,"SCClientSocket"],[933,2,954,0,"SCClientSocket"],[933,16,954,14],[933,17,954,15,"prototype"],[933,26,954,0],[933,27,954,25,"subscriptions"],[933,40,954,0],[933,43,954,41],[933,53,954,51,"includePending"],[933,67,954,41],[933,69,954,67],[934,0,955,2],[934,8,955,6,"subs"],[934,12,955,10],[934,15,955,13],[934,17,955,2],[935,0,956,2],[935,8,956,6,"channel"],[935,15,956,2],[935,17,956,15,"includeChannel"],[935,31,956,2],[937,0,957,2],[937,9,957,7],[937,13,957,11,"channelName"],[937,24,957,2],[937,28,957,26],[937,33,957,31,"channels"],[937,41,957,2],[937,43,957,41],[938,0,958,4],[938,10,958,8],[938,15,958,13,"channels"],[938,23,958,8],[938,24,958,22,"hasOwnProperty"],[938,38,958,8],[938,39,958,37,"channelName"],[938,50,958,8],[938,51,958,4],[938,53,958,51],[939,0,959,6,"channel"],[939,8,959,6,"channel"],[939,15,959,13],[939,18,959,16],[939,23,959,21,"channels"],[939,31,959,16],[939,32,959,30,"channelName"],[939,43,959,16],[939,44,959,6],[941,0,961,6],[941,12,961,10,"includePending"],[941,26,961,6],[941,28,961,26],[942,0,962,8,"includeChannel"],[942,10,962,8,"includeChannel"],[942,24,962,22],[942,27,962,25,"channel"],[942,34,962,32],[942,39,962,37,"channel"],[942,46,962,44],[942,47,962,45,"state"],[942,52,962,37],[942,57,962,55,"channel"],[942,64,962,62],[942,65,962,63,"SUBSCRIBED"],[942,75,962,37],[942,79,963,10,"channel"],[942,86,963,17],[942,87,963,18,"state"],[942,92,963,10],[942,97,963,28,"channel"],[942,104,963,35],[942,105,963,36,"PENDING"],[942,112,962,32],[942,113,962,8],[943,0,964,7],[943,9,961,6],[943,15,964,13],[944,0,965,8,"includeChannel"],[944,10,965,8,"includeChannel"],[944,24,965,22],[944,27,965,25,"channel"],[944,34,965,32],[944,38,965,36,"channel"],[944,45,965,43],[944,46,965,44,"state"],[944,51,965,36],[944,56,965,54,"channel"],[944,63,965,61],[944,64,965,62,"SUBSCRIBED"],[944,74,965,8],[945,0,966,7],[947,0,968,6],[947,12,968,10,"includeChannel"],[947,26,968,6],[947,28,968,26],[948,0,969,8,"subs"],[948,10,969,8,"subs"],[948,14,969,12],[948,15,969,13,"push"],[948,19,969,8],[948,20,969,18,"channelName"],[948,31,969,8],[949,0,970,7],[950,0,971,5],[951,0,972,3],[953,0,973,2],[953,11,973,9,"subs"],[953,15,973,2],[954,0,974,1],[954,3,954,0],[956,0,976,0,"SCClientSocket"],[956,2,976,0,"SCClientSocket"],[956,16,976,14],[956,17,976,15,"prototype"],[956,26,976,0],[956,27,976,25,"isSubscribed"],[956,39,976,0],[956,42,976,40],[956,52,976,50,"channelName"],[956,63,976,40],[956,65,976,63,"includePending"],[956,79,976,40],[956,81,976,79],[957,0,977,2],[957,8,977,6,"channel"],[957,15,977,13],[957,18,977,16],[957,23,977,21,"channels"],[957,31,977,16],[957,32,977,30,"channelName"],[957,43,977,16],[957,44,977,2],[959,0,978,2],[959,8,978,6,"includePending"],[959,22,978,2],[959,24,978,22],[960,0,979,4],[960,13,979,11],[960,14,979,12],[960,15,979,13,"channel"],[960,22,979,11],[960,27,979,25,"channel"],[960,34,979,32],[960,35,979,33,"state"],[960,40,979,25],[960,45,979,43,"channel"],[960,52,979,50],[960,53,979,51,"SUBSCRIBED"],[960,63,979,25],[960,67,980,6,"channel"],[960,74,980,13],[960,75,980,14,"state"],[960,80,980,6],[960,85,980,24,"channel"],[960,92,980,31],[960,93,980,32,"PENDING"],[960,100,979,11],[960,101,979,4],[961,0,981,3],[963,0,982,2],[963,11,982,9],[963,12,982,10],[963,13,982,11,"channel"],[963,20,982,9],[963,24,982,22,"channel"],[963,31,982,29],[963,32,982,30,"state"],[963,37,982,22],[963,42,982,40,"channel"],[963,49,982,47],[963,50,982,48,"SUBSCRIBED"],[963,60,982,2],[964,0,983,1],[964,3,976,0],[966,0,985,0,"SCClientSocket"],[966,2,985,0,"SCClientSocket"],[966,16,985,14],[966,17,985,15,"prototype"],[966,26,985,0],[966,27,985,25,"processPendingSubscriptions"],[966,54,985,0],[966,57,985,55],[966,69,985,67],[967,0,986,2],[967,8,986,6,"self"],[967,12,986,10],[967,15,986,13],[967,19,986,2],[968,0,988,2],[968,9,988,7,"preparingPendingSubscriptions"],[968,38,988,2],[968,41,988,39],[968,46,988,2],[969,0,990,2],[969,8,990,6,"pendingChannels"],[969,23,990,21],[969,26,990,24],[969,28,990,2],[971,0,992,2],[971,9,992,7],[971,13,992,11,"i"],[971,14,992,2],[971,18,992,16],[971,23,992,21,"channels"],[971,31,992,2],[971,33,992,31],[972,0,993,4],[972,10,993,8],[972,15,993,13,"channels"],[972,23,993,8],[972,24,993,22,"hasOwnProperty"],[972,38,993,8],[972,39,993,37,"i"],[972,40,993,8],[972,41,993,4],[972,43,993,41],[973,0,994,6],[973,12,994,10,"channel"],[973,19,994,17],[973,22,994,20],[973,27,994,25,"channels"],[973,35,994,20],[973,36,994,34,"i"],[973,37,994,20],[973,38,994,6],[975,0,995,6],[975,12,995,10,"channel"],[975,19,995,17],[975,20,995,18,"state"],[975,25,995,10],[975,30,995,28,"channel"],[975,37,995,35],[975,38,995,36,"PENDING"],[975,45,995,6],[975,47,995,45],[976,0,996,8,"pendingChannels"],[976,10,996,8,"pendingChannels"],[976,25,996,23],[976,26,996,24,"push"],[976,30,996,8],[976,31,996,29,"channel"],[976,38,996,8],[977,0,997,7],[978,0,998,5],[979,0,999,3],[981,0,1001,2,"pendingChannels"],[981,4,1001,2,"pendingChannels"],[981,19,1001,17],[981,20,1001,18,"sort"],[981,24,1001,2],[981,25,1001,23],[981,35,1001,33,"a"],[981,36,1001,23],[981,38,1001,36,"b"],[981,39,1001,23],[981,41,1001,39],[982,0,1002,4],[982,10,1002,8,"ap"],[982,12,1002,10],[982,15,1002,13,"a"],[982,16,1002,14],[982,17,1002,15,"priority"],[982,25,1002,13],[982,29,1002,27],[982,30,1002,4],[983,0,1003,4],[983,10,1003,8,"bp"],[983,12,1003,10],[983,15,1003,13,"b"],[983,16,1003,14],[983,17,1003,15,"priority"],[983,25,1003,13],[983,29,1003,27],[983,30,1003,4],[985,0,1004,4],[985,10,1004,8,"ap"],[985,12,1004,10],[985,15,1004,13,"bp"],[985,17,1004,4],[985,19,1004,17],[986,0,1005,6],[986,15,1005,13],[986,16,1005,14],[986,17,1005,6],[987,0,1006,5],[989,0,1007,4],[989,10,1007,8,"ap"],[989,12,1007,10],[989,15,1007,13,"bp"],[989,17,1007,4],[989,19,1007,17],[990,0,1008,6],[990,15,1008,13],[990,16,1008,6],[991,0,1009,5],[993,0,1010,4],[993,13,1010,11],[993,14,1010,4],[994,0,1011,3],[994,5,1001,2],[995,0,1013,2,"pendingChannels"],[995,4,1013,2,"pendingChannels"],[995,19,1013,17],[995,20,1013,18,"forEach"],[995,27,1013,2],[995,28,1013,26],[995,38,1013,36,"channel"],[995,45,1013,26],[995,47,1013,45],[996,0,1014,4,"self"],[996,6,1014,4,"self"],[996,10,1014,8],[996,11,1014,9,"_trySubscribe"],[996,24,1014,4],[996,25,1014,23,"channel"],[996,32,1014,4],[997,0,1015,3],[997,5,1013,2],[998,0,1016,1],[998,3,985,0],[1000,0,1018,0,"SCClientSocket"],[1000,2,1018,0,"SCClientSocket"],[1000,16,1018,14],[1000,17,1018,15,"prototype"],[1000,26,1018,0],[1000,27,1018,25,"watch"],[1000,32,1018,0],[1000,35,1018,33],[1000,45,1018,43,"channelName"],[1000,56,1018,33],[1000,58,1018,56,"handler"],[1000,65,1018,33],[1000,67,1018,65],[1001,0,1019,2],[1001,8,1019,6],[1001,15,1019,13,"handler"],[1001,22,1019,6],[1001,27,1019,25],[1001,37,1019,2],[1001,39,1019,37],[1002,0,1020,4],[1002,12,1020,10],[1002,16,1020,14,"InvalidArgumentsError"],[1002,37,1020,10],[1002,38,1020,36],[1002,72,1020,10],[1002,73,1020,4],[1003,0,1021,3],[1005,0,1022,2],[1005,9,1022,7,"_channelEmitter"],[1005,24,1022,2],[1005,25,1022,23,"on"],[1005,27,1022,2],[1005,28,1022,26,"channelName"],[1005,39,1022,2],[1005,41,1022,39,"handler"],[1005,48,1022,2],[1006,0,1023,1],[1006,3,1018,0],[1008,0,1025,0,"SCClientSocket"],[1008,2,1025,0,"SCClientSocket"],[1008,16,1025,14],[1008,17,1025,15,"prototype"],[1008,26,1025,0],[1008,27,1025,25,"unwatch"],[1008,34,1025,0],[1008,37,1025,35],[1008,47,1025,45,"channelName"],[1008,58,1025,35],[1008,60,1025,58,"handler"],[1008,67,1025,35],[1008,69,1025,67],[1009,0,1026,2],[1009,8,1026,6,"handler"],[1009,15,1026,2],[1009,17,1026,15],[1010,0,1027,4],[1010,11,1027,9,"_channelEmitter"],[1010,26,1027,4],[1010,27,1027,25,"removeListener"],[1010,41,1027,4],[1010,42,1027,40,"channelName"],[1010,53,1027,4],[1010,55,1027,53,"handler"],[1010,62,1027,4],[1011,0,1028,3],[1011,5,1026,2],[1011,11,1028,9],[1012,0,1029,4],[1012,11,1029,9,"_channelEmitter"],[1012,26,1029,4],[1012,27,1029,25,"removeAllListeners"],[1012,45,1029,4],[1012,46,1029,44,"channelName"],[1012,57,1029,4],[1013,0,1030,3],[1014,0,1031,1],[1014,3,1025,0],[1016,0,1033,0,"SCClientSocket"],[1016,2,1033,0,"SCClientSocket"],[1016,16,1033,14],[1016,17,1033,15,"prototype"],[1016,26,1033,0],[1016,27,1033,25,"watchers"],[1016,35,1033,0],[1016,38,1033,36],[1016,48,1033,46,"channelName"],[1016,59,1033,36],[1016,61,1033,59],[1017,0,1034,2],[1017,11,1034,9],[1017,16,1034,14,"_channelEmitter"],[1017,31,1034,9],[1017,32,1034,30,"listeners"],[1017,41,1034,9],[1017,42,1034,40,"channelName"],[1017,53,1034,9],[1017,54,1034,2],[1018,0,1035,1],[1018,3,1033,0],[1020,0,1037,0,"module"],[1020,2,1037,0,"module"],[1020,8,1037,6],[1020,9,1037,7,"exports"],[1020,16,1037,0],[1020,19,1037,17,"SCClientSocket"],[1020,33,1037,0]]},"type":"js/module"}]}