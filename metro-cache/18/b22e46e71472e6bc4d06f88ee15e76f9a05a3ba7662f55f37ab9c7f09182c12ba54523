{"dependencies":[{"name":"../helpers","data":{"isAsync":false}},{"name":"../constants/options","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var helpers = _$$_REQUIRE(_dependencyMap[0], \"../helpers\");\n\n  var mark = helpers.mark;\n  var extract = helpers.extract;\n  var refer = helpers.refer;\n\n  var options = _$$_REQUIRE(_dependencyMap[1], \"../constants/options\");\n\n  module.exports = function serialize(Immutable, refs, customReplacer, customReviver) {\n    function replacer(key, value) {\n      if (value instanceof Immutable.Record) return refer(value, 'ImmutableRecord', 'toObject', refs);\n      if (value instanceof Immutable.Range) return extract(value, 'ImmutableRange');\n      if (value instanceof Immutable.Repeat) return extract(value, 'ImmutableRepeat');\n      if (Immutable.OrderedMap.isOrderedMap(value)) return mark(value, 'ImmutableOrderedMap', 'toObject');\n      if (Immutable.Map.isMap(value)) return mark(value, 'ImmutableMap', 'toObject');\n      if (Immutable.List.isList(value)) return mark(value, 'ImmutableList', 'toArray');\n      if (Immutable.OrderedSet.isOrderedSet(value)) return mark(value, 'ImmutableOrderedSet', 'toArray');\n      if (Immutable.Set.isSet(value)) return mark(value, 'ImmutableSet', 'toArray');\n      if (Immutable.Seq.isSeq(value)) return mark(value, 'ImmutableSeq', 'toArray');\n      if (Immutable.Stack.isStack(value)) return mark(value, 'ImmutableStack', 'toArray');\n      return value;\n    }\n\n    function reviver(key, value) {\n      if (typeof value === 'object' && value !== null && '__serializedType__' in value) {\n        var data = value.data;\n\n        switch (value.__serializedType__) {\n          case 'ImmutableMap':\n            return Immutable.Map(data);\n\n          case 'ImmutableOrderedMap':\n            return Immutable.OrderedMap(data);\n\n          case 'ImmutableList':\n            return Immutable.List(data);\n\n          case 'ImmutableRange':\n            return Immutable.Range(data._start, data._end, data._step);\n\n          case 'ImmutableRepeat':\n            return Immutable.Repeat(data._value, data.size);\n\n          case 'ImmutableSet':\n            return Immutable.Set(data);\n\n          case 'ImmutableOrderedSet':\n            return Immutable.OrderedSet(data);\n\n          case 'ImmutableSeq':\n            return Immutable.Seq(data);\n\n          case 'ImmutableStack':\n            return Immutable.Stack(data);\n\n          case 'ImmutableRecord':\n            return refs && refs[value.__serializedRef__] ? new refs[value.__serializedRef__](data) : Immutable.Map(data);\n\n          default:\n            return data;\n        }\n      }\n\n      return value;\n    }\n\n    return {\n      replacer: customReplacer ? function (key, value) {\n        return customReplacer(key, value, replacer);\n      } : replacer,\n      reviver: customReviver ? function (key, value) {\n        return customReviver(key, value, reviver);\n      } : reviver,\n      options: options\n    };\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"helpers"],[2,13,1,11],[2,16,1,14,"require"],[2,27,1,21],[2,60,1,0],[4,0,2,0],[4,6,2,4,"mark"],[4,10,2,8],[4,13,2,11,"helpers"],[4,20,2,18],[4,21,2,19,"mark"],[4,25,2,0],[5,0,3,0],[5,6,3,4,"extract"],[5,13,3,11],[5,16,3,14,"helpers"],[5,23,3,21],[5,24,3,22,"extract"],[5,31,3,0],[6,0,4,0],[6,6,4,4,"refer"],[6,11,4,9],[6,14,4,12,"helpers"],[6,21,4,19],[6,22,4,20,"refer"],[6,27,4,0],[8,0,5,0],[8,6,5,4,"options"],[8,13,5,11],[8,16,5,13,"require"],[8,27,5,20],[8,70,5,0],[10,0,7,0,"module"],[10,2,7,0,"module"],[10,8,7,6],[10,9,7,7,"exports"],[10,16,7,0],[10,19,7,17],[10,28,7,26,"serialize"],[10,37,7,17],[10,38,7,36,"Immutable"],[10,47,7,17],[10,49,7,47,"refs"],[10,53,7,17],[10,55,7,53,"customReplacer"],[10,69,7,17],[10,71,7,69,"customReviver"],[10,84,7,17],[10,86,7,84],[11,0,8,2],[11,13,8,11,"replacer"],[11,21,8,2],[11,22,8,20,"key"],[11,25,8,2],[11,27,8,25,"value"],[11,32,8,2],[11,34,8,32],[12,0,9,4],[12,10,9,8,"value"],[12,15,9,13],[12,27,9,25,"Immutable"],[12,36,9,34],[12,37,9,35,"Record"],[12,43,9,4],[12,45,9,43],[12,52,9,50,"refer"],[12,57,9,55],[12,58,9,56,"value"],[12,63,9,55],[12,65,9,63],[12,82,9,55],[12,84,9,82],[12,94,9,55],[12,96,9,94,"refs"],[12,100,9,55],[12,101,9,43],[13,0,10,4],[13,10,10,8,"value"],[13,15,10,13],[13,27,10,25,"Immutable"],[13,36,10,34],[13,37,10,35,"Range"],[13,42,10,4],[13,44,10,42],[13,51,10,49,"extract"],[13,58,10,56],[13,59,10,57,"value"],[13,64,10,56],[13,66,10,64],[13,82,10,56],[13,83,10,42],[14,0,11,4],[14,10,11,8,"value"],[14,15,11,13],[14,27,11,25,"Immutable"],[14,36,11,34],[14,37,11,35,"Repeat"],[14,43,11,4],[14,45,11,43],[14,52,11,50,"extract"],[14,59,11,57],[14,60,11,58,"value"],[14,65,11,57],[14,67,11,65],[14,84,11,57],[14,85,11,43],[15,0,12,4],[15,10,12,8,"Immutable"],[15,19,12,17],[15,20,12,18,"OrderedMap"],[15,30,12,8],[15,31,12,29,"isOrderedMap"],[15,43,12,8],[15,44,12,42,"value"],[15,49,12,8],[15,50,12,4],[15,52,12,50],[15,59,12,57,"mark"],[15,63,12,61],[15,64,12,62,"value"],[15,69,12,61],[15,71,12,69],[15,92,12,61],[15,94,12,92],[15,104,12,61],[15,105,12,50],[16,0,13,4],[16,10,13,8,"Immutable"],[16,19,13,17],[16,20,13,18,"Map"],[16,23,13,8],[16,24,13,22,"isMap"],[16,29,13,8],[16,30,13,28,"value"],[16,35,13,8],[16,36,13,4],[16,38,13,36],[16,45,13,43,"mark"],[16,49,13,47],[16,50,13,48,"value"],[16,55,13,47],[16,57,13,55],[16,71,13,47],[16,73,13,71],[16,83,13,47],[16,84,13,36],[17,0,14,4],[17,10,14,8,"Immutable"],[17,19,14,17],[17,20,14,18,"List"],[17,24,14,8],[17,25,14,23,"isList"],[17,31,14,8],[17,32,14,30,"value"],[17,37,14,8],[17,38,14,4],[17,40,14,38],[17,47,14,45,"mark"],[17,51,14,49],[17,52,14,50,"value"],[17,57,14,49],[17,59,14,57],[17,74,14,49],[17,76,14,74],[17,85,14,49],[17,86,14,38],[18,0,15,4],[18,10,15,8,"Immutable"],[18,19,15,17],[18,20,15,18,"OrderedSet"],[18,30,15,8],[18,31,15,29,"isOrderedSet"],[18,43,15,8],[18,44,15,42,"value"],[18,49,15,8],[18,50,15,4],[18,52,15,50],[18,59,15,57,"mark"],[18,63,15,61],[18,64,15,62,"value"],[18,69,15,61],[18,71,15,69],[18,92,15,61],[18,94,15,92],[18,103,15,61],[18,104,15,50],[19,0,16,4],[19,10,16,8,"Immutable"],[19,19,16,17],[19,20,16,18,"Set"],[19,23,16,8],[19,24,16,22,"isSet"],[19,29,16,8],[19,30,16,28,"value"],[19,35,16,8],[19,36,16,4],[19,38,16,36],[19,45,16,43,"mark"],[19,49,16,47],[19,50,16,48,"value"],[19,55,16,47],[19,57,16,55],[19,71,16,47],[19,73,16,71],[19,82,16,47],[19,83,16,36],[20,0,17,4],[20,10,17,8,"Immutable"],[20,19,17,17],[20,20,17,18,"Seq"],[20,23,17,8],[20,24,17,22,"isSeq"],[20,29,17,8],[20,30,17,28,"value"],[20,35,17,8],[20,36,17,4],[20,38,17,36],[20,45,17,43,"mark"],[20,49,17,47],[20,50,17,48,"value"],[20,55,17,47],[20,57,17,55],[20,71,17,47],[20,73,17,71],[20,82,17,47],[20,83,17,36],[21,0,18,4],[21,10,18,8,"Immutable"],[21,19,18,17],[21,20,18,18,"Stack"],[21,25,18,8],[21,26,18,24,"isStack"],[21,33,18,8],[21,34,18,32,"value"],[21,39,18,8],[21,40,18,4],[21,42,18,40],[21,49,18,47,"mark"],[21,53,18,51],[21,54,18,52,"value"],[21,59,18,51],[21,61,18,59],[21,77,18,51],[21,79,18,77],[21,88,18,51],[21,89,18,40],[22,0,19,4],[22,13,19,11,"value"],[22,18,19,4],[23,0,20,3],[25,0,22,2],[25,13,22,11,"reviver"],[25,20,22,2],[25,21,22,19,"key"],[25,24,22,2],[25,26,22,24,"value"],[25,31,22,2],[25,33,22,31],[26,0,23,4],[26,10,23,8],[26,17,23,15,"value"],[26,22,23,8],[26,27,23,25],[26,35,23,8],[26,39,23,37,"value"],[26,44,23,42],[26,49,23,47],[26,53,23,8],[26,57,23,55],[26,81,23,80,"value"],[26,86,23,4],[26,88,23,87],[27,0,24,6],[27,12,24,10,"data"],[27,16,24,14],[27,19,24,17,"value"],[27,24,24,22],[27,25,24,23,"data"],[27,29,24,6],[29,0,25,6],[29,16,25,14,"value"],[29,21,25,19],[29,22,25,20,"__serializedType__"],[29,40,25,6],[30,0,26,8],[30,15,26,13],[30,29,26,8],[31,0,26,29],[31,19,26,36,"Immutable"],[31,28,26,45],[31,29,26,46,"Map"],[31,32,26,36],[31,33,26,50,"data"],[31,37,26,36],[31,38,26,29],[33,0,27,8],[33,15,27,13],[33,36,27,8],[34,0,27,36],[34,19,27,43,"Immutable"],[34,28,27,52],[34,29,27,53,"OrderedMap"],[34,39,27,43],[34,40,27,64,"data"],[34,44,27,43],[34,45,27,36],[36,0,28,8],[36,15,28,13],[36,30,28,8],[37,0,28,30],[37,19,28,37,"Immutable"],[37,28,28,46],[37,29,28,47,"List"],[37,33,28,37],[37,34,28,52,"data"],[37,38,28,37],[37,39,28,30],[39,0,29,8],[39,15,29,13],[39,31,29,8],[40,0,29,31],[40,19,29,38,"Immutable"],[40,28,29,47],[40,29,29,48,"Range"],[40,34,29,38],[40,35,29,54,"data"],[40,39,29,58],[40,40,29,59,"_start"],[40,46,29,38],[40,48,29,67,"data"],[40,52,29,71],[40,53,29,72,"_end"],[40,57,29,38],[40,59,29,78,"data"],[40,63,29,82],[40,64,29,83,"_step"],[40,69,29,38],[40,70,29,31],[42,0,30,8],[42,15,30,13],[42,32,30,8],[43,0,30,32],[43,19,30,39,"Immutable"],[43,28,30,48],[43,29,30,49,"Repeat"],[43,35,30,39],[43,36,30,56,"data"],[43,40,30,60],[43,41,30,61,"_value"],[43,47,30,39],[43,49,30,69,"data"],[43,53,30,73],[43,54,30,74,"size"],[43,58,30,39],[43,59,30,32],[45,0,31,8],[45,15,31,13],[45,29,31,8],[46,0,31,29],[46,19,31,36,"Immutable"],[46,28,31,45],[46,29,31,46,"Set"],[46,32,31,36],[46,33,31,50,"data"],[46,37,31,36],[46,38,31,29],[48,0,32,8],[48,15,32,13],[48,36,32,8],[49,0,32,36],[49,19,32,43,"Immutable"],[49,28,32,52],[49,29,32,53,"OrderedSet"],[49,39,32,43],[49,40,32,64,"data"],[49,44,32,43],[49,45,32,36],[51,0,33,8],[51,15,33,13],[51,29,33,8],[52,0,33,29],[52,19,33,36,"Immutable"],[52,28,33,45],[52,29,33,46,"Seq"],[52,32,33,36],[52,33,33,50,"data"],[52,37,33,36],[52,38,33,29],[54,0,34,8],[54,15,34,13],[54,31,34,8],[55,0,34,31],[55,19,34,38,"Immutable"],[55,28,34,47],[55,29,34,48,"Stack"],[55,34,34,38],[55,35,34,54,"data"],[55,39,34,38],[55,40,34,31],[57,0,35,8],[57,15,35,13],[57,32,35,8],[58,0,36,10],[58,19,36,17,"refs"],[58,23,36,21],[58,27,36,25,"refs"],[58,31,36,29],[58,32,36,30,"value"],[58,37,36,35],[58,38,36,36,"__serializedRef__"],[58,55,36,29],[58,56,36,17],[58,59,37,14],[58,63,37,18,"refs"],[58,67,37,22],[58,68,37,23,"value"],[58,73,37,28],[58,74,37,29,"__serializedRef__"],[58,91,37,22],[58,92,37,14],[58,93,37,48,"data"],[58,97,37,14],[58,98,36,17],[58,101,38,14,"Immutable"],[58,110,38,23],[58,111,38,24,"Map"],[58,114,38,14],[58,115,38,28,"data"],[58,119,38,14],[58,120,36,10],[60,0,39,8],[61,0,39,17],[61,19,39,24,"data"],[61,23,39,17],[62,0,25,6],[63,0,41,5],[65,0,42,4],[65,13,42,11,"value"],[65,18,42,4],[66,0,43,3],[68,0,45,2],[68,11,45,9],[69,0,46,4,"replacer"],[69,6,46,4,"replacer"],[69,14,46,12],[69,16,46,14,"customReplacer"],[69,30,46,28],[69,33,47,8],[69,43,47,17,"key"],[69,46,47,8],[69,48,47,22,"value"],[69,53,47,8],[69,55,47,29],[70,0,48,8],[70,15,48,15,"customReplacer"],[70,29,48,29],[70,30,48,30,"key"],[70,33,48,29],[70,35,48,35,"value"],[70,40,48,29],[70,42,48,42,"replacer"],[70,50,48,29],[70,51,48,8],[71,0,49,7],[71,7,46,28],[71,10,50,8,"replacer"],[71,18,45,9],[72,0,51,4,"reviver"],[72,6,51,4,"reviver"],[72,13,51,11],[72,15,51,13,"customReviver"],[72,28,51,26],[72,31,52,8],[72,41,52,17,"key"],[72,44,52,8],[72,46,52,22,"value"],[72,51,52,8],[72,53,52,29],[73,0,53,8],[73,15,53,15,"customReviver"],[73,28,53,28],[73,29,53,29,"key"],[73,32,53,28],[73,34,53,34,"value"],[73,39,53,28],[73,41,53,41,"reviver"],[73,48,53,28],[73,49,53,8],[74,0,54,7],[74,7,51,26],[74,10,55,8,"reviver"],[74,17,45,9],[75,0,56,4,"options"],[75,6,56,4,"options"],[75,13,56,11],[75,15,56,13,"options"],[76,0,45,9],[76,5,45,2],[77,0,58,1],[77,3,7,0]]},"type":"js/module"}]}