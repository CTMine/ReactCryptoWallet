{"dependencies":[{"name":"./scclientsocket","data":{"isAsync":false}},{"name":"sc-errors","data":{"isAsync":false}},{"name":"uuid","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var SCClientSocket = _$$_REQUIRE(_dependencyMap[0], \"./scclientsocket\");\n\n  var scErrors = _$$_REQUIRE(_dependencyMap[1], \"sc-errors\");\n\n  var uuid = _$$_REQUIRE(_dependencyMap[2], \"uuid\");\n\n  var InvalidArgumentsError = scErrors.InvalidArgumentsError;\n  var _clients = {};\n\n  function getMultiplexId(options) {\n    var protocolPrefix = options.secure ? 'https://' : 'http://';\n    var queryString = '';\n\n    if (options.query) {\n      if (typeof options.query === 'string') {\n        queryString = options.query;\n      } else {\n        var queryArray = [];\n        var queryMap = options.query;\n\n        for (var key in queryMap) {\n          if (queryMap.hasOwnProperty(key)) {\n            queryArray.push(key + '=' + queryMap[key]);\n          }\n        }\n\n        if (queryArray.length) {\n          queryString = '?' + queryArray.join('&');\n        }\n      }\n    }\n\n    var host;\n\n    if (options.host) {\n      host = options.host;\n    } else {\n      host = options.hostname + ':' + options.port;\n    }\n\n    return protocolPrefix + host + options.path + queryString;\n  }\n\n  function isUrlSecure() {\n    return global.location && location.protocol === 'https:';\n  }\n\n  function getPort(options, isSecureDefault) {\n    var isSecure = options.secure == null ? isSecureDefault : options.secure;\n    return options.port || (global.location && location.port ? location.port : isSecure ? 443 : 80);\n  }\n\n  function create(options) {\n    var self = this;\n    options = options || {};\n\n    if (options.host && !options.host.match(/[^:]+:\\d{2,5}/)) {\n      throw new InvalidArgumentsError('The host option should include both' + ' the hostname and the port number in the format \"hostname:port\"');\n    }\n\n    if (options.host && options.hostname) {\n      throw new InvalidArgumentsError('The host option should already include' + ' the hostname and the port number in the format \"hostname:port\"' + ' - Because of this, you should never use host and hostname options together');\n    }\n\n    if (options.host && options.port) {\n      throw new InvalidArgumentsError('The host option should already include' + ' the hostname and the port number in the format \"hostname:port\"' + ' - Because of this, you should never use host and port options together');\n    }\n\n    var isSecureDefault = isUrlSecure();\n    var opts = {\n      port: getPort(options, isSecureDefault),\n      hostname: global.location && location.hostname || 'localhost',\n      path: '/socketcluster/',\n      secure: isSecureDefault,\n      autoConnect: true,\n      autoReconnect: true,\n      autoSubscribeOnConnect: true,\n      connectTimeout: 20000,\n      ackTimeout: 10000,\n      timestampRequests: false,\n      timestampParam: 't',\n      authEngine: null,\n      authTokenName: 'socketCluster.authToken',\n      binaryType: 'arraybuffer',\n      multiplex: true,\n      pubSubBatchDuration: null,\n      cloneData: false\n    };\n\n    for (var i in options) {\n      if (options.hasOwnProperty(i)) {\n        opts[i] = options[i];\n      }\n    }\n\n    opts.clientMap = _clients;\n\n    if (opts.multiplex === false) {\n      opts.clientId = uuid.v4();\n      var socket = new SCClientSocket(opts);\n      _clients[opts.clientId] = socket;\n      return socket;\n    }\n\n    opts.clientId = getMultiplexId(opts);\n\n    if (_clients[opts.clientId]) {\n      if (opts.autoConnect) {\n        _clients[opts.clientId].connect();\n      }\n    } else {\n      _clients[opts.clientId] = new SCClientSocket(opts);\n    }\n\n    return _clients[opts.clientId];\n  }\n\n  function destroy(socket) {\n    socket.destroy();\n  }\n\n  module.exports = {\n    create: create,\n    destroy: destroy,\n    clients: _clients\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"SCClientSocket"],[2,20,1,18],[2,23,1,21,"require"],[2,34,1,28],[2,73,1,0],[4,0,2,0],[4,6,2,4,"scErrors"],[4,14,2,12],[4,17,2,15,"require"],[4,28,2,22],[4,60,2,0],[6,0,3,0],[6,6,3,4,"uuid"],[6,10,3,8],[6,13,3,11,"require"],[6,24,3,18],[6,51,3,0],[8,0,4,0],[8,6,4,4,"InvalidArgumentsError"],[8,27,4,25],[8,30,4,28,"scErrors"],[8,38,4,36],[8,39,4,37,"InvalidArgumentsError"],[8,60,4,0],[9,0,6,0],[9,6,6,4,"_clients"],[9,14,6,12],[9,17,6,15],[9,19,6,0],[11,0,8,0],[11,11,8,9,"getMultiplexId"],[11,25,8,0],[11,26,8,24,"options"],[11,33,8,0],[11,35,8,33],[12,0,9,2],[12,8,9,6,"protocolPrefix"],[12,22,9,20],[12,25,9,23,"options"],[12,32,9,30],[12,33,9,31,"secure"],[12,39,9,23],[12,42,9,40],[12,52,9,23],[12,55,9,53],[12,64,9,2],[13,0,10,2],[13,8,10,6,"queryString"],[13,19,10,17],[13,22,10,20],[13,24,10,2],[15,0,11,2],[15,8,11,6,"options"],[15,15,11,13],[15,16,11,14,"query"],[15,21,11,2],[15,23,11,21],[16,0,12,4],[16,10,12,8],[16,17,12,15,"options"],[16,24,12,22],[16,25,12,23,"query"],[16,30,12,8],[16,35,12,33],[16,43,12,4],[16,45,12,43],[17,0,13,6,"queryString"],[17,8,13,6,"queryString"],[17,19,13,17],[17,22,13,20,"options"],[17,29,13,27],[17,30,13,28,"query"],[17,35,13,6],[18,0,14,5],[18,7,12,4],[18,13,14,11],[19,0,15,6],[19,12,15,10,"queryArray"],[19,22,15,20],[19,25,15,23],[19,27,15,6],[20,0,16,6],[20,12,16,10,"queryMap"],[20,20,16,18],[20,23,16,21,"options"],[20,30,16,28],[20,31,16,29,"query"],[20,36,16,6],[22,0,17,6],[22,13,17,11],[22,17,17,15,"key"],[22,20,17,6],[22,24,17,22,"queryMap"],[22,32,17,6],[22,34,17,32],[23,0,18,8],[23,14,18,12,"queryMap"],[23,22,18,20],[23,23,18,21,"hasOwnProperty"],[23,37,18,12],[23,38,18,36,"key"],[23,41,18,12],[23,42,18,8],[23,44,18,42],[24,0,19,10,"queryArray"],[24,12,19,10,"queryArray"],[24,22,19,20],[24,23,19,21,"push"],[24,27,19,10],[24,28,19,26,"key"],[24,31,19,29],[24,34,19,32],[24,37,19,26],[24,40,19,38,"queryMap"],[24,48,19,46],[24,49,19,47,"key"],[24,52,19,46],[24,53,19,10],[25,0,20,9],[26,0,21,7],[28,0,22,6],[28,12,22,10,"queryArray"],[28,22,22,20],[28,23,22,21,"length"],[28,29,22,6],[28,31,22,29],[29,0,23,8,"queryString"],[29,10,23,8,"queryString"],[29,21,23,19],[29,24,23,22],[29,30,23,28,"queryArray"],[29,40,23,38],[29,41,23,39,"join"],[29,45,23,28],[29,46,23,44],[29,49,23,28],[29,50,23,8],[30,0,24,7],[31,0,25,5],[32,0,26,3],[34,0,27,2],[34,8,27,6,"host"],[34,12,27,2],[36,0,28,2],[36,8,28,6,"options"],[36,15,28,13],[36,16,28,14,"host"],[36,20,28,2],[36,22,28,20],[37,0,29,4,"host"],[37,6,29,4,"host"],[37,10,29,8],[37,13,29,11,"options"],[37,20,29,18],[37,21,29,19,"host"],[37,25,29,4],[38,0,30,3],[38,5,28,2],[38,11,30,9],[39,0,31,4,"host"],[39,6,31,4,"host"],[39,10,31,8],[39,13,31,11,"options"],[39,20,31,18],[39,21,31,19,"hostname"],[39,29,31,11],[39,32,31,30],[39,35,31,11],[39,38,31,36,"options"],[39,45,31,43],[39,46,31,44,"port"],[39,50,31,4],[40,0,32,3],[42,0,33,2],[42,11,33,9,"protocolPrefix"],[42,25,33,23],[42,28,33,26,"host"],[42,32,33,9],[42,35,33,33,"options"],[42,42,33,40],[42,43,33,41,"path"],[42,47,33,9],[42,50,33,48,"queryString"],[42,61,33,2],[43,0,34,1],[45,0,36,0],[45,11,36,9,"isUrlSecure"],[45,22,36,0],[45,25,36,23],[46,0,37,2],[46,11,37,9,"global"],[46,17,37,15],[46,18,37,16,"location"],[46,26,37,9],[46,30,37,28,"location"],[46,38,37,36],[46,39,37,37,"protocol"],[46,47,37,28],[46,52,37,50],[46,60,37,2],[47,0,38,1],[49,0,40,0],[49,11,40,9,"getPort"],[49,18,40,0],[49,19,40,17,"options"],[49,26,40,0],[49,28,40,26,"isSecureDefault"],[49,43,40,0],[49,45,40,43],[50,0,41,2],[50,8,41,6,"isSecure"],[50,16,41,14],[50,19,41,17,"options"],[50,26,41,24],[50,27,41,25,"secure"],[50,33,41,17],[50,37,41,35],[50,41,41,17],[50,44,41,42,"isSecureDefault"],[50,59,41,17],[50,62,41,60,"options"],[50,69,41,67],[50,70,41,68,"secure"],[50,76,41,2],[51,0,42,2],[51,11,42,9,"options"],[51,18,42,16],[51,19,42,17,"port"],[51,23,42,9],[51,28,42,26,"global"],[51,34,42,32],[51,35,42,33,"location"],[51,43,42,26],[51,47,42,45,"location"],[51,55,42,53],[51,56,42,54,"port"],[51,60,42,26],[51,63,42,61,"location"],[51,71,42,69],[51,72,42,70,"port"],[51,76,42,26],[51,79,42,77,"isSecure"],[51,87,42,85],[51,90,42,88],[51,93,42,85],[51,96,42,94],[51,98,42,9],[51,99,42,2],[52,0,43,1],[54,0,45,0],[54,11,45,9,"create"],[54,17,45,0],[54,18,45,16,"options"],[54,25,45,0],[54,27,45,25],[55,0,46,2],[55,8,46,6,"self"],[55,12,46,10],[55,15,46,13],[55,19,46,2],[56,0,48,2,"options"],[56,4,48,2,"options"],[56,11,48,9],[56,14,48,12,"options"],[56,21,48,19],[56,25,48,23],[56,27,48,2],[58,0,50,2],[58,8,50,6,"options"],[58,15,50,13],[58,16,50,14,"host"],[58,20,50,6],[58,24,50,22],[58,25,50,23,"options"],[58,32,50,30],[58,33,50,31,"host"],[58,37,50,23],[58,38,50,36,"match"],[58,43,50,23],[58,44,50,42],[58,59,50,23],[58,60,50,2],[58,62,50,60],[59,0,51,4],[59,12,51,10],[59,16,51,14,"InvalidArgumentsError"],[59,37,51,10],[59,38,51,36],[59,78,52,6],[59,143,51,10],[59,144,51,4],[60,0,53,3],[62,0,55,2],[62,8,55,6,"options"],[62,15,55,13],[62,16,55,14,"host"],[62,20,55,6],[62,24,55,22,"options"],[62,31,55,29],[62,32,55,30,"hostname"],[62,40,55,2],[62,42,55,40],[63,0,56,4],[63,12,56,10],[63,16,56,14,"InvalidArgumentsError"],[63,37,56,10],[63,38,56,36],[63,81,57,6],[63,146,56,36],[63,149,58,6],[63,226,56,10],[63,227,56,4],[64,0,59,3],[66,0,61,2],[66,8,61,6,"options"],[66,15,61,13],[66,16,61,14,"host"],[66,20,61,6],[66,24,61,22,"options"],[66,31,61,29],[66,32,61,30,"port"],[66,36,61,2],[66,38,61,36],[67,0,62,4],[67,12,62,10],[67,16,62,14,"InvalidArgumentsError"],[67,37,62,10],[67,38,62,36],[67,81,63,6],[67,146,62,36],[67,149,64,6],[67,222,62,10],[67,223,62,4],[68,0,65,3],[70,0,67,2],[70,8,67,6,"isSecureDefault"],[70,23,67,21],[70,26,67,24,"isUrlSecure"],[70,37,67,35],[70,39,67,2],[71,0,69,2],[71,8,69,6,"opts"],[71,12,69,10],[71,15,69,13],[72,0,70,4,"port"],[72,6,70,4,"port"],[72,10,70,8],[72,12,70,10,"getPort"],[72,19,70,17],[72,20,70,18,"options"],[72,27,70,17],[72,29,70,27,"isSecureDefault"],[72,44,70,17],[72,45,69,13],[73,0,71,4,"hostname"],[73,6,71,4,"hostname"],[73,14,71,12],[73,16,71,14,"global"],[73,22,71,20],[73,23,71,21,"location"],[73,31,71,14],[73,35,71,33,"location"],[73,43,71,41],[73,44,71,42,"hostname"],[73,52,71,14],[73,56,71,54],[73,67,69,13],[74,0,72,4,"path"],[74,6,72,4,"path"],[74,10,72,8],[74,12,72,10],[74,29,69,13],[75,0,73,4,"secure"],[75,6,73,4,"secure"],[75,12,73,10],[75,14,73,12,"isSecureDefault"],[75,29,69,13],[76,0,74,4,"autoConnect"],[76,6,74,4,"autoConnect"],[76,17,74,15],[76,19,74,17],[76,23,69,13],[77,0,75,4,"autoReconnect"],[77,6,75,4,"autoReconnect"],[77,19,75,17],[77,21,75,19],[77,25,69,13],[78,0,76,4,"autoSubscribeOnConnect"],[78,6,76,4,"autoSubscribeOnConnect"],[78,28,76,26],[78,30,76,28],[78,34,69,13],[79,0,77,4,"connectTimeout"],[79,6,77,4,"connectTimeout"],[79,20,77,18],[79,22,77,20],[79,27,69,13],[80,0,78,4,"ackTimeout"],[80,6,78,4,"ackTimeout"],[80,16,78,14],[80,18,78,16],[80,23,69,13],[81,0,79,4,"timestampRequests"],[81,6,79,4,"timestampRequests"],[81,23,79,21],[81,25,79,23],[81,30,69,13],[82,0,80,4,"timestampParam"],[82,6,80,4,"timestampParam"],[82,20,80,18],[82,22,80,20],[82,25,69,13],[83,0,81,4,"authEngine"],[83,6,81,4,"authEngine"],[83,16,81,14],[83,18,81,16],[83,22,69,13],[84,0,82,4,"authTokenName"],[84,6,82,4,"authTokenName"],[84,19,82,17],[84,21,82,19],[84,46,69,13],[85,0,83,4,"binaryType"],[85,6,83,4,"binaryType"],[85,16,83,14],[85,18,83,16],[85,31,69,13],[86,0,84,4,"multiplex"],[86,6,84,4,"multiplex"],[86,15,84,13],[86,17,84,15],[86,21,69,13],[87,0,85,4,"pubSubBatchDuration"],[87,6,85,4,"pubSubBatchDuration"],[87,25,85,23],[87,27,85,25],[87,31,69,13],[88,0,86,4,"cloneData"],[88,6,86,4,"cloneData"],[88,15,86,13],[88,17,86,15],[89,0,69,13],[89,5,69,2],[91,0,88,2],[91,9,88,7],[91,13,88,11,"i"],[91,14,88,2],[91,18,88,16,"options"],[91,25,88,2],[91,27,88,25],[92,0,89,4],[92,10,89,8,"options"],[92,17,89,15],[92,18,89,16,"hasOwnProperty"],[92,32,89,8],[92,33,89,31,"i"],[92,34,89,8],[92,35,89,4],[92,37,89,35],[93,0,90,6,"opts"],[93,8,90,6,"opts"],[93,12,90,10],[93,13,90,11,"i"],[93,14,90,10],[93,15,90,6],[93,18,90,16,"options"],[93,25,90,23],[93,26,90,24,"i"],[93,27,90,23],[93,28,90,6],[94,0,91,5],[95,0,92,3],[97,0,93,2,"opts"],[97,4,93,2,"opts"],[97,8,93,6],[97,9,93,7,"clientMap"],[97,18,93,2],[97,21,93,19,"_clients"],[97,29,93,2],[99,0,95,2],[99,8,95,6,"opts"],[99,12,95,10],[99,13,95,11,"multiplex"],[99,22,95,6],[99,27,95,25],[99,32,95,2],[99,34,95,32],[100,0,96,4,"opts"],[100,6,96,4,"opts"],[100,10,96,8],[100,11,96,9,"clientId"],[100,19,96,4],[100,22,96,20,"uuid"],[100,26,96,24],[100,27,96,25,"v4"],[100,29,96,20],[100,31,96,4],[101,0,97,4],[101,10,97,8,"socket"],[101,16,97,14],[101,19,97,17],[101,23,97,21,"SCClientSocket"],[101,37,97,17],[101,38,97,36,"opts"],[101,42,97,17],[101,43,97,4],[102,0,98,4,"_clients"],[102,6,98,4,"_clients"],[102,14,98,12],[102,15,98,13,"opts"],[102,19,98,17],[102,20,98,18,"clientId"],[102,28,98,12],[102,29,98,4],[102,32,98,30,"socket"],[102,38,98,4],[103,0,99,4],[103,13,99,11,"socket"],[103,19,99,4],[104,0,100,3],[106,0,101,2,"opts"],[106,4,101,2,"opts"],[106,8,101,6],[106,9,101,7,"clientId"],[106,17,101,2],[106,20,101,18,"getMultiplexId"],[106,34,101,32],[106,35,101,33,"opts"],[106,39,101,32],[106,40,101,2],[108,0,103,2],[108,8,103,6,"_clients"],[108,16,103,14],[108,17,103,15,"opts"],[108,21,103,19],[108,22,103,20,"clientId"],[108,30,103,14],[108,31,103,2],[108,33,103,31],[109,0,104,4],[109,10,104,8,"opts"],[109,14,104,12],[109,15,104,13,"autoConnect"],[109,26,104,4],[109,28,104,26],[110,0,105,6,"_clients"],[110,8,105,6,"_clients"],[110,16,105,14],[110,17,105,15,"opts"],[110,21,105,19],[110,22,105,20,"clientId"],[110,30,105,14],[110,31,105,6],[110,32,105,30,"connect"],[110,39,105,6],[111,0,106,5],[112,0,107,3],[112,5,103,2],[112,11,107,9],[113,0,108,4,"_clients"],[113,6,108,4,"_clients"],[113,14,108,12],[113,15,108,13,"opts"],[113,19,108,17],[113,20,108,18,"clientId"],[113,28,108,12],[113,29,108,4],[113,32,108,30],[113,36,108,34,"SCClientSocket"],[113,50,108,30],[113,51,108,49,"opts"],[113,55,108,30],[113,56,108,4],[114,0,109,3],[116,0,110,2],[116,11,110,9,"_clients"],[116,19,110,17],[116,20,110,18,"opts"],[116,24,110,22],[116,25,110,23,"clientId"],[116,33,110,17],[116,34,110,2],[117,0,111,1],[119,0,113,0],[119,11,113,9,"destroy"],[119,18,113,0],[119,19,113,17,"socket"],[119,25,113,0],[119,27,113,25],[120,0,114,2,"socket"],[120,4,114,2,"socket"],[120,10,114,8],[120,11,114,9,"destroy"],[120,18,114,2],[121,0,115,1],[123,0,117,0,"module"],[123,2,117,0,"module"],[123,8,117,6],[123,9,117,7,"exports"],[123,16,117,0],[123,19,117,17],[124,0,118,2,"create"],[124,4,118,2,"create"],[124,10,118,8],[124,12,118,10,"create"],[124,18,117,17],[125,0,119,2,"destroy"],[125,4,119,2,"destroy"],[125,11,119,9],[125,13,119,11,"destroy"],[125,20,117,17],[126,0,120,2,"clients"],[126,4,120,2,"clients"],[126,11,120,9],[126,13,120,11,"_clients"],[127,0,117,17],[127,3,117,0]]},"type":"js/module"}]}