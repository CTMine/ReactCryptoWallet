{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = pathGetter;\n\n  function pathGetter(obj, path) {\n    if (path !== '$') {\n      var paths = getPaths(path);\n\n      for (var i = 0; i < paths.length; i++) {\n        path = paths[i].toString().replace(/\\\\\"/g, '\"');\n        if (typeof obj[path] === 'undefined' && i !== paths.length - 1) continue;\n        obj = obj[path];\n      }\n    }\n\n    return obj;\n  }\n\n  function getPaths(pathString) {\n    var regex = /(?:\\.(\\w+))|(?:\\[(\\d+)\\])|(?:\\[\"((?:[^\\\\\"]|\\\\.)*)\"\\])/g;\n    var matches = [];\n    var match;\n\n    while (match = regex.exec(pathString)) {\n      matches.push(match[1] || match[2] || match[3]);\n    }\n\n    return matches;\n  }\n});","map":[[2,0,1,0,"module"],[2,2,1,0,"module"],[2,8,1,6],[2,9,1,7,"exports"],[2,16,1,0],[2,19,1,17,"pathGetter"],[2,29,1,0],[4,0,3,0],[4,11,3,9,"pathGetter"],[4,21,3,0],[4,22,3,20,"obj"],[4,25,3,0],[4,27,3,25,"path"],[4,31,3,0],[4,33,3,31],[5,0,4,2],[5,8,4,6,"path"],[5,12,4,10],[5,17,4,15],[5,20,4,2],[5,22,4,20],[6,0,5,4],[6,10,5,8,"paths"],[6,15,5,13],[6,18,5,16,"getPaths"],[6,26,5,24],[6,27,5,25,"path"],[6,31,5,24],[6,32,5,4],[8,0,6,4],[8,11,6,9],[8,15,6,13,"i"],[8,16,6,14],[8,19,6,17],[8,20,6,4],[8,22,6,20,"i"],[8,23,6,21],[8,26,6,24,"paths"],[8,31,6,29],[8,32,6,30,"length"],[8,38,6,4],[8,40,6,38,"i"],[8,41,6,39],[8,43,6,4],[8,45,6,43],[9,0,7,6,"path"],[9,8,7,6,"path"],[9,12,7,10],[9,15,7,13,"paths"],[9,20,7,18],[9,21,7,19,"i"],[9,22,7,18],[9,23,7,13],[9,24,7,22,"toString"],[9,32,7,13],[9,35,7,33,"replace"],[9,42,7,13],[9,43,7,41],[9,49,7,13],[9,51,7,49],[9,54,7,13],[9,55,7,6],[10,0,8,6],[10,12,8,10],[10,19,8,17,"obj"],[10,22,8,20],[10,23,8,21,"path"],[10,27,8,20],[10,28,8,10],[10,33,8,31],[10,44,8,10],[10,48,8,46,"i"],[10,49,8,47],[10,54,8,52,"paths"],[10,59,8,57],[10,60,8,58,"length"],[10,66,8,52],[10,69,8,67],[10,70,8,6],[10,72,8,70],[11,0,9,6,"obj"],[11,8,9,6,"obj"],[11,11,9,9],[11,14,9,12,"obj"],[11,17,9,15],[11,18,9,16,"path"],[11,22,9,15],[11,23,9,6],[12,0,10,5],[13,0,11,3],[15,0,12,2],[15,11,12,9,"obj"],[15,14,12,2],[16,0,13,1],[18,0,15,0],[18,11,15,9,"getPaths"],[18,19,15,0],[18,20,15,18,"pathString"],[18,30,15,0],[18,32,15,30],[19,0,16,2],[19,8,16,6,"regex"],[19,13,16,11],[19,16,16,14],[19,72,16,2],[20,0,17,2],[20,8,17,6,"matches"],[20,15,17,13],[20,18,17,16],[20,20,17,2],[21,0,18,2],[21,8,18,6,"match"],[21,13,18,2],[23,0,19,2],[23,11,19,9,"match"],[23,16,19,14],[23,19,19,17,"regex"],[23,24,19,22],[23,25,19,23,"exec"],[23,29,19,17],[23,30,19,28,"pathString"],[23,40,19,17],[23,41,19,2],[23,43,19,41],[24,0,20,4,"matches"],[24,6,20,4,"matches"],[24,13,20,11],[24,14,20,12,"push"],[24,18,20,4],[24,19,20,18,"match"],[24,24,20,23],[24,25,20,24],[24,26,20,23],[24,27,20,18],[24,31,20,30,"match"],[24,36,20,35],[24,37,20,36],[24,38,20,35],[24,39,20,18],[24,43,20,42,"match"],[24,48,20,47],[24,49,20,48],[24,50,20,47],[24,51,20,4],[25,0,21,3],[27,0,22,2],[27,11,22,9,"matches"],[27,18,22,2],[28,0,23,1]]},"type":"js/module"}]}