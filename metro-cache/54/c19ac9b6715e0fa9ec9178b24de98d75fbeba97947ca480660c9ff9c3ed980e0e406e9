{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var validJSONStartRegex = /^[ \\n\\r\\t]*[{\\[]/;\n\n  var arrayBufferToBase64 = function arrayBufferToBase64(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer);\n    var len = bytes.length;\n    var base64 = '';\n\n    for (var i = 0; i < len; i += 3) {\n      base64 += base64Chars[bytes[i] >> 2];\n      base64 += base64Chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += base64Chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += base64Chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n  };\n\n  var binaryToBase64Replacer = function binaryToBase64Replacer(key, value) {\n    if (global.ArrayBuffer && value instanceof global.ArrayBuffer) {\n      return {\n        base64: true,\n        data: arrayBufferToBase64(value)\n      };\n    } else if (global.Buffer) {\n      if (value instanceof global.Buffer) {\n        return {\n          base64: true,\n          data: value.toString('base64')\n        };\n      }\n\n      if (value && value.type === 'Buffer' && Array.isArray(value.data)) {\n        var rehydratedBuffer;\n\n        if (global.Buffer.from) {\n          rehydratedBuffer = global.Buffer.from(value.data);\n        } else {\n          rehydratedBuffer = new global.Buffer(value.data);\n        }\n\n        return {\n          base64: true,\n          data: rehydratedBuffer.toString('base64')\n        };\n      }\n    }\n\n    return value;\n  };\n\n  module.exports.decode = function (input) {\n    if (input == null) {\n      return null;\n    }\n\n    if (input === '#1' || input === '#2') {\n      return input;\n    }\n\n    var message = input.toString();\n\n    if (!validJSONStartRegex.test(message)) {\n      return message;\n    }\n\n    try {\n      return JSON.parse(message);\n    } catch (err) {}\n\n    return message;\n  };\n\n  module.exports.encode = function (object) {\n    if (object === '#1' || object === '#2') {\n      return object;\n    }\n\n    return JSON.stringify(object, binaryToBase64Replacer);\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"base64Chars"],[2,17,1,15],[2,20,1,18],[2,86,1,0],[3,0,2,0],[3,6,2,4,"validJSONStartRegex"],[3,25,2,23],[3,28,2,26],[3,46,2,0],[5,0,4,0],[5,6,4,4,"arrayBufferToBase64"],[5,25,4,23],[5,28,4,26],[5,37,4,4,"arrayBufferToBase64"],[5,56,4,26],[5,57,4,36,"arraybuffer"],[5,68,4,26],[5,70,4,49],[6,0,5,2],[6,8,5,6,"bytes"],[6,13,5,11],[6,16,5,14],[6,20,5,18,"Uint8Array"],[6,30,5,14],[6,31,5,29,"arraybuffer"],[6,42,5,14],[6,43,5,2],[7,0,6,2],[7,8,6,6,"len"],[7,11,6,9],[7,14,6,12,"bytes"],[7,19,6,17],[7,20,6,18,"length"],[7,26,6,2],[8,0,7,2],[8,8,7,6,"base64"],[8,14,7,12],[8,17,7,15],[8,19,7,2],[10,0,9,2],[10,9,9,7],[10,13,9,11,"i"],[10,14,9,12],[10,17,9,15],[10,18,9,2],[10,20,9,18,"i"],[10,21,9,19],[10,24,9,22,"len"],[10,27,9,2],[10,29,9,27,"i"],[10,30,9,28],[10,34,9,32],[10,35,9,2],[10,37,9,35],[11,0,10,4,"base64"],[11,6,10,4,"base64"],[11,12,10,10],[11,16,10,14,"base64Chars"],[11,27,10,25],[11,28,10,26,"bytes"],[11,33,10,31],[11,34,10,32,"i"],[11,35,10,31],[11,36,10,26],[11,40,10,38],[11,41,10,25],[11,42,10,4],[12,0,11,4,"base64"],[12,6,11,4,"base64"],[12,12,11,10],[12,16,11,14,"base64Chars"],[12,27,11,25],[12,28,11,27],[12,29,11,28,"bytes"],[12,34,11,33],[12,35,11,34,"i"],[12,36,11,33],[12,37,11,28],[12,40,11,39],[12,41,11,27],[12,46,11,45],[12,47,11,26],[12,50,11,51,"bytes"],[12,55,11,56],[12,56,11,57,"i"],[12,57,11,58],[12,60,11,61],[12,61,11,56],[12,62,11,51],[12,66,11,67],[12,67,11,25],[12,68,11,4],[13,0,12,4,"base64"],[13,6,12,4,"base64"],[13,12,12,10],[13,16,12,14,"base64Chars"],[13,27,12,25],[13,28,12,27],[13,29,12,28,"bytes"],[13,34,12,33],[13,35,12,34,"i"],[13,36,12,35],[13,39,12,38],[13,40,12,33],[13,41,12,28],[13,44,12,43],[13,46,12,27],[13,51,12,50],[13,52,12,26],[13,55,12,56,"bytes"],[13,60,12,61],[13,61,12,62,"i"],[13,62,12,63],[13,65,12,66],[13,66,12,61],[13,67,12,56],[13,71,12,72],[13,72,12,25],[13,73,12,4],[14,0,13,4,"base64"],[14,6,13,4,"base64"],[14,12,13,10],[14,16,13,14,"base64Chars"],[14,27,13,25],[14,28,13,26,"bytes"],[14,33,13,31],[14,34,13,32,"i"],[14,35,13,33],[14,38,13,36],[14,39,13,31],[14,40,13,26],[14,43,13,41],[14,45,13,25],[14,46,13,4],[15,0,14,3],[17,0,16,2],[17,8,16,7,"len"],[17,11,16,10],[17,14,16,13],[17,15,16,6],[17,20,16,20],[17,21,16,2],[17,23,16,23],[18,0,17,4,"base64"],[18,6,17,4,"base64"],[18,12,17,10],[18,15,17,13,"base64"],[18,21,17,19],[18,22,17,20,"substring"],[18,31,17,13],[18,32,17,30],[18,33,17,13],[18,35,17,33,"base64"],[18,41,17,39],[18,42,17,40,"length"],[18,48,17,33],[18,51,17,49],[18,52,17,13],[18,56,17,54],[18,59,17,4],[19,0,18,3],[19,5,16,2],[19,11,18,9],[19,15,18,13,"len"],[19,18,18,16],[19,21,18,19],[19,22,18,13],[19,27,18,25],[19,28,18,9],[19,30,18,28],[20,0,19,4,"base64"],[20,6,19,4,"base64"],[20,12,19,10],[20,15,19,13,"base64"],[20,21,19,19],[20,22,19,20,"substring"],[20,31,19,13],[20,32,19,30],[20,33,19,13],[20,35,19,33,"base64"],[20,41,19,39],[20,42,19,40,"length"],[20,48,19,33],[20,51,19,49],[20,52,19,13],[20,56,19,54],[20,60,19,4],[21,0,20,3],[23,0,22,2],[23,11,22,9,"base64"],[23,17,22,2],[24,0,23,1],[24,3,4,0],[26,0,25,0],[26,6,25,4,"binaryToBase64Replacer"],[26,28,25,26],[26,31,25,29],[26,40,25,4,"binaryToBase64Replacer"],[26,62,25,29],[26,63,25,39,"key"],[26,66,25,29],[26,68,25,44,"value"],[26,73,25,29],[26,75,25,51],[27,0,26,2],[27,8,26,6,"global"],[27,14,26,12],[27,15,26,13,"ArrayBuffer"],[27,26,26,6],[27,30,26,28,"value"],[27,35,26,33],[27,47,26,45,"global"],[27,53,26,51],[27,54,26,52,"ArrayBuffer"],[27,65,26,2],[27,67,26,65],[28,0,27,4],[28,13,27,11],[29,0,28,6,"base64"],[29,8,28,6,"base64"],[29,14,28,12],[29,16,28,14],[29,20,27,11],[30,0,29,6,"data"],[30,8,29,6,"data"],[30,12,29,10],[30,14,29,12,"arrayBufferToBase64"],[30,33,29,31],[30,34,29,32,"value"],[30,39,29,31],[31,0,27,11],[31,7,27,4],[32,0,31,3],[32,5,26,2],[32,11,31,9],[32,15,31,13,"global"],[32,21,31,19],[32,22,31,20,"Buffer"],[32,28,31,9],[32,30,31,28],[33,0,32,4],[33,10,32,8,"value"],[33,15,32,13],[33,27,32,25,"global"],[33,33,32,31],[33,34,32,32,"Buffer"],[33,40,32,4],[33,42,32,39],[34,0,33,6],[34,15,33,13],[35,0,34,8,"base64"],[35,10,34,8,"base64"],[35,16,34,14],[35,18,34,16],[35,22,33,13],[36,0,35,8,"data"],[36,10,35,8,"data"],[36,14,35,12],[36,16,35,14,"value"],[36,21,35,19],[36,22,35,20,"toString"],[36,30,35,14],[36,31,35,29],[36,39,35,14],[37,0,33,13],[37,9,33,6],[38,0,37,5],[40,0,41,4],[40,10,41,8,"value"],[40,15,41,13],[40,19,41,17,"value"],[40,24,41,22],[40,25,41,23,"type"],[40,29,41,17],[40,34,41,32],[40,42,41,8],[40,46,41,44,"Array"],[40,51,41,49],[40,52,41,50,"isArray"],[40,59,41,44],[40,60,41,58,"value"],[40,65,41,63],[40,66,41,64,"data"],[40,70,41,44],[40,71,41,4],[40,73,41,71],[41,0,42,6],[41,12,42,10,"rehydratedBuffer"],[41,28,42,6],[43,0,43,6],[43,12,43,10,"global"],[43,18,43,16],[43,19,43,17,"Buffer"],[43,25,43,10],[43,26,43,24,"from"],[43,30,43,6],[43,32,43,30],[44,0,44,8,"rehydratedBuffer"],[44,10,44,8,"rehydratedBuffer"],[44,26,44,24],[44,29,44,27,"global"],[44,35,44,33],[44,36,44,34,"Buffer"],[44,42,44,27],[44,43,44,41,"from"],[44,47,44,27],[44,48,44,46,"value"],[44,53,44,51],[44,54,44,52,"data"],[44,58,44,27],[44,59,44,8],[45,0,45,7],[45,9,43,6],[45,15,45,13],[46,0,46,8,"rehydratedBuffer"],[46,10,46,8,"rehydratedBuffer"],[46,26,46,24],[46,29,46,27],[46,33,46,31,"global"],[46,39,46,37],[46,40,46,38,"Buffer"],[46,46,46,27],[46,47,46,45,"value"],[46,52,46,50],[46,53,46,51,"data"],[46,57,46,27],[46,58,46,8],[47,0,47,7],[49,0,48,6],[49,15,48,13],[50,0,49,8,"base64"],[50,10,49,8,"base64"],[50,16,49,14],[50,18,49,16],[50,22,48,13],[51,0,50,8,"data"],[51,10,50,8,"data"],[51,14,50,12],[51,16,50,14,"rehydratedBuffer"],[51,32,50,30],[51,33,50,31,"toString"],[51,41,50,14],[51,42,50,40],[51,50,50,14],[52,0,48,13],[52,9,48,6],[53,0,52,5],[54,0,53,3],[56,0,54,2],[56,11,54,9,"value"],[56,16,54,2],[57,0,55,1],[57,3,25,0],[59,0,59,0,"module"],[59,2,59,0,"module"],[59,8,59,6],[59,9,59,7,"exports"],[59,16,59,0],[59,17,59,15,"decode"],[59,23,59,0],[59,26,59,24],[59,36,59,34,"input"],[59,41,59,24],[59,43,59,41],[60,0,60,2],[60,8,60,6,"input"],[60,13,60,11],[60,17,60,15],[60,21,60,2],[60,23,60,21],[61,0,61,3],[61,13,61,10],[61,17,61,3],[62,0,62,3],[64,0,64,2],[64,8,64,6,"input"],[64,13,64,11],[64,18,64,16],[64,22,64,6],[64,26,64,24,"input"],[64,31,64,29],[64,36,64,34],[64,40,64,2],[64,42,64,40],[65,0,65,4],[65,13,65,11,"input"],[65,18,65,4],[66,0,66,3],[68,0,67,2],[68,8,67,6,"message"],[68,15,67,13],[68,18,67,16,"input"],[68,23,67,21],[68,24,67,22,"toString"],[68,32,67,16],[68,34,67,2],[70,0,70,2],[70,8,70,6],[70,9,70,7,"validJSONStartRegex"],[70,28,70,26],[70,29,70,27,"test"],[70,33,70,7],[70,34,70,32,"message"],[70,41,70,7],[70,42,70,2],[70,44,70,42],[71,0,71,4],[71,13,71,11,"message"],[71,20,71,4],[72,0,72,3],[74,0,74,2],[74,8,74,6],[75,0,75,4],[75,13,75,11,"JSON"],[75,17,75,15],[75,18,75,16,"parse"],[75,23,75,11],[75,24,75,22,"message"],[75,31,75,11],[75,32,75,4],[76,0,76,3],[76,5,74,2],[76,6,76,4],[76,13,76,11,"err"],[76,16,76,4],[76,18,76,16],[76,19,76,18],[78,0,77,2],[78,11,77,9,"message"],[78,18,77,2],[79,0,78,1],[79,3,59,0],[81,0,88,0,"module"],[81,2,88,0,"module"],[81,8,88,6],[81,9,88,7,"exports"],[81,16,88,0],[81,17,88,15,"encode"],[81,23,88,0],[81,26,88,24],[81,36,88,34,"object"],[81,42,88,24],[81,44,88,42],[82,0,90,2],[82,8,90,6,"object"],[82,14,90,12],[82,19,90,17],[82,23,90,6],[82,27,90,25,"object"],[82,33,90,31],[82,38,90,36],[82,42,90,2],[82,44,90,42],[83,0,91,4],[83,13,91,11,"object"],[83,19,91,4],[84,0,92,3],[86,0,93,2],[86,11,93,9,"JSON"],[86,15,93,13],[86,16,93,14,"stringify"],[86,25,93,9],[86,26,93,24,"object"],[86,32,93,9],[86,34,93,32,"binaryToBase64Replacer"],[86,56,93,9],[86,57,93,2],[87,0,94,1],[87,3,88,0]]},"type":"js/module"}]}